
# The translations are partially generated by copilot

[Export.part]
en = "Export"
fr = "Exporter"
zh = "导出"

[Language.part]
en = "Language"
fr = "Langue"
zh = "语言"

[Library.part]
en = "Library"
fr = "Bibliothèque"
zh = "库"

[guides.body]
en = "\n# Guides\nWelcome to the Guides section! Here, you'll find helpful material for specific\nuser groups or use cases. Currently, two guides are available: An introduction\nto Typst for LaTeX users, and a detailed look at page setup. Feel free to\npropose other topics for guides!\n\n## List of Guides\n- [Guide for LaTeX users]($guides/guide-for-latex-users)\n- [Page setup guide]($guides/page-setup-guide)\n- [Table guide]($guides/table-guide)"
zh = "\n# 指南\n欢迎来到指南部分！在这里，您将找到针对特定用户群体或用例的有用材料。目前提供两个指南：面向 LaTeX 用户的 Typst 介绍，以及页面设置的详细说明。欢迎为指南提出其他主题！\n\n## 指南列表\n- [LaTeX 用户指南]($guides/guide-for-latex-users)\n- [页面设置指南]($guides/page-setup-guide)\n- [表格指南]($guides/table-guide)"

[guides.description]
en = "Guides for Typst."
zh = "Typst 指南。"

[guides.guide-for-latex-users.body]
en = "{{typst-docs/guides.guide-for-latex-users.body.toml}}"

[guides.guide-for-latex-users.description]
en = "Are you a LaTeX user? This guide explains the differences and\nsimilarities between Typst and LaTeX so you can get started quickly.\n"
zh = "您是 LaTeX 用户吗？本指南解释了 Typst 和 LaTeX 之间的差异和相似之处，让您能够快速上手。\n"

[guides.guide-for-latex-users.title]
en = "Guide for LaTeX users"
zh = "LaTeX 用户指南"

[guides.page-setup-guide.body]
en = "{{typst-docs/guides.page-setup-guide.body.toml}}"

[guides.page-setup-guide.description]
en = "An in-depth guide to setting page dimensions, margins, and page numbers in\nTypst. Learn how to create appealing and clear layouts and get there quickly.\n"
zh = "关于在 Typst 中设置页面尺寸、边距和页码的深入指南。学习如何创建吸引人且清晰的布局，并快速实现。\n"

[guides.page-setup-guide.title]
en = "Page setup guide"
zh = "页面设置指南"

[guides.table-guide.body]
en = "{{typst-docs/guides.table-guide.body.toml}}"

[guides.table-guide.description]
en = "Not sure how to change table strokes? Need to rotate a table? This guide\nexplains all you need to know about tables in Typst.\n"
zh = "不知道如何更改表格边框？需要旋转表格？本指南解释了您需要了解的有关 Typst 中表格的所有信息。\n"

[guides.table-guide.title]
en = "Table guide"
zh = "表格指南"

[guides.title]
en = "Guides"
zh = "指南"

[index.body]
en = "\n# Overview\nWelcome to Typst's documentation! Typst is a new markup-based typesetting system\nfor the sciences. It is designed to be an alternative both to advanced tools\nlike LaTeX and simpler tools like Word and Google Docs. Our goal with Typst is\nto build a typesetting tool that is highly capable _and_ a pleasure to use.\n\nThis documentation is split into two parts: A beginner-friendly tutorial that\nintroduces Typst through a practical use case and a comprehensive reference that\nexplains all of Typst's concepts and features.\n\nWe also invite you to join the community we're building around Typst. Typst is\nstill a very young project, so your feedback is more than valuable."
zh = "\n# 概述\n欢迎来到 Typst 的文档！Typst 是一个新的基于标记的排版系统，专为科学界设计。它旨在成为 LaTeX 等高级工具和 Word、Google Docs 等简单工具的替代品。我们使用 Typst 的目标是构建一个既强大又易于使用的排版工具。\n\n本文件分为两部分：一个面向初学者的教程，通过实际用例介绍 Typst，一个全面的参考文献，解释了 Typst 的所有概念和功能。\n\n我们还邀请您加入我们围绕 Typst 建立的社区。Typst 仍然是一个非常年轻的项目，因此您的反馈比以往任何时候都更有价值。"

[index.description]
en = "Learn how to use Typst to compose documents faster. Get started with the\ntutorial, or dive into the reference.\n"
zh = "了解如何使用 Typst 更快地撰写文档。通过教程入门，或深入参考。\n"

[index.title]
en = "Overview"
zh = "概述"

[reference.body]
en = "\n# Reference\nThis reference documentation is a comprehensive guide to all of Typst's syntax,\nconcepts, types, and functions. If you are completely new to Typst, we recommend\nstarting with the [tutorial] and then coming back to the reference to learn more\nabout Typst's features as you need them.\n\n## Language\nThe reference starts with a language part that gives an overview over\n[Typst's syntax]($syntax) and contains information about concepts involved in\n[styling documents,]($styling) using\n[Typst's scripting capabilities.]($scripting)\n\n## Functions\nThe second part includes chapters on all functions used to insert, style, transform,\nand layout content in Typst documents. Each function is documented with a\ndescription of its purpose, a list of its parameters, and examples of how to use\nit.\n\nThe final part of the reference explains all functions that are used within\nTypst's code mode to manipulate and transform data. Just as in the previous\npart, each function is documented with a description of its purpose, a list of\nits parameters, and examples of how to use it."
zh = "\n# 参考\n本参考文档是对 Typst 所有语法、概念、类型和函数的全面指南。如果您完全不熟悉 Typst，我们建议您从 [教程] 开始，然后返回参考以根据需要了解更多关于 Typst 的功能。\n\n## 语言\n参考文献部分介绍了 [Typst 的语法]($syntax) 并包含有关涉及到的概念的信息\n[样式文档,]($styling) 使用\n[Typst 的脚本功能.]($scripting)\n\n## 函数\n第二部分包括关于用于插入、样式、转换和布局内容的所有函数的章节\n和 Typst 文档中的内容。每个函数都用其目的的描述进行文档编制，「参数」（[parameter](#x-term-parameter)）列表，以及如何使用它的示例。\n\n参考文献的最后一部分解释了在 Typst 的代码模式中使用的所有函数，以操纵和转换数据。与前面的部分一样，每个函数都用其目的的描述进行文档编制，参数列表，以及如何使用它的示例。"

[reference.context.body]
en = "{{typst-docs/reference.context.body.toml}}"

[reference.context.description]
en = "How to deal with content that reacts to its location in the document.\n"
zh = "如何处理对文档中位置做出反应的内容。\n"

[reference.context.title]
en = "Context"
zh = "上下文"

[reference.data-loading.cbor.cbor.decode.data.details]
en = "CBOR data."
zh = "CBOR 数据。"

[reference.data-loading.cbor.cbor.decode.deprecation]
en = "`cbor.decode` is deprecated, directly pass bytes to `cbor` instead"
zh = "`cbor.decode` 已弃用，请直接将字节传递给 `cbor`。"

[reference.data-loading.cbor.cbor.decode.details]
en = "Reads structured data from CBOR bytes."
zh = "从 CBOR 字节中读取结构化数据。"

[reference.data-loading.cbor.cbor.decode.oneliner]
en = "Reads structured data from CBOR bytes."
zh = "从 CBOR 字节中读取结构化数据。"

[reference.data-loading.cbor.cbor.decode.title]
en = "Decode CBOR"
zh = "解码 CBOR"

[reference.data-loading.cbor.cbor.details]
en = "Reads structured data from a CBOR file.\n\nThe file must contain a valid CBOR serialization. Mappings will be\nconverted into Typst dictionaries, and sequences will be converted into\nTypst arrays. Strings and booleans will be converted into the Typst\nequivalents, null-values (`null`, `~` or empty ``) will be converted into\n`{none}`, and numbers will be converted to floats or integers depending on\nwhether they are whole numbers.\n\nBe aware that integers larger than 2<sup>63</sup>-1 will be converted to\nfloating point numbers, which may result in an approximative value."
zh = "从 CBOR 文件中读取结构化数据。\n\n文件必须包含有效的 CBOR 序列化。映射将被转换为 Typst 「字典」（[dictionary](#x-term-dictionary)），序列将被转换为 Typst 数组。字符串和布尔值将被转换为 Typst 等效值，空值（`null`、`~` 或空 ``）将被转换为 `{none}`，数字将根据是否为整数转换为浮点数或整数。\n\n请注意，大于 2<sup>63</sup>-1 的整数将被转换为浮点数，这可能会导致近似值。"

[reference.data-loading.cbor.cbor.encode.details]
en = "Encode structured data into CBOR bytes."
zh = "将结构化数据编码为 CBOR 字节。"

[reference.data-loading.cbor.cbor.encode.oneliner]
en = "Encode structured data into CBOR bytes."
zh = "将结构化数据编码为 CBOR 字节。"

[reference.data-loading.cbor.cbor.encode.title]
en = "Encode CBOR"
zh = "编码 CBOR"

[reference.data-loading.cbor.cbor.encode.value.details]
en = "Value to be encoded."
zh = "要编码的值。"

[reference.data-loading.cbor.cbor.oneliner]
en = "Reads structured data from a CBOR file."
zh = "从 CBOR 文件中读取结构化数据。"

[reference.data-loading.cbor.cbor.source.details]
en = "A [path]($syntax/#paths) to a CBOR file or raw CBOR bytes."
zh = "CBOR 文件的 [路径]($syntax/#paths) 或原始 CBOR 字节。"

[reference.data-loading.cbor.cbor.title]
en = "CBOR"
zh = "CBOR"

[reference.data-loading.cbor.description]
en = "Documentation for the `cbor` function."
zh = "`cbor` 函数的文档。"

[reference.data-loading.cbor.oneliner]
en = "Reads structured data from a CBOR file."
zh = "从 CBOR 文件中读取结构化数据。"

[reference.data-loading.cbor.title]
en = "CBOR"
zh = "CBOR"

[reference.data-loading.csv.csv.decode.data.details]
en = "CSV data."
zh = "CSV 数据。"

[reference.data-loading.csv.csv.decode.delimiter.details]
en = "The delimiter that separates columns in the CSV file.\nMust be a single ASCII character."
zh = "分隔 CSV 文件中列的「分隔符」（[delimiter](#x-term-delimiter)）。\n必须是单个 ASCII 字符。"

[reference.data-loading.csv.csv.decode.deprecation]
en = "`csv.decode` is deprecated, directly pass bytes to `csv` instead"
zh = "`csv.decode` 已弃用，请直接将字节传递给 `csv`。"

[reference.data-loading.csv.csv.decode.details]
en = "Reads structured data from a CSV string/bytes."
zh = "从 CSV 字符串/字节中读取结构化数据。"

[reference.data-loading.csv.csv.decode.oneliner]
en = "Reads structured data from a CSV string/bytes."
zh = "从 CSV 字符串/字节中读取结构化数据。"

[reference.data-loading.csv.csv.decode.row-type.details]
en = "How to represent the file's rows.\n\n- If set to `array`, each row is represented as a plain array of\n  strings.\n- If set to `dictionary`, each row is represented as a dictionary\n  mapping from header keys to strings. This option only makes sense\n  when a header row is present in the CSV file."
zh = "如何表示文件的行。\n\n- 如果设置为 `array`，每行表示为一个简单的字符串数组。\n- 如果设置为 `dictionary`，每行表示为一个「字典」（[dictionary](#x-term-dictionary)），将标题键映射到字符串。这种选项仅在 CSV 文件中存在标题行时有意义。"

[reference.data-loading.csv.csv.decode.title]
en = "Decode CSV"
zh = "解码 CSV"

[reference.data-loading.csv.csv.delimiter.details]
en = "The delimiter that separates columns in the CSV file.\nMust be a single ASCII character."
zh = "分隔 CSV 文件中列的「分隔符」（[delimiter](#x-term-delimiter)）。\n必须是单个 ASCII 字符。"

[reference.data-loading.csv.csv.details]
en = "Reads structured data from a CSV file.\n\nThe CSV file will be read and parsed into a 2-dimensional array of strings:\nEach row in the CSV file will be represented as an array of strings, and all\nrows will be collected into a single array. Header rows will not be\nstripped.\n\n# Example\n```example\n#let results = csv(\"example.csv\")\n\n#table(\n  columns: 2,\n  [*Condition*], [*Result*],\n  ..results.flatten(),\n)\n```"
zh = "从 CSV 文件中读取结构化数据。\n\nCSV 文件将被读取并解析为二维字符串数组：\nCSV 文件中的每一行将表示为一个字符串数组，所有行将被收集到一个数组中。标题行不会被删除。\n\n# 示例\n```example\n#let results = csv(\"example.csv\")\n\n#table(\n  columns: 2,\n  [*Condition*], [*Result*],\n  ..results.flatten(),\n)\n```"

[reference.data-loading.csv.csv.oneliner]
en = "Reads structured data from a CSV file."
zh = "从 CSV 文件中读取结构化数据。"

[reference.data-loading.csv.csv.row-type.details]
en = "How to represent the file's rows.\n\n- If set to `array`, each row is represented as a plain array of\n  strings.\n- If set to `dictionary`, each row is represented as a dictionary\n  mapping from header keys to strings. This option only makes sense when\n  a header row is present in the CSV file."
zh = "如何表示文件的行。\n\n- 如果设置为 `array`，每行表示为一个简单的字符串数组。\n- 如果设置为 `dictionary`，每行表示为一个「字典」（[dictionary](#x-term-dictionary)），将标题键映射到字符串。这种选项仅在 CSV 文件中存在标题行时有意义。"

[reference.data-loading.csv.csv.source.details]
en = "A [path]($syntax/#paths) to a CSV file or raw CSV bytes."
zh = "CSV 文件的 [路径]($syntax/#paths) 或原始 CSV 字节。"

[reference.data-loading.csv.csv.title]
en = "CSV"
zh = "CSV"

[reference.data-loading.csv.description]
en = "Documentation for the `csv` function."
zh = "`csv` 函数的文档。"

[reference.data-loading.csv.oneliner]
en = "Reads structured data from a CSV file."
zh = "从 CSV 文件中读取结构化数据。"

[reference.data-loading.csv.title]
en = "CSV"
zh = "CSV"

[reference.data-loading.data-loading.details]
en = "Data loading from external files.\n\nThese functions help you with loading and embedding data, for example from the\nresults of an experiment.\n"
zh = "从外部文件加载数据。\n\n这些函数可以帮助您加载和嵌入数据，例如实验结果中的数据。\n"

[reference.data-loading.data-loading.title]
en = "Data Loading"
zh = "数据加载"

[reference.data-loading.description]
en = "Documentation for functions related to Data Loading in Typst."
zh = "Typst 中与数据加载相关的函数文档。"

[reference.data-loading.json.description]
en = "Documentation for the `json` function."
zh = "`json` 函数的文档。"

[reference.data-loading.json.json.decode.data.details]
en = "JSON data."
zh = "JSON 数据。"

[reference.data-loading.json.json.decode.deprecation]
en = "`json.decode` is deprecated, directly pass bytes to `json` instead"
zh = "`json.decode` 已弃用，请直接将字节传递给 `json`。"

[reference.data-loading.json.json.decode.details]
en = "Reads structured data from a JSON string/bytes."
zh = "从 JSON 字符串/字节中读取结构化数据。"

[reference.data-loading.json.json.decode.oneliner]
en = "Reads structured data from a JSON string/bytes."
zh = "从 JSON 字符串/字节中读取结构化数据。"

[reference.data-loading.json.json.decode.title]
en = "Decode JSON"
zh = "解码 JSON"

[reference.data-loading.json.json.details]
en = "{{typst-docs/reference.data-loading.json.json.details.toml}}"
zh = "从 JSON 文件中读取结构化数据。\n\n文件必须包含有效的 JSON 值，例如对象或数组。JSON 对象将被转换为 Typst 「字典」（[dictionary](#x-term-dictionary)），JSON 数组将被转换为 Typst 数组。字符串和布尔值将被转换为 Typst 等效值，`null` 将被转换为 `{none}`，数字将根据是否为整数转换为浮点数或整数。\n\n请注意，大于 2<sup>63</sup>-1 的整数将被转换为浮点数，这可能会导致近似值。\n\n该函数返回一个字典、数组或其他 JSON 数据类型，具体取决于 JSON 文件。\n\n示例中的 JSON 文件包含键 `temperature`、`unit` 和 `weather` 的对象。\n\n# 示例\n```example\n#let forecast(day) = block[\n  #box(square(\n    width: 2cm,\n    inset: 8pt,\n    fill: if day.weather == \"sunny\" {\n      yellow\n    } else {\n      aqua\n    },\n    align(\n      bottom + right,\n      strong(day.weather),\n    ),\n  ))\n  #h(6pt)\n  #set text(22pt, baseline: -8pt)\n  #day.temperature °#day.unit\n]\n\n#forecast(json(\"monday.json\"))\n#forecast(json(\"tuesday.json\"))\n```"

[reference.data-loading.json.json.encode.details]
en = "Encodes structured data into a JSON string."
zh = "将结构化数据编码为 JSON 字符串。"

[reference.data-loading.json.json.encode.oneliner]
en = "Encodes structured data into a JSON string."
zh = "将结构化数据编码为 JSON 字符串。"

[reference.data-loading.json.json.encode.pretty.details]
en = "Whether to pretty print the JSON with newlines and indentation."
zh = "是否使用换行和缩进美化打印 JSON。"

[reference.data-loading.json.json.encode.title]
en = "Encode JSON"
zh = "编码 JSON"

[reference.data-loading.json.json.encode.value.details]
en = "Value to be encoded."
zh = "要编码的值。"

[reference.data-loading.json.json.oneliner]
en = "Reads structured data from a JSON file."
zh = "从 JSON 文件中读取结构化数据。"

[reference.data-loading.json.json.source.details]
en = "A [path]($syntax/#paths) to a JSON file or raw JSON bytes."
zh = "JSON 文件的 [路径]($syntax/#paths) 或原始 JSON 字节。"

[reference.data-loading.json.json.title]
en = "JSON"
zh = "JSON"

[reference.data-loading.json.oneliner]
en = "Reads structured data from a JSON file."
zh = "从 JSON 文件中读取结构化数据。"

[reference.data-loading.json.title]
en = "JSON"
zh = "JSON"

[reference.data-loading.read.description]
en = "Documentation for the `read` function."
zh = "`read` 函数的文档。"

[reference.data-loading.read.oneliner]
en = "Reads plain text or data from a file."
zh = "从文件中读取纯文本或数据。"

[reference.data-loading.read.read.details]
en = "Reads plain text or data from a file.\n\nBy default, the file will be read as UTF-8 and returned as a [string]($str).\n\nIf you specify `{encoding: none}`, this returns raw [bytes] instead.\n\n# Example\n```example\nAn example for a HTML file: \\\n#let text = read(\"example.html\")\n#raw(text, lang: \"html\")\n\nRaw bytes:\n#read(\"tiger.jpg\", encoding: none)\n```"
zh = "从文件中读取纯文本或数据。\n\n默认情况下，文件将以 UTF-8 读取并返回为 [字符串]($str)。\n\n如果指定 `{encoding: none}`，则返回原始 [字节]。\n\n# 示例\n```example\nHTML 文件示例： \\\n#let text = read(\"example.html\")\n#raw(text, lang: \"html\")\n\n原始字节：\n#read(\"tiger.jpg\", encoding: none)\n```"

[reference.data-loading.read.read.encoding.details]
en = "The encoding to read the file with.\n\nIf set to `{none}`, this function returns raw bytes."
zh = "读取文件的编码。\n\n如果设置为 `{none}`，此函数返回原始字节。"

[reference.data-loading.read.read.oneliner]
en = "Reads plain text or data from a file."
zh = "从文件中读取纯文本或数据。"

[reference.data-loading.read.read.path.details]
en = "Path to a file.\n\nFor more details, see the [Paths section]($syntax/#paths)."
zh = "文件路径。\n\n更多详情，请参见 [路径部分]($syntax/#paths)。"

[reference.data-loading.read.read.title]
en = "Read"
zh = "读取"

[reference.data-loading.read.title]
en = "Read"
zh = "读取"

[reference.data-loading.title]
en = "Data Loading"
zh = "数据加载"

[reference.data-loading.toml.description]
en = "Documentation for the `toml` function."
zh = "`toml` 函数的文档。"

[reference.data-loading.toml.oneliner]
en = "Reads structured data from a TOML file."
zh = "从 TOML 文件中读取结构化数据。"

[reference.data-loading.toml.title]
en = "TOML"
zh = "TOML"

[reference.data-loading.toml.toml.decode.data.details]
en = "TOML data."
zh = "TOML 数据。"

[reference.data-loading.toml.toml.decode.deprecation]
en = "`toml.decode` is deprecated, directly pass bytes to `toml` instead"
zh = "`toml.decode` 已弃用，请直接将字节传递给 `toml`。"

[reference.data-loading.toml.toml.decode.details]
en = "Reads structured data from a TOML string/bytes."
zh = "从 TOML 字符串/字节中读取结构化数据。"

[reference.data-loading.toml.toml.decode.oneliner]
en = "Reads structured data from a TOML string/bytes."
zh = "从 TOML 字符串/字节中读取结构化数据。"

[reference.data-loading.toml.toml.decode.title]
en = "Decode TOML"
zh = "解码 TOML"

[reference.data-loading.toml.toml.details]
en = "Reads structured data from a TOML file.\n\nThe file must contain a valid TOML table. TOML tables will be converted into\nTypst dictionaries, and TOML arrays will be converted into Typst arrays.\nStrings, booleans and datetimes will be converted into the Typst equivalents\nand numbers will be converted to floats or integers depending on whether\nthey are whole numbers.\n\nThe TOML file in the example consists of a table with the keys `title`,\n`version`, and `authors`.\n\n# Example\n```example\n#let details = toml(\"details.toml\")\n\nTitle: #details.title \\\nVersion: #details.version \\\nAuthors: #(details.authors\n  .join(\", \", last: \" and \"))\n```"
zh = "从 TOML 文件中读取结构化数据。\n\n文件必须包含有效的 TOML 表。TOML 表将被转换为 Typst 「字典」（[dictionary](#x-term-dictionary)），TOML 数组将被转换为 Typst 数组。字符串、布尔值和日期时间将被转换为 Typst 等效值，数字将根据是否为整数转换为浮点数或整数。\n\n示例中的 TOML 文件包含 `title`、`version` 和 `authors` 键的表。\n\n# 示例\n```example\n#let details = toml(\"details.toml\")\n\nTitle: #details.title \\\nVersion: #details.version \\\nAuthors: #(details.authors\n  .join(\", \", last: \" and \"))\n```"

[reference.data-loading.toml.toml.encode.details]
en = "Encodes structured data into a TOML string."
zh = "将结构化数据编码为 TOML 字符串。"

[reference.data-loading.toml.toml.encode.oneliner]
en = "Encodes structured data into a TOML string."
zh = "将结构化数据编码为 TOML 字符串。"

[reference.data-loading.toml.toml.encode.pretty.details]
en = "Whether to pretty-print the resulting TOML."
zh = "是否美化打印生成的 TOML。"

[reference.data-loading.toml.toml.encode.title]
en = "Encode TOML"
zh = "编码 TOML"

[reference.data-loading.toml.toml.encode.value.details]
en = "Value to be encoded."
zh = "要编码的值。"

[reference.data-loading.toml.toml.oneliner]
en = "Reads structured data from a TOML file."
zh = "从 TOML 文件中读取结构化数据。"

[reference.data-loading.toml.toml.source.details]
en = "A [path]($syntax/#paths) to a TOML file or raw TOML bytes."
zh = "TOML 文件的 [路径]($syntax/#paths) 或原始 TOML 字节。"

[reference.data-loading.toml.toml.title]
en = "TOML"
zh = "TOML"

[reference.data-loading.xml.description]
en = "Documentation for the `xml` function."
zh = "`xml` 函数的文档。"

[reference.data-loading.xml.oneliner]
en = "Reads structured data from an XML file."
zh = "从 XML 文件中读取结构化数据。"

[reference.data-loading.xml.title]
en = "XML"
zh = "XML"

[reference.data-loading.xml.xml.decode.data.details]
en = "XML data."
zh = "XML 数据。"

[reference.data-loading.xml.xml.decode.deprecation]
en = "`xml.decode` is deprecated, directly pass bytes to `xml` instead"
zh = "`xml.decode` 已弃用，请直接将字节传递给 `xml`。"

[reference.data-loading.xml.xml.decode.details]
en = "Reads structured data from an XML string/bytes."
zh = "从 XML 字符串/字节中读取结构化数据。"

[reference.data-loading.xml.xml.decode.oneliner]
en = "Reads structured data from an XML string/bytes."
zh = "从 XML 字符串/字节中读取结构化数据。"

[reference.data-loading.xml.xml.decode.title]
en = "Decode XML"
zh = "解码 XML"

[reference.data-loading.xml.xml.details]
en = "{{typst-docs/reference.data-loading.xml.xml.details.toml}}"
zh = "从 XML 文件中读取结构化数据。\n\nXML 文件被解析为「字典」（[dictionary](#x-term-dictionary)）和字符串数组。XML 节点可以是元素或字符串。元素表示为具有以下键的字典：\n\n- `tag`：元素的名称，字符串类型。\n- `attrs`：元素属性的字典，字符串类型。\n- `children`：元素子节点的数组。\n\n示例中的 XML 文件包含一个根 `news` 标签，其中有多个 `article` 标签。每个文章都有一个 `title`、`author` 和 `content` 标签。`content` 标签包含一个或多个段落，表示为 `p` 标签。\n\n# 示例\n```example\n#let find-child(elem, tag) = {\n  elem.children\n    .find(e => \"tag\" in e and e.tag == tag)\n}\n\n#let article(elem) = {\n  let title = find-child(elem, \"title\")\n  let author = find-child(elem, \"author\")\n  let pars = find-child(elem, \"content\")\n\n  heading(title.children.first())\n  text(10pt, weight: \"medium\")[\n    Published by\n    #author.children.first()\n  ]\n\n  for p in pars.children {\n    if (type(p) == \"dictionary\") {\n      parbreak()\n      p.children.first()\n    }\n  }\n}\n\n#let data = xml(\"example.xml\")\n#for elem in data.first().children {\n  if (type(elem) == \"dictionary\") {\n    article(elem)\n  }\n}\n```"

[reference.data-loading.xml.xml.oneliner]
en = "Reads structured data from an XML file."
zh = "从 XML 文件中读取结构化数据。"

[reference.data-loading.xml.xml.source.details]
en = "A [path]($syntax/#paths) to an XML file or raw XML bytes."
zh = "XML 文件的 [路径]($syntax/#paths) 或原始 XML 字节。"

[reference.data-loading.xml.xml.title]
en = "XML"
zh = "XML"

[reference.data-loading.yaml.description]
en = "Documentation for the `yaml` function."
zh = "`yaml` 函数的文档。"

[reference.data-loading.yaml.oneliner]
en = "Reads structured data from a YAML file."
zh = "从 YAML 文件中读取结构化数据。"

[reference.data-loading.yaml.title]
en = "YAML"
zh = "YAML"

[reference.data-loading.yaml.yaml.decode.data.details]
en = "YAML data."
zh = "YAML 数据。"

[reference.data-loading.yaml.yaml.decode.deprecation]
en = "`yaml.decode` is deprecated, directly pass bytes to `yaml` instead"
zh = "`yaml.decode` 已弃用，请直接将字节传递给 `yaml`。"

[reference.data-loading.yaml.yaml.decode.details]
en = "Reads structured data from a YAML string/bytes."
zh = "从 YAML 字符串/字节中读取结构化数据。"

[reference.data-loading.yaml.yaml.decode.oneliner]
en = "Reads structured data from a YAML string/bytes."
zh = "从 YAML 字符串/字节中读取结构化数据。"

[reference.data-loading.yaml.yaml.decode.title]
en = "Decode YAML"
zh = "解码 YAML"

[reference.data-loading.yaml.yaml.details]
en = "{{typst-docs/reference.data-loading.yaml.yaml.details.toml}}"
zh = "从 YAML 文件中读取结构化数据。\n\n文件必须包含有效的 YAML 对象或数组。YAML 映射将被转换为 Typst 「字典」（[dictionary](#x-term-dictionary)），YAML 序列将被转换为 Typst 数组。字符串和布尔值将被转换为 Typst 等效值，空值（`null`、`~` 或空 ``）将被转换为 `{none}`，数字将根据是否为整数转换为浮点数或整数。自定义 YAML 标签将被忽略，但加载的值仍然存在。\n\n请注意，大于 2<sup>63</sup>-1 的整数将被转换为浮点数，这可能会导致近似值。\n\n示例中的 YAML 文件包含以作者为键的对象，每个作者都有一个包含键 \"title\" 和 \"published\" 的子映射序列。\n\n# 示例\n```example\n#let bookshelf(contents) = {\n  for (author, works) in contents {\n    author\n    for work in works [\n      - #work.title (#work.published)\n    ]\n  }\n}\n\n#bookshelf(\n  yaml(\"scifi-authors.yaml\")\n)\n```"

[reference.data-loading.yaml.yaml.encode.details]
en = "Encode structured data into a YAML string."
zh = "将结构化数据编码为 YAML 字符串。"

[reference.data-loading.yaml.yaml.encode.oneliner]
en = "Encode structured data into a YAML string."
zh = "将结构化数据编码为 YAML 字符串。"

[reference.data-loading.yaml.yaml.encode.title]
en = "Encode YAML"
zh = "编码 YAML"

[reference.data-loading.yaml.yaml.encode.value.details]
en = "Value to be encoded."
zh = "要编码的值。"

[reference.data-loading.yaml.yaml.oneliner]
en = "Reads structured data from a YAML file."
zh = "从 YAML 文件中读取结构化数据。"

[reference.data-loading.yaml.yaml.source.details]
en = "A [path]($syntax/#paths) to a YAML file or raw YAML bytes."
zh = "YAML 文件的 [路径]($syntax/#paths) 或原始 YAML 字节。"

[reference.data-loading.yaml.yaml.title]
en = "YAML"
zh = "YAML"

[reference.description]
en = "The Typst reference is a systematic and comprehensive guide to the Typst\ntypesetting language.\n"
zh = "Typst 参考文档是对 Typst 排版语言的系统和全面的指南。\n"

[reference.foundations.arguments.arguments.arguments.arguments.details]
en = "The arguments to construct."
zh = "构造的参数。"

[reference.foundations.arguments.arguments.arguments.details]
en = "Construct spreadable arguments in place.\n\nThis function behaves like `{let args(..sink) = sink}`.\n\n"
zh = "在原地构造「可展开」（[spreadable](#x-term-spreadable)）的「参数」（[argument](#x-term-argument)）。\n\n此函数的行为类似于 `{let args(..sink) = sink}`。\n\n"

[reference.foundations.arguments.arguments.arguments.oneliner]
en = "Construct spreadable arguments in place."
zh = "在原地构造「可展开」（[spreadable](#x-term-spreadable)）的「参数」（[argument](#x-term-argument)）。"

[reference.foundations.arguments.arguments.arguments.title]
en = "Construct"
zh = "构造"

[reference.foundations.arguments.arguments.at.default.details]
en = "A default value to return if the key is invalid."
zh = "如果键无效，则返回默认值。"

[reference.foundations.arguments.arguments.at.details]
en = "Returns the positional argument at the specified index, or the named\nargument with the specified name.\n\nIf the key is an [integer]($int), this is equivalent to first calling\n[`pos`]($arguments.pos) and then [`array.at`]. If it is a [string]($str),\nthis is equivalent to first calling [`named`]($arguments.named) and then\n[`dictionary.at`]."
zh = "返回指定索引处的「位置参数」（[positional argument](#x-term-positional)），或具有指定名称的「命名参数」（[named parameter](#x-term-named)）。\n\n如果键是 [整数]($int)，这相当于先调用 [`pos`]($arguments.pos)，然后调用 [`array.at`]。如果是 [字符串]($str)，这相当于先调用 [`named`]($arguments.named)，然后调用 [`dictionary.at`]。"

[reference.foundations.arguments.arguments.at.key.details]
en = "The index or name of the argument to get."
zh = "要获取的参数的索引或名称。"

[reference.foundations.arguments.arguments.at.oneliner]
en = "Returns the positional argument at the specified index, or the named"
zh = "返回指定索引处的「位置参数」（[positional argument](#x-term-positional)），或具有指定名称的「命名参数」（[named parameter](#x-term-named)）。"

[reference.foundations.arguments.arguments.at.title]
en = "At"
zh = "在"

[reference.foundations.arguments.arguments.details]
en = "{{typst-docs/reference.foundations.arguments.arguments.details.toml}}"

[reference.foundations.arguments.arguments.named.details]
en = "Returns the captured named arguments as a dictionary."
zh = "将捕获的「命名参数」（[named parameter](#x-term-named)）作为「字典」（[dictionary](#x-term-dictionary)）返回。"

[reference.foundations.arguments.arguments.named.oneliner]
en = "Returns the captured named arguments as a dictionary."
zh = "将捕获的「命名参数」（[named parameter](#x-term-named)）作为「字典」（[dictionary](#x-term-dictionary)）返回。"

[reference.foundations.arguments.arguments.named.title]
en = "Named"
zh = "「通过名称传入的」（[named](#x-term-named)）"

[reference.foundations.arguments.arguments.oneliner]
en = "Captured arguments to a function."
zh = "捕获函数的「参数」（[argument](#x-term-argument)）。"

[reference.foundations.arguments.arguments.pos.details]
en = "Returns the captured positional arguments as an array."
zh = "将捕获的「位置参数」（[positional argument](#x-term-positional)）作为数组返回。"

[reference.foundations.arguments.arguments.pos.oneliner]
en = "Returns the captured positional arguments as an array."
zh = "将捕获的「位置参数」（[positional argument](#x-term-positional)）作为数组返回。"

[reference.foundations.arguments.arguments.pos.title]
en = "Positional"
zh = "「通过位置传入的」（[positional](#x-term-positional)）"

[reference.foundations.arguments.arguments.title]
en = "Arguments"
zh = "参数"

[reference.foundations.arguments.description]
en = "Documentation for the Arguments type."
zh = "Arguments 类型的文档。"

[reference.foundations.arguments.oneliner]
en = "Captured arguments to a function."
zh = "捕获函数的「参数」（[argument](#x-term-argument)）。"

[reference.foundations.arguments.title]
en = "Arguments"
zh = "参数"

[reference.foundations.array.array.all.details]
en = "Whether the given function returns `{true}` for all items in the array."
zh = "给定函数是否对数组中的所有项返回 `{true}`。"

[reference.foundations.array.array.all.oneliner]
en = "Whether the given function returns `{true}` for all items in the array."
zh = "给定函数是否对数组中的所有项返回 `{true}`。"

[reference.foundations.array.array.all.test.details]
en = "The function to apply to each item. Must return a boolean."
zh = "应用于每个项的函数。必须返回布尔值。"

[reference.foundations.array.array.all.title]
en = "All"
zh = "全部"

[reference.foundations.array.array.any.details]
en = "Whether the given function returns `{true}` for any item in the array."
zh = "给定函数是否对数组中的任何项返回 `{true}`。"

[reference.foundations.array.array.any.oneliner]
en = "Whether the given function returns `{true}` for any item in the array."
zh = "给定函数是否对数组中的任何项返回 `{true}`。"

[reference.foundations.array.array.any.test.details]
en = "The function to apply to each item. Must return a boolean."
zh = "应用于每个项的函数。必须返回布尔值。"

[reference.foundations.array.array.any.title]
en = "Any"
zh = "任意"

[reference.foundations.array.array.array.details]
en = "Converts a value to an array.\n\nNote that this function is only intended for conversion of a collection-like\nvalue to an array, not for creation of an array from individual items. Use\nthe array syntax `(1, 2, 3)` (or `(1,)` for a single-element array) instead.\n\n"
zh = "将值转换为数组。\n\n请注意，此函数仅用于将类似集合的值转换为数组，而不是用于从单个项创建数组。请使用数组语法 `(1, 2, 3)`（或 `(1,)` 用于单元素数组）。\n\n"

[reference.foundations.array.array.array.oneliner]
en = "Converts a value to an array."
zh = "将值转换为数组。"

[reference.foundations.array.array.array.title]
en = "Construct"
zh = "构造"

[reference.foundations.array.array.array.value.details]
en = "The value that should be converted to an array."
zh = "应转换为数组的值。"

[reference.foundations.array.array.at.default.details]
en = "A default value to return if the index is out of bounds."
zh = "如果索引超出范围，则返回默认值。"

[reference.foundations.array.array.at.details]
en = "Returns the item at the specified index in the array. May be used on the\nleft-hand side of an assignment. Returns the default value if the index\nis out of bounds or fails with an error if no default value was\nspecified."
zh = "返回数组中指定索引处的项。可以用于赋值的左侧。如果索引超出范围，则返回默认值；如果未指定默认值，则失败并报错。"

[reference.foundations.array.array.at.index.details]
en = "The index at which to retrieve the item. If negative, indexes from\nthe back."
zh = "要检索项的索引。如果为负数，则从后面开始索引。"

[reference.foundations.array.array.at.oneliner]
en = "Returns the item at the specified index in the array. May be used on the"
zh = "返回数组中指定索引处的项。可以用于"

[reference.foundations.array.array.at.title]
en = "At"
zh = "在"

[reference.foundations.array.array.chunks.chunk-size.details]
en = "How many elements each chunk may at most contain."
zh = "每个「分块」（[chunk](#x-term-chunk)）最多可以包含多少元素。"

[reference.foundations.array.array.chunks.details]
en = "Splits an array into non-overlapping chunks, starting at the beginning,\nending with a single remainder chunk.\n\nAll chunks but the last have `chunk-size` elements.\nIf `exact` is set to `{true}`, the remainder is dropped if it\ncontains less than `chunk-size` elements.\n\n"
zh = "将数组拆分为不重叠的「分块」（[chunk](#x-term-chunk)），从头开始，以一个剩余分块结束。\n\n除最后一个分块外，所有分块都具有 `chunk-size` 元素。\n如果 `exact` 设置为 `{true}`，则如果剩余分块包含的元素少于 `chunk-size`，则将其丢弃。\n\n"

[reference.foundations.array.array.chunks.exact.details]
en = "Whether to keep the remainder if its size is less than `chunk-size`."
zh = "如果剩余「分块」（[chunk](#x-term-chunk)）的大小小于 `chunk-size`，是否保留它。"

[reference.foundations.array.array.chunks.oneliner]
en = "Splits an array into non-overlapping chunks, starting at the beginning,"
zh = "将数组拆分为不重叠的「分块」（[chunk](#x-term-chunk)），从头开始，"

[reference.foundations.array.array.chunks.title]
en = "Chunks"
zh = "分块"

[reference.foundations.array.array.contains.details]
en = "Whether the array contains the specified value.\n\nThis method also has dedicated syntax: You can write `{2 in (1, 2, 3)}`\ninstead of `{(1, 2, 3).contains(2)}`."
zh = "数组是否包含指定的值。\n\n此方法还有专用语法：您可以写 `{2 in (1, 2, 3)}` 而不是 `{(1, 2, 3).contains(2)}`。"

[reference.foundations.array.array.contains.oneliner]
en = "Whether the array contains the specified value."
zh = "数组是否包含指定的值。"

[reference.foundations.array.array.contains.title]
en = "Contains"
zh = "包含"

[reference.foundations.array.array.contains.value.details]
en = "The value to search for."
zh = "要搜索的值。"

[reference.foundations.array.array.dedup.details]
en = "Deduplicates all items in the array.\n\nReturns a new array with all duplicate items removed. Only the first\nelement of each duplicate is kept.\n\n"
zh = "去除数组中的所有重复项。\n\n返回一个新数组，删除所有重复项。仅保留每个重复项的第一个元素。\n\n"

[reference.foundations.array.array.dedup.key.details]
en = "If given, applies this function to the elements in the array to\ndetermine the keys to deduplicate by."
zh = "如果给定，将此函数应用于数组中的元素以确定去重的键。"

[reference.foundations.array.array.dedup.oneliner]
en = "Deduplicates all items in the array."
zh = "去除数组中的所有重复项。"

[reference.foundations.array.array.dedup.title]
en = "Deduplicate"
zh = "去重"

[reference.foundations.array.array.details]
en = "{{typst-docs/reference.foundations.array.array.details.toml}}"
zh = "一系列值。\n\n您可以通过将以逗号分隔的值序列括在括号中来构造数组。值不必是相同类型。\n\n您可以使用 `.at()` 方法访问和更新数组项。索引是从零开始的，负索引从数组末尾开始。您可以使用 [for 循环]($scripting/#loops) 迭代数组。数组可以使用 `+` 运算符相加，[连接在一起]($scripting/#blocks) 并与整数相乘。\n\n**注意：** 长度为一的数组需要一个尾随逗号，如 `{(1,)}`。这是为了与简单的括号表达式（如 `{(1 + 2) * 3}`）区分开来。空数组写作 `{()}`。\n\n# 示例\n```example\n#let values = (1, 7, 4, -3, 2)\n\n#values.at(0) \\\n#(values.at(0) = 3)\n#values.at(-1) \\\n#values.find(calc.even) \\\n#values.filter(calc.odd) \\\n#values.map(calc.abs) \\\n#values.rev() \\\n#(1, (2, 3)).flatten() \\\n#((\"A\", \"B\", \"C\")\n    .join(\", \", last: \" and \"))\n```"

[reference.foundations.array.array.enumerate.details]
en = "Returns a new array with the values alongside their indices.\n\nThe returned array consists of `(index, value)` pairs in the form of\nlength-2 arrays. These can be [destructured]($scripting/#bindings) with\na let binding or for loop."
zh = "返回一个包含值及其索引的新数组。\n\n返回的数组由 `(index, value)` 对组成，形式为长度为 2 的数组。这些可以通过 let「绑定」（[binding](#x-term-binding)）或 for 循环进行「解构」（[destructured](#x-term-destructured)）。"

[reference.foundations.array.array.enumerate.oneliner]
en = "Returns a new array with the values alongside their indices."
zh = "返回一个包含值及其索引的新数组。"

[reference.foundations.array.array.enumerate.start.details]
en = "The index returned for the first pair of the returned list."
zh = "返回列表中第一个对的索引。"

[reference.foundations.array.array.enumerate.title]
en = "Enumerate"
zh = "枚举"

[reference.foundations.array.array.filter.details]
en = "Produces a new array with only the items from the original one for which\nthe given function returns true."
zh = "生成一个新数组，其中仅包含给定函数返回 true 的原始数组中的项。"

[reference.foundations.array.array.filter.oneliner]
en = "Produces a new array with only the items from the original one for which"
zh = "生成一个新数组，其中仅包含给定函数返回 true 的原始数组中的项。"

[reference.foundations.array.array.filter.test.details]
en = "The function to apply to each item. Must return a boolean."
zh = "应用于每个项的函数。必须返回布尔值。"

[reference.foundations.array.array.filter.title]
en = "Filter"
zh = "过滤"

[reference.foundations.array.array.find.details]
en = "Searches for an item for which the given function returns `{true}` and\nreturns the first match or `{none}` if there is no match."
zh = "搜索给定函数返回 `{true}` 的项，并返回第一个匹配项，如果没有匹配项，则返回 `{none}`。"

[reference.foundations.array.array.find.oneliner]
en = "Searches for an item for which the given function returns `{true}` and"
zh = "搜索给定函数返回 `{true}` 的项，并返回第一个匹配项，如果没有匹配项，则返回 `{none}`。"

[reference.foundations.array.array.find.searcher.details]
en = "The function to apply to each item. Must return a boolean."
zh = "应用于每个项的函数。必须返回布尔值。"

[reference.foundations.array.array.find.title]
en = "Find"
zh = "查找"

[reference.foundations.array.array.first.details]
en = "Returns the first item in the array. May be used on the left-hand side\nof an assignment. Fails with an error if the array is empty."
zh = "返回数组中的第一个项。可以置于赋值号的左侧（例如：`arr.first() = 0`）。如果数组为空，则失败并报错。"

[reference.foundations.array.array.first.oneliner]
en = "Returns the first item in the array. May be used on the left-hand side"
zh = "返回数组中的第一个项。可以置于赋值号的左侧（例如：`arr.first() = 0`）。如果数组为空，则失败并报错。"

[reference.foundations.array.array.first.title]
en = "First"
zh = "第一个"

[reference.foundations.array.array.flatten.details]
en = "Combine all nested arrays into a single flat one."
zh = "将所有嵌套数组合并为一个单一的平面数组。"

[reference.foundations.array.array.flatten.oneliner]
en = "Combine all nested arrays into a single flat one."
zh = "将所有嵌套数组合并为一个单一的平面数组。"

[reference.foundations.array.array.flatten.title]
en = "Flatten"
zh = "扁平化"

[reference.foundations.array.array.fold.details]
en = "Folds all items into a single value using an accumulator function."
zh = "使用累加器函数（即传入的函数参数）将所有项折叠为一个值。"

[reference.foundations.array.array.fold.folder.details]
en = "The folding function. Must have two parameters: One for the\naccumulated value and one for an item."
zh = "折叠函数。必须有两个「参数」（[parameter](#x-term-parameter)）：一个用于累加值，一个用于项。"

[reference.foundations.array.array.fold.init.details]
en = "The initial value to start with."
zh = "开始时的初始值。"

[reference.foundations.array.array.fold.oneliner]
en = "Folds all items into a single value using an accumulator function."
zh = "使用累加器函数（即传入的函数参数）将所有项折叠为一个值。"

[reference.foundations.array.array.fold.title]
en = "Fold"
zh = "折叠"

[reference.foundations.array.array.insert.details]
en = "Inserts a value into the array at the specified index, shifting all\nsubsequent elements to the right. Fails with an error if the index is\nout of bounds.\n\nTo replace an element of an array, use [`at`]($array.at)."
zh = "在指定索引处将一个值插入数组，所有后续元素向右移动。如果索引超出范围，则失败并报错。\n\n要替换数组的元素，请使用 [`at`]($array.at)。"

[reference.foundations.array.array.insert.index.details]
en = "The index at which to insert the item. If negative, indexes from\nthe back."
zh = "插入项的索引。如果为负数，则从后面开始索引。"

[reference.foundations.array.array.insert.oneliner]
en = "Inserts a value into the array at the specified index, shifting all"
zh = "在指定索引处将一个值插入数组，所有后续元素向右移动。"

[reference.foundations.array.array.insert.title]
en = "Insert"
zh = "插入"

[reference.foundations.array.array.insert.value.details]
en = "The value to insert into the array."
zh = "要插入数组的值。"

[reference.foundations.array.array.intersperse.details]
en = "Returns an array with a copy of the separator value placed between\nadjacent elements."
zh = "返回一个数组，在相邻元素之间放置分隔符值（[separator](#x-term-separator)）的副本。"

[reference.foundations.array.array.intersperse.oneliner]
en = "Returns an array with a copy of the separator value placed between"
zh = "返回一个数组，在相邻元素之间放置分隔符值（[separator](#x-term-separator)）的副本。"

[reference.foundations.array.array.intersperse.separator.details]
en = "The value that will be placed between each adjacent element."
zh = "分隔符值（[separator](#x-term-separator)），即将放置在每个相邻元素之间的值。"

[reference.foundations.array.array.intersperse.title]
en = "Intersperse"
zh = "Intersperse"

[reference.foundations.array.array.join.details]
en = "Combine all items in the array into one."
zh = "将数组中的所有项组合成一个。"

[reference.foundations.array.array.join.last.details]
en = "An alternative separator between the last two items."
zh = "使用此参数值而非 `separator` 作为最后两项之间的替代分隔符（[separator](#x-term-separator)）。"

[reference.foundations.array.array.join.oneliner]
en = "Combine all items in the array into one."
zh = "将数组中的所有项组合成一个。"

[reference.foundations.array.array.join.separator.details]
en = "A value to insert between each item of the array."
zh = "分隔符值（[separator](#x-term-separator)），即要插入数组每项之间的值。"

[reference.foundations.array.array.join.title]
en = "Join"
zh = "连接"

[reference.foundations.array.array.last.details]
en = "Returns the last item in the array. May be used on the left-hand side of\nan assignment. Fails with an error if the array is empty."
zh = "返回数组中的最后一项。可以置于赋值号的左侧（例如：`arr.last() = 0`）。如果数组中没有项，则失败并报错。"

[reference.foundations.array.array.last.oneliner]
en = "Returns the last item in the array. May be used on the left-hand side of"
zh = "返回数组中的最后一项。可以置于赋值号的左侧（例如：`arr.last() = 0`）。"

[reference.foundations.array.array.last.title]
en = "Last"
zh = "最后一项"

[reference.foundations.array.array.len.details]
en = "The number of values in the array."
zh = "数组中的值的数量。"

[reference.foundations.array.array.len.oneliner]
en = "The number of values in the array."
zh = "数组中的值的数量。"

[reference.foundations.array.array.len.title]
en = "Length"
zh = "长度"

[reference.foundations.array.array.map.details]
en = "Produces a new array in which all items from the original one were\ntransformed with the given function."
zh = "生成一个新数组，其中原数组中的每一项都通过给定函数进行了转换。"

[reference.foundations.array.array.map.mapper.details]
en = "The function to apply to each item."
zh = "应用于每个项的函数。"

[reference.foundations.array.array.map.oneliner]
en = "Produces a new array in which all items from the original one were"
zh = "生成一个新数组，其中原数组中的每一项都"

[reference.foundations.array.array.map.title]
en = "Map"
zh = "映射"

[reference.foundations.array.array.oneliner]
en = "A sequence of values."
zh = "一系列值。"

[reference.foundations.array.array.pop.details]
en = "Removes the last item from the array and returns it. Fails with an error\nif the array is empty."
zh = "移除数组中的最后一项并返回它。如果数组为空，则失败并报错。"

[reference.foundations.array.array.pop.oneliner]
en = "Removes the last item from the array and returns it. Fails with an error"
zh = "移除数组中的最后一项并返回它。如果数组为空，则失败并报错。"

[reference.foundations.array.array.pop.title]
en = "Pop"
zh = "弹出"

[reference.foundations.array.array.position.details]
en = "Searches for an item for which the given function returns `{true}` and\nreturns the index of the first match or `{none}` if there is no match."
zh = "搜索给定函数返回 `{true}` 的项，并返回第一个匹配项的索引，如果没有匹配项，则返回 `{none}`。"

[reference.foundations.array.array.position.oneliner]
en = "Searches for an item for which the given function returns `{true}` and"
zh = "搜索给定函数返回 `{true}` 的项，并返回第一个匹配项的索引，如果没有匹配项，则返回 `{none}`。"

[reference.foundations.array.array.position.searcher.details]
en = "The function to apply to each item. Must return a boolean."
zh = "应用于每个项的函数。必须返回布尔值。"

[reference.foundations.array.array.position.title]
en = "Position"
zh = "查找项的位置"

[reference.foundations.array.array.product.default.details]
en = "What to return if the array is empty. Must be set if the array can\nbe empty."
zh = "如果数组为空，则返回默认值。当数组可能为空时，必须设置此参数。"

[reference.foundations.array.array.product.details]
en = "Calculates the product all items (works for all types that can be\nmultiplied)."
zh = "计算所有项的乘积（适用于所有可以相乘的类型）。"

[reference.foundations.array.array.product.oneliner]
en = "Calculates the product all items (works for all types that can be"
zh = "计算所有项的乘积（适用于所有可以相乘的类型）。"

[reference.foundations.array.array.product.title]
en = "Product"
zh = "乘积"

[reference.foundations.array.array.push.details]
en = "Adds a value to the end of the array."
zh = "将一个值添加到数组的末尾。"

[reference.foundations.array.array.push.oneliner]
en = "Adds a value to the end of the array."
zh = "将一个值添加到数组的末尾。"

[reference.foundations.array.array.push.title]
en = "Push"
zh = "推入"

[reference.foundations.array.array.push.value.details]
en = "The value to insert at the end of the array."
zh = "要插入数组末尾的值。"

[reference.foundations.array.array.range.details]
en = "Create an array consisting of a sequence of numbers.\n\nIf you pass just one positional parameter, it is interpreted as the\n`end` of the range. If you pass two, they describe the `start` and `end`\nof the range.\n\nThis function is available both in the array function's scope and\nglobally.\n\n"
zh = "生成一系列连续的整数。\n\n如果只传递一个「位置参数」（[positional parameter](#x-term-positional)），则参数确定所创建范围的 `end`（范围结束的整数），且 `start` 为 0。如果传递两个参数，则参数分别确定范围的 `start` 和 `end`（范围起始和结束的整数）。\n\n此函数在数组函数的作用域和全局范围内均可用。\n\n"

[reference.foundations.array.array.range.end.details]
en = "The end of the range (exclusive)."
zh = "范围结束的位置（不包括`end`本身）。"

[reference.foundations.array.array.range.oneliner]
en = "Create an array consisting of a sequence of numbers."
zh = "生成一系列连续的整数。"

[reference.foundations.array.array.range.start.details]
en = "The start of the range (inclusive)."
zh = "范围起始的整数（包括`start`本身）。"

[reference.foundations.array.array.range.step.details]
en = "The distance between the generated numbers."
zh = "生成的数字的「步长」（[step](#x-term-step)），即相邻两个整数之间的差值，默认为 1。"

[reference.foundations.array.array.range.title]
en = "Range"
zh = "范围"

[reference.foundations.array.array.reduce.details]
en = "Reduces the elements to a single one, by repeatedly applying a reducing\noperation.\n\nIf the array is empty, returns `{none}`, otherwise, returns the result\nof the reduction.\n\nThe reducing function is a closure with two arguments: an \"accumulator\",\nand an element.\n\nFor arrays with at least one element, this is the same as [`array.fold`]\nwith the first element of the array as the initial accumulator value,\nfolding every subsequent element into it."
zh = "通过反复应用减少操作，将元素减少为一个。\n\n如果数组为空，则返回 `{none}`，否则返回减少的结果。\n\n减少函数是一个带有两个参数的闭包：“累加器”和一个元素。\n\n对于至少有一个元素的数组，这与 [`array.fold`] 相同，第一个元素作为初始累加器值，将每个后续元素折叠到其中。"

[reference.foundations.array.array.reduce.oneliner]
en = "Reduces the elements to a single one, by repeatedly applying a reducing"
zh = "通过反复应用减少操作，将元素减少为一个。"

[reference.foundations.array.array.reduce.reducer.details]
en = "The reducing function. Must have two parameters: One for the\naccumulated value and one for an item."
zh = "减少函数。必须有两个「参数」（[parameter](#x-term-parameter)）：一个用于累加值，一个用于项。"

[reference.foundations.array.array.reduce.title]
en = "Reduce"
zh = "减少"

[reference.foundations.array.array.remove.default.details]
en = "A default value to return if the index is out of bounds."
zh = "如果索引超出范围，则返回默认值。"

[reference.foundations.array.array.remove.details]
en = "Removes the value at the specified index from the array and return it."
zh = "从数组中删除指定索引处的值并返回它。"

[reference.foundations.array.array.remove.index.details]
en = "The index at which to remove the item. If negative, indexes from\nthe back."
zh = "要删除项的索引。如果为负数，则从后面开始索引。"

[reference.foundations.array.array.remove.oneliner]
en = "Removes the value at the specified index from the array and return it."
zh = "从数组中删除指定索引处的值并返回它。"

[reference.foundations.array.array.remove.title]
en = "Remove"
zh = "删除"

[reference.foundations.array.array.rev.details]
en = "Return a new array with the same items, but in reverse order."
zh = "返回一个包含相同项的新数组，但顺序相反。"

[reference.foundations.array.array.rev.oneliner]
en = "Return a new array with the same items, but in reverse order."
zh = "返回一个包含相同项的新数组，但顺序相反。"

[reference.foundations.array.array.rev.title]
en = "Reverse"
zh = "反转"

[reference.foundations.array.array.slice.count.details]
en = "The number of items to extract. This is equivalent to passing\n`start + count` as the `end` position. Mutually exclusive with `end`."
zh = "要提取的项数。这相当于传递 `start + count` 作为 `end` 位置。与 `end` 互斥。"

[reference.foundations.array.array.slice.details]
en = "Extracts a subslice of the array. Fails with an error if the start or end\nindex is out of bounds."
zh = "提取「数组」（[array](#x-term-array)）的子切片。如果开始或结束索引超出范围，则失败并报错。"

[reference.foundations.array.array.slice.end.details]
en = "The end index (exclusive). If omitted, the whole slice until the end\nof the array is extracted. If negative, indexes from the back."
zh = "结束索引且「不包括本身」（[exclusive](#x-term-exclusive)）。如果省略，则提取直到「数组」（[array](#x-term-array)）末尾的整个切片。如果为负数，则从后面开始索引。"

[reference.foundations.array.array.slice.oneliner]
en = "Extracts a subslice of the array. Fails with an error if the start or end"
zh = "提取「数组」（[array](#x-term-array)）的子切片。如果开始或结束索引超出范围，则失败并报错。"

[reference.foundations.array.array.slice.start.details]
en = "The start index (inclusive). If negative, indexes from the back."
zh = "开始索引（包括）。如果为负数，则从后面开始索引。"

[reference.foundations.array.array.slice.title]
en = "Slice"
zh = "切片"

[reference.foundations.array.array.sorted.details]
en = "Return a sorted version of this array, optionally by a given key\nfunction. The sorting algorithm used is stable.\n\nReturns an error if two values could not be compared or if the key\nfunction (if given) yields an error.\n\nTo sort according to multiple criteria at once, e.g. in case of equality\nbetween some criteria, the key function can return an array. The results\nare in lexicographic order.\n\n"
zh = "返回此数组的排序版本，可选地通过给定的键函数。使用的排序算法是稳定的。\n\n如果两个值无法比较或键函数（如果给定）产生错误，则返回错误。\n\n要根据多个标准同时排序，例如在某些标准相等的情况下，键函数可以返回一个数组。结果按字典顺序排列。\n\n"

[reference.foundations.array.array.sorted.key.details]
en = "If given, applies this function to the elements in the array to\ndetermine the keys to sort by."
zh = "如果给定，将此函数应用于数组中的元素以确定排序的键。"

[reference.foundations.array.array.sorted.oneliner]
en = "Return a sorted version of this array, optionally by a given key"
zh = "返回此数组的排序版本，可选地通过给定的键"

[reference.foundations.array.array.sorted.title]
en = "Sorted"
zh = "排序"

[reference.foundations.array.array.split.at.details]
en = "The value to split at."
zh = "要拆分的值。"

[reference.foundations.array.array.split.details]
en = "Split the array at occurrences of the specified value."
zh = "在指定值出现的位置拆分数组。"

[reference.foundations.array.array.split.oneliner]
en = "Split the array at occurrences of the specified value."
zh = "在指定值出现的位置拆分数组。"

[reference.foundations.array.array.split.title]
en = "Split"
zh = "拆分"

[reference.foundations.array.array.sum.default.details]
en = "What to return if the array is empty. Must be set if the array can\nbe empty."
zh = "如果数组为空，则返回什么。如果数组可能为空，则必须设置。"

[reference.foundations.array.array.sum.details]
en = "Sums all items (works for all types that can be added)."
zh = "求和所有项（适用于所有可以相加的类型）。"

[reference.foundations.array.array.sum.oneliner]
en = "Sums all items (works for all types that can be added)."
zh = "求和所有项（适用于所有可以相加的类型）。"

[reference.foundations.array.array.sum.title]
en = "Sum"
zh = "求和"

[reference.foundations.array.array.title]
en = "Array"
zh = "数组"

[reference.foundations.array.array.to-dict.details]
en = "Converts an array of pairs into a dictionary.\nThe first value of each pair is the key, the second the value.\n\nIf the same key occurs multiple times, the last value is selected.\n\n"
zh = "将每一项都是「键值对」（[pair](#x-term-pair)）的「数组」（[array](#x-term-array)）转换为「字典」（[dictionary](#x-term-dictionary)）。\n每个键值对的第一个值是键，第二个是值。\n\n如果同一个键出现多次，则选择最后一个值。\n\n"

[reference.foundations.array.array.to-dict.oneliner]
en = "Converts an array of pairs into a dictionary."
zh = "将每一项都是「键值对」（[pair](#x-term-pair)）的「数组」（[array](#x-term-array)）转换为「字典」（[dictionary](#x-term-dictionary)）。"

[reference.foundations.array.array.to-dict.title]
en = "To Dict"
zh = "转换为「字典」（[dictionary](#x-term-dictionary)）"

[reference.foundations.array.array.windows.details]
en = "Returns sliding windows of `window-size` elements over an array.\n\nIf the array length is less than `window-size`, this will return an empty array.\n\n"
zh = "返回数组上 `window-size` 元素的滑动窗口。\n\n如果数组长度小于 `window-size`，则返回一个空数组。\n\n"

[reference.foundations.array.array.windows.oneliner]
en = "Returns sliding windows of `window-size` elements over an array."
zh = "返回数组上 `window-size` 元素的滑动窗口。"

[reference.foundations.array.array.windows.title]
en = "Windows"
zh = "窗口"

[reference.foundations.array.array.windows.window-size.details]
en = "How many elements each window will contain."
zh = "每个窗口包含多少元素。"

[reference.foundations.array.array.zip.details]
en = "Zips the array with other arrays.\n\nReturns an array of arrays, where the `i`th inner array contains all the\n`i`th elements from each original array.\n\nIf the arrays to be zipped have different lengths, they are zipped up to\nthe last element of the shortest array and all remaining elements are\nignored.\n\nThis function is variadic, meaning that you can zip multiple arrays\ntogether at once: `{(1, 2).zip((\"A\", \"B\"), (10, 20))}` yields\n`{((1, \"A\", 10), (2, \"B\", 20))}`."
zh = "将「数组」（[array](#x-term-array)）与其他数组「同时迭代」（[zip](#x-term-zip)）。\n\n返回一个数组数组，其中第 `i` 个内部数组包含每个原始数组的第 `i` 个元素。\n\n如果要「同时迭代」的数组长度不同，则迭代到最短数组的最后一个元素，所有剩余元素将被忽略。\n\n此函数是可变参数的，意味着您可以一次将多个数组「同时迭代」在一起：`{(1, 2).zip((\"A\", \"B\"), (10, 20))}` 产生 `{((1, \"A\", 10), (2, \"B\", 20))}`。"

[reference.foundations.array.array.zip.exact.details]
en = "Whether all arrays have to have the same length.\nFor example, `{(1, 2).zip((1, 2, 3), exact: true)}` produces an\nerror."
zh = "是否所有「数组」（[array](#x-term-array)）必须具有相同的「长度」（[length](#x-term-length)）。\n例如，`{(1, 2).zip((1, 2, 3), exact: true)}` 会产生错误。"

[reference.foundations.array.array.zip.oneliner]
en = "Zips the array with other arrays."
zh = "将「数组」（[array](#x-term-array)）与其他数组「同时迭代」（[zip](#x-term-zip)）。"

[reference.foundations.array.array.zip.others.details]
en = "The arrays to zip with."
zh = "被「同时迭代」（[zip](#x-term-zip)）的「数组」（[array](#x-term-array)）。"

[reference.foundations.array.array.zip.title]
en = "Zip"
zh = "「同时迭代」（[zip](#x-term-zip)）"

[reference.foundations.array.description]
en = "Documentation for the Array type."
zh = "数组类型的文档。"

[reference.foundations.array.oneliner]
en = "A sequence of values."
zh = "一系列值。"

[reference.foundations.array.title]
en = "Array"
zh = "数组"

[reference.foundations.assert.assert.condition.details]
en = "The condition that must be true for the assertion to pass."
zh = "断言通过必须为真的条件。"

[reference.foundations.assert.assert.details]
en = "Ensures that a condition is fulfilled.\n\nFails with an error if the condition is not fulfilled. Does not\nproduce any output in the document.\n\nIf you wish to test equality between two values, see\n[`assert.eq`]($assert.eq) and [`assert.ne`]($assert.ne).\n\n# Example\n```typ\n#assert(1 < 2, message: \"math broke\")\n```"
zh = "确保条件得到满足。\n\n如果条件不满足，则失败并报错。在文档中不产生任何输出。\n\n如果您希望测试两个值之间的相等性，请参见 [`assert.eq`]($assert.eq) 和 [`assert.ne`]($assert.ne)。\n\n# 示例\n```typ\n#assert(1 < 2, message: \"math broke\")\n```"

[reference.foundations.assert.assert.eq.details]
en = "Ensures that two values are equal.\n\nFails with an error if the first value is not equal to the second. Does not\nproduce any output in the document.\n\n"
zh = "确保两个值相等。\n\n如果第一个值不等于第二个值，则失败并报错。在文档中不产生任何输出。\n\n"

[reference.foundations.assert.assert.eq.left.details]
en = "The first value to compare."
zh = "要比较的第一个值。"

[reference.foundations.assert.assert.eq.message.details]
en = "An optional message to display on error instead of the representations\nof the compared values."
zh = "在错误时显示的可选消息，而不是比较值的表示。"

[reference.foundations.assert.assert.eq.oneliner]
en = "Ensures that two values are equal."
zh = "确保两个值相等。"

[reference.foundations.assert.assert.eq.right.details]
en = "The second value to compare."
zh = "要比较的第二个值。"

[reference.foundations.assert.assert.eq.title]
en = "Assert Equal"
zh = "断言相等"

[reference.foundations.assert.assert.message.details]
en = "The error message when the assertion fails."
zh = "断言失败时的错误消息。"

[reference.foundations.assert.assert.ne.details]
en = "Ensures that two values are not equal.\n\nFails with an error if the first value is equal to the second. Does not\nproduce any output in the document.\n\n"
zh = "确保两个值不相等。\n\n如果第一个值等于第二个值，则失败并报错。在文档中不产生任何输出。\n\n"

[reference.foundations.assert.assert.ne.left.details]
en = "The first value to compare."
zh = "要比较的第一个值。"

[reference.foundations.assert.assert.ne.message.details]
en = "An optional message to display on error instead of the representations\nof the compared values."
zh = "在错误时显示的可选消息，而不是比较值的表示。"

[reference.foundations.assert.assert.ne.oneliner]
en = "Ensures that two values are not equal."
zh = "确保两个值不相等。"

[reference.foundations.assert.assert.ne.right.details]
en = "The second value to compare."
zh = "要比较的第二个值。"

[reference.foundations.assert.assert.ne.title]
en = "Assert Not Equal"
zh = "断言不相等"

[reference.foundations.assert.assert.oneliner]
en = "Ensures that a condition is fulfilled."
zh = "确保条件得到满足。"

[reference.foundations.assert.assert.title]
en = "Assert"
zh = "断言"

[reference.foundations.assert.description]
en = "Documentation for the `assert` function."
zh = "`assert` 函数的文档。"

[reference.foundations.assert.oneliner]
en = "Ensures that a condition is fulfilled."
zh = "确保条件得到满足。"

[reference.foundations.assert.title]
en = "Assert"
zh = "断言"

[reference.foundations.auto.auto.details]
en = "A value that indicates a smart default.\n\nThe auto type has exactly one value: `{auto}`.\n\nParameters that support the `{auto}` value have some smart default or\ncontextual behaviour. A good example is the [text direction]($text.dir)\nparameter. Setting it to `{auto}` lets Typst automatically determine the\ndirection from the [text language]($text.lang)."
zh = "表示智能默认值的值。\n\nauto 类型只有一个值：`{auto}`。\n\n支持 `{auto}` 值的「参数」（[parameter](#x-term-parameter)）具有一些智能默认或上下文行为。一个很好的例子是 [文本方向]($text.dir) 参数。将其设置为 `{auto}` 让 Typst 自动从 [文本语言]($text.lang) 中确定方向。"

[reference.foundations.auto.auto.oneliner]
en = "A value that indicates a smart default."
zh = "表示智能默认值的值。"

[reference.foundations.auto.auto.title]
en = "Auto"
zh = "自动"

[reference.foundations.auto.description]
en = "Documentation for the Auto type."
zh = "Auto 类型的文档。"

[reference.foundations.auto.oneliner]
en = "A value that indicates a smart default."
zh = "表示智能默认值的值。"

[reference.foundations.auto.title]
en = "Auto"
zh = "自动"

[reference.foundations.bool.bool.details]
en = "A type with two states.\n\nThe boolean type has two values: `{true}` and `{false}`. It denotes whether\nsomething is active or enabled.\n\n# Example\n```example\n#false \\\n#true \\\n#(1 < 2)\n```"
zh = "具有两种状态的类型。\n\n布尔类型有两个值：`{true}` 和 `{false}`。它表示某物是否处于活动或启用状态。\n\n# 示例\n```example\n#false \\\n#true \\\n#(1 < 2)\n```"

[reference.foundations.bool.bool.oneliner]
en = "A type with two states."
zh = "具有两种状态的类型。"

[reference.foundations.bool.bool.title]
en = "Boolean"
zh = "布尔"

[reference.foundations.bool.description]
en = "Documentation for the Boolean type."
zh = "布尔类型的文档。"

[reference.foundations.bool.oneliner]
en = "A type with two states."
zh = "具有两种状态的类型。"

[reference.foundations.bool.title]
en = "Boolean"
zh = "布尔"

[reference.foundations.bytes.bytes.at.default.details]
en = "A default value to return if the index is out of bounds."
zh = "如果索引超出范围，则返回默认值。"

[reference.foundations.bytes.bytes.at.details]
en = "Returns the byte at the specified index. Returns the default value if\nthe index is out of bounds or fails with an error if no default value\nwas specified."
zh = "返回指定索引处的字节。如果索引超出范围，则返回默认值；如果未指定默认值，则失败并报错。"

[reference.foundations.bytes.bytes.at.index.details]
en = "The index at which to retrieve the byte."
zh = "要检索字节的索引。"

[reference.foundations.bytes.bytes.at.oneliner]
en = "Returns the byte at the specified index. Returns the default value if"
zh = "返回指定索引处的字节。如果索引超出范围，则返回默认值。"

[reference.foundations.bytes.bytes.at.title]
en = "At"
zh = "在"

[reference.foundations.bytes.bytes.bytes.details]
en = "Converts a value to bytes.\n\n- Strings are encoded in UTF-8.\n- Arrays of integers between `{0}` and `{255}` are converted directly. The\n  dedicated byte representation is much more efficient than the array\n  representation and thus typically used for large byte buffers (e.g. image\n  data).\n\n"
zh = "将值转换为字节。\n\n- 字符串以 UTF-8 编码。\n- 介于 `{0}` 和 `{255}` 之间的整数数组直接转换。专用字节表示比数组表示更有效，因此通常用于大型字节缓冲区（例如图像数据）。\n\n"

[reference.foundations.bytes.bytes.bytes.oneliner]
en = "Converts a value to bytes."
zh = "将值转换为字节。"

[reference.foundations.bytes.bytes.bytes.title]
en = "Construct"
zh = "构造"

[reference.foundations.bytes.bytes.bytes.value.details]
en = "The value that should be converted to bytes."
zh = "应转换为字节的值。"

[reference.foundations.bytes.bytes.details]
en = "{{typst-docs/reference.foundations.bytes.bytes.details.toml}}"
zh = "一系列字节。\n\n这在概念上类似于介于 `{0}` 和 `{255}` 之间的 [整数]($int) 数组，但表示更有效。您可以使用 [for 循环]($scripting/#loops) 迭代它。\n\n您可以将\n- [字符串]($str) 或整数 [数组] 转换为字节，使用 [`bytes`] 构造函数\n- 字节转换为字符串，使用 [`str`] 构造函数，使用 UTF-8 编码\n- 字节转换为整数数组，使用 [`array`] 构造函数\n\n当从文件中 [读取]($read) 数据时，您可以决定是将其加载为字符串还是原始字节。\n\n```example\n#bytes((123, 160, 22, 0)) \\\n#bytes(\"Hello 😃\")\n\n#let data = read(\n  \"rhino.png\",\n  encoding: none,\n)\n\n// 魔术字节。\n#array(data.slice(0, 4)) \\\n#str(data.slice(1, 4))\n```"

[reference.foundations.bytes.bytes.len.details]
en = "The length in bytes."
zh = "字节长度。"

[reference.foundations.bytes.bytes.len.oneliner]
en = "The length in bytes."
zh = "字节长度。"

[reference.foundations.bytes.bytes.len.title]
en = "Length"
zh = "长度"

[reference.foundations.bytes.bytes.oneliner]
en = "A sequence of bytes."
zh = "一系列字节。"

[reference.foundations.bytes.bytes.slice.count.details]
en = "The number of items to extract. This is equivalent to passing\n`start + count` as the `end` position. Mutually exclusive with\n`end`."
zh = "要提取的项数。这相当于传递 `start + count` 作为 `end` 位置。与 `end` 互斥。"

[reference.foundations.bytes.bytes.slice.details]
en = "Extracts a subslice of the bytes. Fails with an error if the start or\nend index is out of bounds."
zh = "提取「字节」（[bytes](#x-term-bytes)）的子切片。如果开始或结束索引超出范围，则失败并报错。"

[reference.foundations.bytes.bytes.slice.end.details]
en = "The end index (exclusive). If omitted, the whole slice until the end\nis extracted."
zh = "结束索引且「不包括本身」（[exclusive](#x-term-exclusive)）。如果省略，则提取直到末尾的整个切片。"

[reference.foundations.bytes.bytes.slice.oneliner]
en = "Extracts a subslice of the bytes. Fails with an error if the start or"
zh = "提取「字节」（[bytes](#x-term-bytes)）的子切片。如果开始或结束索引超出范围，则失败并报错。"

[reference.foundations.bytes.bytes.slice.start.details]
en = "The start index (inclusive)."
zh = "开始索引（包括）。"

[reference.foundations.bytes.bytes.slice.title]
en = "Slice"
zh = "切片"

[reference.foundations.bytes.bytes.title]
en = "Bytes"
zh = "字节"

[reference.foundations.bytes.description]
en = "Documentation for the Bytes type."
zh = "字节类型的文档。"

[reference.foundations.bytes.oneliner]
en = "A sequence of bytes."
zh = "一系列字节。"

[reference.foundations.bytes.title]
en = "Bytes"
zh = "字节"

[reference.foundations.calc.calc.abs.details]
en = "Calculates the absolute value of a numeric value.\n\n"
zh = "计算数值的绝对值。\n\n"

[reference.foundations.calc.calc.abs.oneliner]
en = "Calculates the absolute value of a numeric value."
zh = "计算数值的绝对值。"

[reference.foundations.calc.calc.abs.title]
en = "Absolute"
zh = "绝对值"

[reference.foundations.calc.calc.abs.value.details]
en = "The value whose absolute value to calculate."
zh = "要计算绝对值的数值。"

[reference.foundations.calc.calc.acos.details]
en = "Calculates the arccosine of a number.\n\n"
zh = "计算数字的反余弦值。\n\n"

[reference.foundations.calc.calc.acos.oneliner]
en = "Calculates the arccosine of a number."
zh = "计算数字的反余弦值。"

[reference.foundations.calc.calc.acos.title]
en = "Arccosine"
zh = "反余弦"

[reference.foundations.calc.calc.acos.value.details]
en = "The number whose arcsine to calculate. Must be between -1 and 1."
zh = "要计算反余弦值的数字。必须在 -1 和 1 之间。"

[reference.foundations.calc.calc.asin.details]
en = "Calculates the arcsine of a number.\n\n"
zh = "计算数字的反正弦值。\n\n"

[reference.foundations.calc.calc.asin.oneliner]
en = "Calculates the arcsine of a number."
zh = "计算数字的反正弦值。"

[reference.foundations.calc.calc.asin.title]
en = "Arcsine"
zh = "反正弦"

[reference.foundations.calc.calc.asin.value.details]
en = "The number whose arcsine to calculate. Must be between -1 and 1."
zh = "要计算反正弦值的数字。必须在 -1 和 1 之间。"

[reference.foundations.calc.calc.atan.details]
en = "Calculates the arctangent of a number.\n\n"
zh = "计算数字的反正切值。\n\n"

[reference.foundations.calc.calc.atan.oneliner]
en = "Calculates the arctangent of a number."
zh = "计算数字的反正切值。"

[reference.foundations.calc.calc.atan.title]
en = "Arctangent"
zh = "反正切"

[reference.foundations.calc.calc.atan.value.details]
en = "The number whose arctangent to calculate."
zh = "要计算反正切值的数字。"

[reference.foundations.calc.calc.atan2.details]
en = "Calculates the four-quadrant arctangent of a coordinate.\n\nThe arguments are `(x, y)`, not `(y, x)`.\n\n"
zh = "计算坐标的四象限反正切值。\n\n「参数」（[argument](#x-term-argument)）是 `(x, y)`，而不是 `(y, x)`。\n\n"

[reference.foundations.calc.calc.atan2.oneliner]
en = "Calculates the four-quadrant arctangent of a coordinate."
zh = "计算坐标的四象限反正切值。"

[reference.foundations.calc.calc.atan2.title]
en = "Four-quadrant Arctangent"
zh = "四象限反正切"

[reference.foundations.calc.calc.atan2.x.details]
en = "The X coordinate."
zh = "X 坐标。"

[reference.foundations.calc.calc.atan2.y.details]
en = "The Y coordinate."
zh = "Y 坐标。"

[reference.foundations.calc.calc.binom.details]
en = "Calculates a binomial coefficient.\n\nReturns the `k`-combination of `n`, or the number of ways to choose `k`\nitems from a set of `n` without regard to order.\n\n"
zh = "计算二项式系数。\n\n返回 `n` 的 `k`-组合，即从 `n` 个元素的集合中选择 `k` 个元素的方法数（不考虑顺序）。\n\n"

[reference.foundations.calc.calc.binom.k.details]
en = "The lower coefficient. Must be non-negative."
zh = "下系数。必须为非负数。"

[reference.foundations.calc.calc.binom.n.details]
en = "The upper coefficient. Must be non-negative."
zh = "上系数。必须为非负数。"

[reference.foundations.calc.calc.binom.oneliner]
en = "Calculates a binomial coefficient."
zh = "计算二项式系数。"

[reference.foundations.calc.calc.binom.title]
en = "Binomial"
zh = "二项式"

[reference.foundations.calc.calc.ceil.details]
en = "Rounds a number up to the nearest integer.\n\nIf the number is already an integer, it is returned unchanged.\n\nNote that this function will always return an [integer]($int), and will\nerror if the resulting [`float`] or [`decimal`] is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.\n\n"
zh = "将数字向上舍入到最近的整数。\n\n如果数字已经是整数，则返回原值。\n\n请注意，此函数始终返回一个[整数]($int)，如果结果的 [`float`] 或 [`decimal`] 大于最大 64 位有符号整数或小于该类型的最小值，则会出错。\n\n"

[reference.foundations.calc.calc.ceil.oneliner]
en = "Rounds a number up to the nearest integer."
zh = "将数字向上舍入到最近的整数。"

[reference.foundations.calc.calc.ceil.title]
en = "Ceil"
zh = "向上取整"

[reference.foundations.calc.calc.ceil.value.details]
en = "The number to round up."
zh = "要向上舍入的数字。"

[reference.foundations.calc.calc.clamp.details]
en = "Clamps a number between a minimum and maximum value.\n\n"
zh = "将数字限制在最小值和最大值之间。\n\n"

[reference.foundations.calc.calc.clamp.max.details]
en = "The inclusive maximum value."
zh = "包含的最大值。"

[reference.foundations.calc.calc.clamp.min.details]
en = "The inclusive minimum value."
zh = "包含的最小值。"

[reference.foundations.calc.calc.clamp.oneliner]
en = "Clamps a number between a minimum and maximum value."
zh = "将数字限制在最小值和最大值之间。"

[reference.foundations.calc.calc.clamp.title]
en = "Clamp"
zh = "限制"

[reference.foundations.calc.calc.clamp.value.details]
en = "The number to clamp."
zh = "要限制的数字。"

[reference.foundations.calc.calc.cos.angle.details]
en = "The angle whose cosine to calculate."
zh = "要计算余弦值的角度。"

[reference.foundations.calc.calc.cos.details]
en = "Calculates the cosine of an angle.\n\nWhen called with an integer or a float, they will be interpreted as\nradians.\n\n"
zh = "计算角度的余弦值。\n\n当使用整数或浮点数调用时，它们将被解释为「弧度」（[radians](#x-term-radians)）。\n\n"

[reference.foundations.calc.calc.cos.oneliner]
en = "Calculates the cosine of an angle."
zh = "计算角度的余弦值。"

[reference.foundations.calc.calc.cos.title]
en = "Cosine"
zh = "余弦"

[reference.foundations.calc.calc.cosh.details]
en = "Calculates the hyperbolic cosine of a hyperbolic angle.\n\n"
zh = "计算双曲角的双曲余弦值。\n\n"

[reference.foundations.calc.calc.cosh.oneliner]
en = "Calculates the hyperbolic cosine of a hyperbolic angle."
zh = "计算双曲角的双曲余弦值。"

[reference.foundations.calc.calc.cosh.title]
en = "Hyperbolic Cosine"
zh = "双曲余弦"

[reference.foundations.calc.calc.cosh.value.details]
en = "The hyperbolic angle whose hyperbolic cosine to calculate."
zh = "要计算双曲余弦值的双曲角。"

[reference.foundations.calc.calc.details]
en = "Module for calculations and processing of numeric values.\n\nThese definitions are part of the `calc` module and not imported by default.\nIn addition to the functions listed below, the `calc` module also defines\nthe constants `pi`, `tau`, `e`, and `inf`.\n"
zh = "用于计算和处理数值的模块。\n\n这些定义属于 `calc` 模块，默认情况下不会导入。除了下面列出的函数外，`calc` 模块还定义了常量 `pi`、`tau`、`e` 和 `inf`。\n"

[reference.foundations.calc.calc.div-euclid.details]
en = "Performs euclidean division of two numbers.\n\nThe result of this computation is that of a division rounded to the integer\n`{n}` such that the dividend is greater than or equal to `{n}` times the divisor.\n\n"
zh = "执行两个数字的欧几里得除法。\n\n此计算的结果是将除法舍入到整数 `{n}`，使得被除数大于或等于 `{n}` 倍的除数。\n\n"

[reference.foundations.calc.calc.div-euclid.dividend.details]
en = "The dividend of the division."
zh = "除法的被除数。"

[reference.foundations.calc.calc.div-euclid.divisor.details]
en = "The divisor of the division."
zh = "除法的除数。"

[reference.foundations.calc.calc.div-euclid.oneliner]
en = "Performs euclidean division of two numbers."
zh = "执行两个数字的欧几里得除法。"

[reference.foundations.calc.calc.div-euclid.title]
en = "Euclidean Division"
zh = "欧几里得除法"

[reference.foundations.calc.calc.even.details]
en = "Determines whether an integer is even.\n\n"
zh = "确定整数是否为偶数。\n\n"

[reference.foundations.calc.calc.even.oneliner]
en = "Determines whether an integer is even."
zh = "确定整数是否为偶数。"

[reference.foundations.calc.calc.even.title]
en = "Even"
zh = "偶数"

[reference.foundations.calc.calc.even.value.details]
en = "The number to check for evenness."
zh = "要检查是否为偶数的数字。"

[reference.foundations.calc.calc.exp.details]
en = "Raises a value to some exponent of e.\n\n"
zh = "将值提升到 e 的某个指数。\n\n"

[reference.foundations.calc.calc.exp.exponent.details]
en = "The exponent of the power."
zh = "幂的指数。"

[reference.foundations.calc.calc.exp.oneliner]
en = "Raises a value to some exponent of e."
zh = "将值提升到 e 的某个指数。"

[reference.foundations.calc.calc.exp.title]
en = "Exponential"
zh = "指数"

[reference.foundations.calc.calc.fact.details]
en = "Calculates the factorial of a number.\n\n"
zh = "计算数字的阶乘。\n\n"

[reference.foundations.calc.calc.fact.number.details]
en = "The number whose factorial to calculate. Must be non-negative."
zh = "要计算阶乘的数字。必须为非负数。"

[reference.foundations.calc.calc.fact.oneliner]
en = "Calculates the factorial of a number."
zh = "计算数字的阶乘。"

[reference.foundations.calc.calc.fact.title]
en = "Factorial"
zh = "阶乘"

[reference.foundations.calc.calc.floor.details]
en = "Rounds a number down to the nearest integer.\n\nIf the number is already an integer, it is returned unchanged.\n\nNote that this function will always return an [integer]($int), and will\nerror if the resulting [`float`] or [`decimal`] is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.\n\n"
zh = "将数字向下舍入到最近的整数。\n\n如果数字已经是整数，则返回原值。\n\n请注意，此函数始终返回一个[整数]($int)，如果结果的 [`float`] 或 [`decimal`] 大于最大 64 位有符号整数或小于该类型的最小值，则会出错。\n\n"

[reference.foundations.calc.calc.floor.oneliner]
en = "Rounds a number down to the nearest integer."
zh = "将数字向下舍入到最近的整数。"

[reference.foundations.calc.calc.floor.title]
en = "Floor"
zh = "向下取整"

[reference.foundations.calc.calc.floor.value.details]
en = "The number to round down."
zh = "要向下舍入的数字。"

[reference.foundations.calc.calc.fract.details]
en = "Returns the fractional part of a number.\n\nIf the number is an integer, returns `0`.\n\n"
zh = "返回数字的小数部分。\n\n如果数字是整数，返回 `0`。\n\n"

[reference.foundations.calc.calc.fract.oneliner]
en = "Returns the fractional part of a number."
zh = "返回数字的小数部分。"

[reference.foundations.calc.calc.fract.title]
en = "Fractional"
zh = "小数部分"

[reference.foundations.calc.calc.fract.value.details]
en = "The number to truncate."
zh = "要截取的数字。"

[reference.foundations.calc.calc.gcd.a.details]
en = "The first integer."
zh = "第一个整数。"

[reference.foundations.calc.calc.gcd.b.details]
en = "The second integer."
zh = "第二个整数。"

[reference.foundations.calc.calc.gcd.details]
en = "Calculates the greatest common divisor of two integers.\n\n"
zh = "计算两个整数的最大公约数。\n\n"

[reference.foundations.calc.calc.gcd.oneliner]
en = "Calculates the greatest common divisor of two integers."
zh = "计算两个整数的最大公约数。"

[reference.foundations.calc.calc.gcd.title]
en = "Greatest Common Divisor"
zh = "最大公约数"

[reference.foundations.calc.calc.lcm.a.details]
en = "The first integer."
zh = "第一个整数。"

[reference.foundations.calc.calc.lcm.b.details]
en = "The second integer."
zh = "第二个整数。"

[reference.foundations.calc.calc.lcm.details]
en = "Calculates the least common multiple of two integers.\n\n"
zh = "计算两个整数的最小公倍数。\n\n"

[reference.foundations.calc.calc.lcm.oneliner]
en = "Calculates the least common multiple of two integers."
zh = "计算两个整数的最小公倍数。"

[reference.foundations.calc.calc.lcm.title]
en = "Least Common Multiple"
zh = "最小公倍数"

[reference.foundations.calc.calc.ln.details]
en = "Calculates the natural logarithm of a number.\n\n"
zh = "计算数字的自然对数。\n\n"

[reference.foundations.calc.calc.ln.oneliner]
en = "Calculates the natural logarithm of a number."
zh = "计算数字的自然对数。"

[reference.foundations.calc.calc.ln.title]
en = "Natural Logarithm"
zh = "自然对数"

[reference.foundations.calc.calc.ln.value.details]
en = "The number whose logarithm to calculate. Must be strictly positive."
zh = "要计算对数的数字。必须严格为正数。"

[reference.foundations.calc.calc.log.base.details]
en = "The base of the logarithm. May not be zero."
zh = "对数的底数。不可以为零。"

[reference.foundations.calc.calc.log.details]
en = "Calculates the logarithm of a number.\n\nIf the base is not specified, the logarithm is calculated in base 10.\n\n"
zh = "计算数字的对数。\n\n如果未指定底数，则以 10 为底计算对数。\n\n"

[reference.foundations.calc.calc.log.oneliner]
en = "Calculates the logarithm of a number."
zh = "计算数字的对数。"

[reference.foundations.calc.calc.log.title]
en = "Logarithm"
zh = "对数"

[reference.foundations.calc.calc.log.value.details]
en = "The number whose logarithm to calculate. Must be strictly positive."
zh = "要计算对数的数字。必须严格为正数。"

[reference.foundations.calc.calc.max.details]
en = "Determines the maximum of a sequence of values.\n\n"
zh = "确定值序列的最大值。\n\n"

[reference.foundations.calc.calc.max.oneliner]
en = "Determines the maximum of a sequence of values."
zh = "确定值序列的最大值。"

[reference.foundations.calc.calc.max.title]
en = "Maximum"
zh = "最大值"

[reference.foundations.calc.calc.max.values.details]
en = "The sequence of values from which to extract the maximum.\nMust not be empty."
zh = "要提取最大值的值序列。\n不能为空。"

[reference.foundations.calc.calc.min.details]
en = "Determines the minimum of a sequence of values.\n\n"
zh = "确定值序列的最小值。\n\n"

[reference.foundations.calc.calc.min.oneliner]
en = "Determines the minimum of a sequence of values."
zh = "确定值序列的最小值。"

[reference.foundations.calc.calc.min.title]
en = "Minimum"
zh = "最小值"

[reference.foundations.calc.calc.min.values.details]
en = "The sequence of values from which to extract the minimum.\nMust not be empty."
zh = "要提取最小值的值序列。\n不能为空。"

[reference.foundations.calc.calc.norm.details]
en = "Calculates the p-norm of a sequence of values.\n\n"
zh = "计算值序列的 p-范数。\n\n"

[reference.foundations.calc.calc.norm.oneliner]
en = "Calculates the p-norm of a sequence of values."
zh = "计算值序列的 p-范数。"

[reference.foundations.calc.calc.norm.p.details]
en = "The p value to calculate the p-norm of."
zh = "计算 p-范数的 p 值。"

[reference.foundations.calc.calc.norm.title]
en = "𝑝-Norm"
zh = "𝑝-范数"

[reference.foundations.calc.calc.norm.values.details]
en = "The sequence of values from which to calculate the p-norm.\nReturns `0.0` if empty."
zh = "要计算 p-范数的值序列。\n如果为空则返回 `0.0`。"

[reference.foundations.calc.calc.odd.details]
en = "Determines whether an integer is odd.\n\n"
zh = "确定整数是否为奇数。\n\n"

[reference.foundations.calc.calc.odd.oneliner]
en = "Determines whether an integer is odd."
zh = "确定整数是否为奇数。"

[reference.foundations.calc.calc.odd.title]
en = "Odd"
zh = "奇数"

[reference.foundations.calc.calc.odd.value.details]
en = "The number to check for oddness."
zh = "要检查是否为奇数的数字。"

[reference.foundations.calc.calc.perm.base.details]
en = "The base number. Must be non-negative."
zh = "基数。必须为非负数。"

[reference.foundations.calc.calc.perm.details]
en = "Calculates a permutation.\n\nReturns the `k`-permutation of `n`, or the number of ways to choose `k`\nitems from a set of `n` with regard to order.\n\n"
zh = "计算排列。\n\n返回 `n` 的 `k`-排列，即从 `n` 个元素的集合中选择 `k` 个元素的方法数（考虑顺序）。\n\n"

[reference.foundations.calc.calc.perm.numbers.details]
en = "The number of permutations. Must be non-negative."
zh = "排列的数量。必须为非负数。"

[reference.foundations.calc.calc.perm.oneliner]
en = "Calculates a permutation."
zh = "计算排列。"

[reference.foundations.calc.calc.perm.title]
en = "Permutation"
zh = "排列"

[reference.foundations.calc.calc.pow.base.details]
en = "The base of the power.\n\nIf this is a [`decimal`], the exponent can only be an [integer]($int)."
zh = "幂的底数。\n\n如果这是一个 [`decimal`]，则指数只能是[整数]($int)。"

[reference.foundations.calc.calc.pow.details]
en = "Raises a value to some exponent.\n\n"
zh = "将值提升到某个指数。\n\n"

[reference.foundations.calc.calc.pow.exponent.details]
en = "The exponent of the power."
zh = "幂的指数。"

[reference.foundations.calc.calc.pow.oneliner]
en = "Raises a value to some exponent."
zh = "将值提升到某个指数。"

[reference.foundations.calc.calc.pow.title]
en = "Power"
zh = "幂"

[reference.foundations.calc.calc.quo.details]
en = "Calculates the quotient (floored division) of two numbers.\n\nNote that this function will always return an [integer]($int), and will\nerror if the resulting [`float`] or [`decimal`] is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.\n\n"
zh = "计算两个数的商（向下除法）。\n\n注意此函数将始终返回一个[整数]($int)，如果结果「浮点数」（[`float`]）或「十进制数」（[`decimal`]）大于最大64位有符号整数或小于该类型的最小值，则会报错。\n\n"

[reference.foundations.calc.calc.quo.dividend.details]
en = "The dividend of the quotient."
zh = "商的被除数。"

[reference.foundations.calc.calc.quo.divisor.details]
en = "The divisor of the quotient."
zh = "商的除数。"

[reference.foundations.calc.calc.quo.oneliner]
en = "Calculates the quotient (floored division) of two numbers."
zh = "计算两个数的商（向下除法）。"

[reference.foundations.calc.calc.quo.title]
en = "Quotient"
zh = "商"

[reference.foundations.calc.calc.rem-euclid.details]
en = "This calculates the least nonnegative remainder of a division.\n\nWarning: Due to a floating point round-off error, the remainder may equal\nthe absolute value of the divisor if the dividend is much smaller in\nmagnitude than the divisor and the dividend is negative. This only applies\nfor floating point inputs.\n\nIn addition, this can error if given a [`decimal`] input and the dividend is\ntoo small in magnitude compared to the divisor.\n\n"
zh = "计算除法的最小非负余数。\n\n警告：由于浮点舍入误差，如果被除数的大小远小于除数且被除数为负数，余数可能等于除数的绝对值。这仅适用于浮点输入。\n\n此外，如果给定「十进制数」（[`decimal`]）输入且被除数的大小相对于除数太小，这可能会报错。\n\n"

[reference.foundations.calc.calc.rem-euclid.dividend.details]
en = "The dividend of the remainder."
zh = "余数的被除数。"

[reference.foundations.calc.calc.rem-euclid.divisor.details]
en = "The divisor of the remainder."
zh = "余数的除数。"

[reference.foundations.calc.calc.rem-euclid.oneliner]
en = "This calculates the least nonnegative remainder of a division."
zh = "计算除法的最小非负余数。"

[reference.foundations.calc.calc.rem-euclid.title]
en = "Euclidean Remainder"
zh = "欧几里得余数"

[reference.foundations.calc.calc.rem.details]
en = "Calculates the remainder of two numbers.\n\nThe value `calc.rem(x, y)` always has the same sign as `x`, and is smaller\nin magnitude than `y`.\n\nThis can error if given a [`decimal`] input and the dividend is too small in\nmagnitude compared to the divisor.\n\n"
zh = "计算两个数的余数。\n\n值 `calc.rem(x, y)` 始终与 `x` 具有相同的符号，且大小小于 `y`。\n\n如果给定「十进制数」（[`decimal`]）输入且被除数的大小相对于除数太小，这可能会报错。\n\n"

[reference.foundations.calc.calc.rem.dividend.details]
en = "The dividend of the remainder."
zh = "余数的被除数。"

[reference.foundations.calc.calc.rem.divisor.details]
en = "The divisor of the remainder."
zh = "余数的除数。"

[reference.foundations.calc.calc.rem.oneliner]
en = "Calculates the remainder of two numbers."
zh = "计算两个数的余数。"

[reference.foundations.calc.calc.rem.title]
en = "Remainder"
zh = "余数"

[reference.foundations.calc.calc.root.details]
en = "Calculates the real nth root of a number.\n\nIf the number is negative, then n must be odd.\n\n"
zh = "计算数的实数第 n 次方根。\n\n如果数为负数，则 n 必须为奇数。\n\n"

[reference.foundations.calc.calc.root.index.details]
en = "Which root of the radicand to take"
zh = "要取的被开方数的根次"

[reference.foundations.calc.calc.root.oneliner]
en = "Calculates the real nth root of a number."
zh = "计算数的实数第 n 次方根。"

[reference.foundations.calc.calc.root.radicand.details]
en = "The expression to take the root of"
zh = "要开方的表达式"

[reference.foundations.calc.calc.root.title]
en = "Root"
zh = "开方"

[reference.foundations.calc.calc.round.details]
en = "{{typst-docs/reference.foundations.calc.calc.round.details.toml}}"

[reference.foundations.calc.calc.round.digits.details]
en = "If positive, the number of decimal places.\n\nIf negative, the number of significant integer digits that should be\nremoved before the decimal point."
zh = "如果为正数，则为小数位数。\n\n如果为负数，则为应在小数点前删除的有效整数位数。"

[reference.foundations.calc.calc.round.oneliner]
en = "Rounds a number to the nearest integer away from zero."
zh = "将数字舍入到远离零的最近整数。"

[reference.foundations.calc.calc.round.title]
en = "Round"
zh = "舍入"

[reference.foundations.calc.calc.round.value.details]
en = "The number to round."
zh = "要舍入的数字。"

[reference.foundations.calc.calc.sin.angle.details]
en = "The angle whose sine to calculate."
zh = "要计算正弦值的角度。"

[reference.foundations.calc.calc.sin.details]
en = "Calculates the sine of an angle.\n\nWhen called with an integer or a float, they will be interpreted as\nradians.\n\n"
zh = "计算角度的正弦值。\n\n当使用整数或浮点数调用时，它们将被解释为「弧度」（[radians](#x-term-radians)）。\n\n"

[reference.foundations.calc.calc.sin.oneliner]
en = "Calculates the sine of an angle."
zh = "计算角度的正弦值。"

[reference.foundations.calc.calc.sin.title]
en = "Sine"
zh = "正弦"

[reference.foundations.calc.calc.sinh.details]
en = "Calculates the hyperbolic sine of a hyperbolic angle.\n\n"
zh = "计算双曲角的双曲正弦值。\n\n"

[reference.foundations.calc.calc.sinh.oneliner]
en = "Calculates the hyperbolic sine of a hyperbolic angle."
zh = "计算双曲角的双曲正弦值。"

[reference.foundations.calc.calc.sinh.title]
en = "Hyperbolic Sine"
zh = "双曲正弦"

[reference.foundations.calc.calc.sinh.value.details]
en = "The hyperbolic angle whose hyperbolic sine to calculate."
zh = "要计算双曲正弦值的双曲角。"

[reference.foundations.calc.calc.sqrt.details]
en = "Calculates the square root of a number.\n\n"
zh = "计算数的平方根。\n\n"

[reference.foundations.calc.calc.sqrt.oneliner]
en = "Calculates the square root of a number."
zh = "计算数的平方根。"

[reference.foundations.calc.calc.sqrt.title]
en = "Square Root"
zh = "平方根"

[reference.foundations.calc.calc.sqrt.value.details]
en = "The number whose square root to calculate. Must be non-negative."
zh = "要计算平方根的数。必须为非负数。"

[reference.foundations.calc.calc.tan.angle.details]
en = "The angle whose tangent to calculate."
zh = "要计算正切值的角度。"

[reference.foundations.calc.calc.tan.details]
en = "Calculates the tangent of an angle.\n\nWhen called with an integer or a float, they will be interpreted as\nradians.\n\n"
zh = "计算角度的正切值。\n\n当使用整数或浮点数调用时，它们将被解释为「弧度」（[radians](#x-term-radians)）。\n\n"

[reference.foundations.calc.calc.tan.oneliner]
en = "Calculates the tangent of an angle."
zh = "计算角度的正切值。"

[reference.foundations.calc.calc.tan.title]
en = "Tangent"
zh = "正切"

[reference.foundations.calc.calc.tanh.details]
en = "Calculates the hyperbolic tangent of an hyperbolic angle.\n\n"
zh = "计算双曲角的双曲正切值。\n\n"

[reference.foundations.calc.calc.tanh.oneliner]
en = "Calculates the hyperbolic tangent of an hyperbolic angle."
zh = "计算双曲角的双曲正切值。"

[reference.foundations.calc.calc.tanh.title]
en = "Hyperbolic Tangent"
zh = "双曲正切"

[reference.foundations.calc.calc.tanh.value.details]
en = "The hyperbolic angle whose hyperbolic tangent to calculate."
zh = "要计算双曲正切值的双曲角。"

[reference.foundations.calc.calc.title]
en = "Calculation"
zh = "计算"

[reference.foundations.calc.calc.trunc.details]
en = "Returns the integer part of a number.\n\nIf the number is already an integer, it is returned unchanged.\n\nNote that this function will always return an [integer]($int), and will\nerror if the resulting [`float`] or [`decimal`] is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.\n\n"
zh = "返回数的整数部分。\n\n如果数已经是整数，则原样返回。\n\n注意此函数将始终返回一个[整数]($int)，如果结果「浮点数」（[`float`]）或「十进制数」（[`decimal`]）大于最大64位有符号整数或小于该类型的最小值，则会报错。\n\n"

[reference.foundations.calc.calc.trunc.oneliner]
en = "Returns the integer part of a number."
zh = "返回数的整数部分。"

[reference.foundations.calc.calc.trunc.title]
en = "Truncate"
zh = "截断"

[reference.foundations.calc.calc.trunc.value.details]
en = "The number to truncate."
zh = "要截断的数。"

[reference.foundations.calc.description]
en = "Documentation for the calc functions."
zh = "计算函数的文档。"

[reference.foundations.calc.oneliner]
en = "Module for calculations and processing of numeric values."
zh = "用于计算和处理数值的模块。"

[reference.foundations.calc.title]
en = "Calculation"
zh = "计算"

[reference.foundations.content.content.at.default.details]
en = "A default value to return if the field does not exist."
zh = "如果字段不存在时返回的默认值。"

[reference.foundations.content.content.at.details]
en = "Access the specified field on the content. Returns the default value if\nthe field does not exist or fails with an error if no default value was\nspecified."
zh = "访问内容上的指定字段。如果字段不存在则返回默认值，如果没有指定默认值则失败并报错。"

[reference.foundations.content.content.at.field.details]
en = "The field to access."
zh = "要访问的字段。"

[reference.foundations.content.content.at.oneliner]
en = "Access the specified field on the content. Returns the default value if"
zh = "访问内容上的指定字段。如果"

[reference.foundations.content.content.at.title]
en = "At"
zh = "获取字段"

[reference.foundations.content.content.details]
en = "{{typst-docs/reference.foundations.content.content.details.toml}}"

[reference.foundations.content.content.fields.details]
en = "Returns the fields of this content.\n\n"
zh = "返回此内容的字段。\n\n"

[reference.foundations.content.content.fields.oneliner]
en = "Returns the fields of this content."
zh = "返回此内容的字段。"

[reference.foundations.content.content.fields.title]
en = "Fields"
zh = "字段"

[reference.foundations.content.content.func.details]
en = "The content's element function. This function can be used to create the element\ncontained in this content. It can be used in set and show rules for the\nelement. Can be compared with global functions to check whether you have\na specific\nkind of element."
zh = "内容的元素函数。此函数可用于创建此内容中包含的元素。它可以在元素的 set 和 show 规则中使用。可以与全局函数进行比较，以检查您是否有特定类型的元素。"

[reference.foundations.content.content.func.oneliner]
en = "The content's element function. This function can be used to create the element"
zh = "内容的元素函数。此函数可用于创建元素"

[reference.foundations.content.content.func.title]
en = "Func"
zh = "函数"

[reference.foundations.content.content.has.details]
en = "Whether the content has the specified field."
zh = "内容是否具有指定的字段。"

[reference.foundations.content.content.has.field.details]
en = "The field to look for."
zh = "要查找的字段。"

[reference.foundations.content.content.has.oneliner]
en = "Whether the content has the specified field."
zh = "内容是否具有指定的字段。"

[reference.foundations.content.content.has.title]
en = "Has"
zh = "拥有"

[reference.foundations.content.content.location.details]
en = "The location of the content. This is only available on content returned\nby [query] or provided by a [show rule]($reference/styling/#show-rules),\nfor other content it will be `{none}`. The resulting location can be\nused with [counters]($counter), [state] and [queries]($query)."
zh = "内容的位置。这仅在通过[查询]或[显示规则]($reference/styling/#show-rules)提供的内容上可用，对于其他内容，它将是 `{none}`。结果位置可以与[计数器]($counter)、[状态]和[查询]($query)一起使用。"

[reference.foundations.content.content.location.oneliner]
en = "The location of the content. This is only available on content returned"
zh = "内容的位置。这仅在返回的内容上可用"

[reference.foundations.content.content.location.title]
en = "Location"
zh = "位置"

[reference.foundations.content.content.oneliner]
en = "A piece of document content."
zh = "一段文档内容。"

[reference.foundations.content.content.title]
en = "Content"
zh = "内容"

[reference.foundations.content.description]
en = "Documentation for the Content type."
zh = "Content 类型的文档。"

[reference.foundations.content.oneliner]
en = "A piece of document content."
zh = "一段文档内容。"

[reference.foundations.content.title]
en = "Content"
zh = "内容"

[reference.foundations.datetime.datetime.datetime.day.details]
en = "The day of the datetime."
zh = "日期时间中的“日”。"

[reference.foundations.datetime.datetime.datetime.details]
en = "Creates a new datetime.\n\nYou can specify the [datetime] using a year, month, day, hour, minute,\nand second.\n\n_Note_: Depending on which components of the datetime you specify, Typst\nwill store it in one of the following three ways:\n* If you specify year, month and day, Typst will store just a date.\n* If you specify hour, minute and second, Typst will store just a time.\n* If you specify all of year, month, day, hour, minute and second, Typst\n  will store a full datetime.\n\nDepending on how it is stored, the [`display`]($datetime.display) method\nwill choose a different formatting by default.\n\n"
zh = "创建新的日期时间。\n\n您可以使用年、月、日、时、分和秒来指定[日期时间]。\n\n_注意_：根据您指定的日期时间组件，Typst 将以以下三种方式之一存储它：\n* 如果您指定年、月和日，Typst 将仅存储日期。\n* 如果您指定时、分和秒，Typst 将仅存储时间。\n* 如果您指定所有的年、月、日、时、分和秒，Typst 将存储完整的日期时间。\n\n根据存储方式，[`display`]($datetime.display) 方法将默认选择不同的格式。\n\n"

[reference.foundations.datetime.datetime.datetime.hour.details]
en = "The hour of the datetime."
zh = "日期时间的小时。"

[reference.foundations.datetime.datetime.datetime.minute.details]
en = "The minute of the datetime."
zh = "日期时间的分钟。"

[reference.foundations.datetime.datetime.datetime.month.details]
en = "The month of the datetime."
zh = "日期时间的月份。"

[reference.foundations.datetime.datetime.datetime.oneliner]
en = "Creates a new datetime."
zh = "创建新的日期时间。"

[reference.foundations.datetime.datetime.datetime.second.details]
en = "The second of the datetime."
zh = "日期时间的秒。"

[reference.foundations.datetime.datetime.datetime.title]
en = "Construct"
zh = "构造"

[reference.foundations.datetime.datetime.datetime.year.details]
en = "The year of the datetime."
zh = "日期时间的年份。"

[reference.foundations.datetime.datetime.day.details]
en = "The day if it was specified, or `{none}` for times without a date."
zh = "如果指定了日期，则为天数，对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.day.oneliner]
en = "The day if it was specified, or `{none}` for times without a date."
zh = "如果指定了日期，则为天数，对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.day.title]
en = "Day"
zh = "日"

[reference.foundations.datetime.datetime.details]
en = "{{typst-docs/reference.foundations.datetime.datetime.details.toml}}"

[reference.foundations.datetime.datetime.display.details]
en = "Displays the datetime in a specified format.\n\nDepending on whether you have defined just a date, a time or both, the\ndefault format will be different. If you specified a date, it will be\n`[[year]-[month]-[day]]`. If you specified a time, it will be\n`[[hour]:[minute]:[second]]`. In the case of a datetime, it will be\n`[[year]-[month]-[day] [hour]:[minute]:[second]]`.\n\nSee the [format syntax]($datetime/#format) for more information."
zh = "按指定格式显示日期时间。\n\n根据您是否仅定义了日期、时间或两者，默认格式会有所不同。如果您指定了日期，它将是 `[[year]-[month]-[day]]`。如果您指定了时间，它将是 `[[hour]:[minute]:[second]]`。对于日期时间，它将是 `[[year]-[month]-[day] [hour]:[minute]:[second]]`。\n\n有关更多信息，请参阅「格式语法」（[format syntax]($datetime/#format)）。"

[reference.foundations.datetime.datetime.display.oneliner]
en = "Displays the datetime in a specified format."
zh = "按指定格式显示日期时间。"

[reference.foundations.datetime.datetime.display.pattern.details]
en = "The format used to display the datetime."
zh = "用于显示日期时间的格式。"

[reference.foundations.datetime.datetime.display.title]
en = "Display"
zh = "显示"

[reference.foundations.datetime.datetime.hour.details]
en = "The hour if it was specified, or `{none}` for dates without a time."
zh = "如果指定了时间，则为小时，对于没有时间的日期，则为 `{none}`。"

[reference.foundations.datetime.datetime.hour.oneliner]
en = "The hour if it was specified, or `{none}` for dates without a time."
zh = "如果指定了时间，则为小时，对于没有时间的日期，则为 `{none}`。"

[reference.foundations.datetime.datetime.hour.title]
en = "Hour"
zh = "小时"

[reference.foundations.datetime.datetime.minute.details]
en = "The minute if it was specified, or `{none}` for dates without a time."
zh = "如果指定了时间，则为分钟，对于没有时间的日期，则为 `{none}`。"

[reference.foundations.datetime.datetime.minute.oneliner]
en = "The minute if it was specified, or `{none}` for dates without a time."
zh = "如果指定了时间，则为分钟，对于没有时间的日期，则为 `{none}`。"

[reference.foundations.datetime.datetime.minute.title]
en = "Minute"
zh = "分钟"

[reference.foundations.datetime.datetime.month.details]
en = "The month if it was specified, or `{none}` for times without a date."
zh = "如果指定了日期，则为月份，对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.month.oneliner]
en = "The month if it was specified, or `{none}` for times without a date."
zh = "如果指定了日期，则为月份，对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.month.title]
en = "Month"
zh = "月"

[reference.foundations.datetime.datetime.oneliner]
en = "Represents a date, a time, or a combination of both."
zh = "表示日期、时间或两者的组合。"

[reference.foundations.datetime.datetime.ordinal.details]
en = "The ordinal (day of the year), or `{none}` for times without a date."
zh = "「序数」（[ordinal](#x-term-ordinal)）（一年中的第几天），对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.ordinal.oneliner]
en = "The ordinal (day of the year), or `{none}` for times without a date."
zh = "「序数」（[ordinal](#x-term-ordinal)）（一年中的第几天），对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.ordinal.title]
en = "Ordinal"
zh = "「序数」（[ordinal](#x-term-ordinal)）"

[reference.foundations.datetime.datetime.second.details]
en = "The second if it was specified, or `{none}` for dates without a time."
zh = "如果指定了时间，则为秒，对于没有时间的日期，则为 `{none}`。"

[reference.foundations.datetime.datetime.second.oneliner]
en = "The second if it was specified, or `{none}` for dates without a time."
zh = "如果指定了时间，则为秒，对于没有时间的日期，则为 `{none}`。"

[reference.foundations.datetime.datetime.second.title]
en = "Second"
zh = "秒"

[reference.foundations.datetime.datetime.title]
en = "Datetime"
zh = "日期时间"

[reference.foundations.datetime.datetime.today.details]
en = "Returns the current date.\n\n"
zh = "返回当前日期。\n\n"

[reference.foundations.datetime.datetime.today.offset.details]
en = "An offset to apply to the current UTC date. If set to `{auto}`, the\noffset will be the local offset."
zh = "应用于当前 UTC 日期的偏移量。如果设置为 `{auto}`，偏移量将是本地偏移量。"

[reference.foundations.datetime.datetime.today.oneliner]
en = "Returns the current date."
zh = "返回当前日期。"

[reference.foundations.datetime.datetime.today.title]
en = "Today"
zh = "今天"

[reference.foundations.datetime.datetime.weekday.details]
en = "The weekday (counting Monday as 1) or `{none}` for times without a date."
zh = "星期几（周一计为 1），对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.weekday.oneliner]
en = "The weekday (counting Monday as 1) or `{none}` for times without a date."
zh = "星期几（周一计为 1），对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.weekday.title]
en = "Weekday"
zh = "星期"

[reference.foundations.datetime.datetime.year.details]
en = "The year if it was specified, or `{none}` for times without a date."
zh = "如果指定了日期，则为年份，对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.year.oneliner]
en = "The year if it was specified, or `{none}` for times without a date."
zh = "如果指定了日期，则为年份，对于没有日期的时间，则为 `{none}`。"

[reference.foundations.datetime.datetime.year.title]
en = "Year"
zh = "年"

[reference.foundations.datetime.description]
en = "Documentation for the Datetime type."
zh = "Datetime「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.datetime.oneliner]
en = "Represents a date, a time, or a combination of both."
zh = "表示日期、时间或两者的组合。"

[reference.foundations.datetime.title]
en = "Datetime"
zh = "日期时间"

[reference.foundations.decimal.decimal.decimal.details]
en = "Converts a value to a `decimal`.\n\nIt is recommended to use a string to construct the decimal number, or an\n[integer]($int) (if desired). The string must contain a number in the\nformat `{\"3.14159\"}` (or `{\"-3.141519\"}` for negative numbers). The\nfractional digits are fully preserved; if that's not possible due to the\nlimit of significant digits (around 28 to 29) having been reached, an\nerror is raised as the given decimal number wouldn't be representable.\n\nWhile this constructor can be used with [floating-point numbers]($float)\nto cast them to `decimal`, doing so is **discouraged** as **this cast is\ninherently imprecise.** It is easy to accidentally perform this cast by\nwriting `{decimal(1.234)}` (note the lack of double quotes), which is\nwhy Typst will emit a warning in that case. Please write\n`{decimal(\"1.234\")}` instead for that particular case (initialization of\na constant decimal). Also note that floats that are NaN or infinite\ncannot be cast to decimals and will raise an error.\n\n"
zh = "将值转换为「十进制数」（`decimal`）。\n\n建议使用「字符串」（[string](#x-term-string)）来构造十进制数，或者使用[整数]($int)（如果需要）。字符串必须包含格式为 `{\"3.14159\"}` 的数字（对于负数，则为 `{\"-3.141519\"}`）。小数位数完全保留；如果由于达到有效数字限制（约 28 到 29 位）而无法保留，则会引发错误，因为给定的十进制数将无法表示。\n\n虽然此构造函数可以与「浮点数」（[floating-point numbers]($float)）一起使用来将它们转换为 `decimal`，但**不建议这样做**，因为**此转换本质上是不精确的**。很容易通过编写 `{decimal(1.234)}`（注意缺少双引号）意外执行此转换，这就是 Typst 在这种情况下会发出警告的原因。对于该特定情况（常量十进制的初始化），请改写 `{decimal(\"1.234\")}`。另请注意，NaN 或无限的浮点数无法转换为十进制数，会引发错误。\n\n"

[reference.foundations.decimal.decimal.decimal.oneliner]
en = "Converts a value to a `decimal`."
zh = "将值转换为「十进制数」（`decimal`）。"

[reference.foundations.decimal.decimal.decimal.title]
en = "Construct"
zh = "构造"

[reference.foundations.decimal.decimal.decimal.value.details]
en = "The value that should be converted to a decimal."
zh = "应转换为十进制数的值。"

[reference.foundations.decimal.decimal.details]
en = "{{typst-docs/reference.foundations.decimal.decimal.details.toml}}"

[reference.foundations.decimal.decimal.oneliner]
en = "A fixed-point decimal number type."
zh = "定点十进制数「类型」（[type](#x-term-type)）。"

[reference.foundations.decimal.decimal.title]
en = "Decimal"
zh = "十进制数"

[reference.foundations.decimal.description]
en = "Documentation for the Decimal type."
zh = "Decimal「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.decimal.oneliner]
en = "A fixed-point decimal number type."
zh = "定点十进制数「类型」（[type](#x-term-type)）。"

[reference.foundations.decimal.title]
en = "Decimal"
zh = "十进制数"

[reference.foundations.description]
en = "Documentation for functions related to Foundations in Typst."
zh = "与 Typst 基础相关的函数文档。"

[reference.foundations.dictionary.description]
en = "Documentation for the Dictionary type."
zh = "Dictionary「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.dictionary.dictionary.at.default.details]
en = "A default value to return if the key is not part of the dictionary."
zh = "如果键不是「字典」（[dictionary](#x-term-dictionary)）的一部分，则返回的默认值。"

[reference.foundations.dictionary.dictionary.at.details]
en = "Returns the value associated with the specified key in the dictionary.\nMay be used on the left-hand side of an assignment if the key is already\npresent in the dictionary. Returns the default value if the key is not\npart of the dictionary or fails with an error if no default value was\nspecified."
zh = "返回「字典」（[dictionary](#x-term-dictionary)）中与指定键关联的值。\n如果键已经存在于字典中，则可用于赋值的左侧。如果键不是字典的一部分，则返回默认值，如果未指定默认值，则报错。"

[reference.foundations.dictionary.dictionary.at.key.details]
en = "The key at which to retrieve the item."
zh = "用于检索项目的键。"

[reference.foundations.dictionary.dictionary.at.oneliner]
en = "Returns the value associated with the specified key in the dictionary."
zh = "返回「字典」（[dictionary](#x-term-dictionary)）中与指定键关联的值。"

[reference.foundations.dictionary.dictionary.at.title]
en = "At"
zh = "取值"

[reference.foundations.dictionary.dictionary.details]
en = "{{typst-docs/reference.foundations.dictionary.dictionary.details.toml}}"

[reference.foundations.dictionary.dictionary.dictionary.details]
en = "Converts a value into a dictionary.\n\nNote that this function is only intended for conversion of a\ndictionary-like value to a dictionary, not for creation of a dictionary\nfrom individual pairs. Use the dictionary syntax `(key: value)` instead.\n\n"
zh = "将值转换为「字典」（[dictionary](#x-term-dictionary)）。\n\n注意此函数仅用于将类似字典的值转换为字典，而不是从单独的键值对创建字典。请改用字典语法 `(key: value)`。\n\n"

[reference.foundations.dictionary.dictionary.dictionary.oneliner]
en = "Converts a value into a dictionary."
zh = "将值转换为「字典」（[dictionary](#x-term-dictionary)）。"

[reference.foundations.dictionary.dictionary.dictionary.title]
en = "Construct"
zh = "构造"

[reference.foundations.dictionary.dictionary.dictionary.value.details]
en = "The value that should be converted to a dictionary."
zh = "应转换为「字典」（[dictionary](#x-term-dictionary)）的值。"

[reference.foundations.dictionary.dictionary.insert.details]
en = "Inserts a new pair into the dictionary. If the dictionary already\ncontains this key, the value is updated."
zh = "将新的「键值对」（[pair](#x-term-pair)）插入「字典」（[dictionary](#x-term-dictionary)）。如果字典已包含此键，则更新值。"

[reference.foundations.dictionary.dictionary.insert.key.details]
en = "The key of the pair that should be inserted."
zh = "应插入的「键值对」（[pair](#x-term-pair)）的键。"

[reference.foundations.dictionary.dictionary.insert.oneliner]
en = "Inserts a new pair into the dictionary. If the dictionary already"
zh = "将新的「键值对」（[pair](#x-term-pair)）插入「字典」（[dictionary](#x-term-dictionary)）。如果字典已"

[reference.foundations.dictionary.dictionary.insert.title]
en = "Insert"
zh = "插入"

[reference.foundations.dictionary.dictionary.insert.value.details]
en = "The value of the pair that should be inserted."
zh = "应插入的「键值对」（[pair](#x-term-pair)）的值。"

[reference.foundations.dictionary.dictionary.keys.details]
en = "Returns the keys of the dictionary as an array in insertion order."
zh = "按插入顺序将「字典」（[dictionary](#x-term-dictionary)）的键作为「数组」（[array](#x-term-array)）返回。"

[reference.foundations.dictionary.dictionary.keys.oneliner]
en = "Returns the keys of the dictionary as an array in insertion order."
zh = "按插入顺序将「字典」（[dictionary](#x-term-dictionary)）的键作为「数组」（[array](#x-term-array)）返回。"

[reference.foundations.dictionary.dictionary.keys.title]
en = "Keys"
zh = "键"

[reference.foundations.dictionary.dictionary.len.details]
en = "The number of pairs in the dictionary."
zh = "「字典」（[dictionary](#x-term-dictionary)）中「键值对」（[pair](#x-term-pair)）的数量。"

[reference.foundations.dictionary.dictionary.len.oneliner]
en = "The number of pairs in the dictionary."
zh = "「字典」（[dictionary](#x-term-dictionary)）中「键值对」（[pair](#x-term-pair)）的数量。"

[reference.foundations.dictionary.dictionary.len.title]
en = "Length"
zh = "「长度」（[length](#x-term-length)）"

[reference.foundations.dictionary.dictionary.oneliner]
en = "A map from string keys to values."
zh = "从「字符串」（[string](#x-term-string)）键到值的映射。"

[reference.foundations.dictionary.dictionary.pairs.details]
en = "Returns the keys and values of the dictionary as an array of pairs. Each\npair is represented as an array of length two."
zh = "将「字典」（[dictionary](#x-term-dictionary)）的键和值作为「键值对」（[pair](#x-term-pair)）「数组」（[array](#x-term-array)）返回。每个键值对表示为「长度」（[length](#x-term-length)）为 2 的数组。"

[reference.foundations.dictionary.dictionary.pairs.oneliner]
en = "Returns the keys and values of the dictionary as an array of pairs. Each"
zh = "将「字典」（[dictionary](#x-term-dictionary)）的键和值作为「键值对」（[pair](#x-term-pair)）「数组」（[array](#x-term-array)）返回。每个"

[reference.foundations.dictionary.dictionary.pairs.title]
en = "Pairs"
zh = "键值对"

[reference.foundations.dictionary.dictionary.remove.default.details]
en = "A default value to return if the key does not exist."
zh = "如果键不存在，则返回的默认值。"

[reference.foundations.dictionary.dictionary.remove.details]
en = "Removes a pair from the dictionary by key and return the value."
zh = "通过键从「字典」（[dictionary](#x-term-dictionary)）中删除「键值对」（[pair](#x-term-pair)）并返回值。"

[reference.foundations.dictionary.dictionary.remove.key.details]
en = "The key of the pair to remove."
zh = "要删除的「键值对」（[pair](#x-term-pair)）的键。"

[reference.foundations.dictionary.dictionary.remove.oneliner]
en = "Removes a pair from the dictionary by key and return the value."
zh = "通过键从「字典」（[dictionary](#x-term-dictionary)）中删除「键值对」（[pair](#x-term-pair)）并返回值。"

[reference.foundations.dictionary.dictionary.remove.title]
en = "Remove"
zh = "删除"

[reference.foundations.dictionary.dictionary.title]
en = "Dictionary"
zh = "「字典」（[dictionary](#x-term-dictionary)）"

[reference.foundations.dictionary.dictionary.values.details]
en = "Returns the values of the dictionary as an array in insertion order."
zh = "按插入顺序将「字典」（[dictionary](#x-term-dictionary)）的值作为「数组」（[array](#x-term-array)）返回。"

[reference.foundations.dictionary.dictionary.values.oneliner]
en = "Returns the values of the dictionary as an array in insertion order."
zh = "按插入顺序将「字典」（[dictionary](#x-term-dictionary)）的值作为「数组」（[array](#x-term-array)）返回。"

[reference.foundations.dictionary.dictionary.values.title]
en = "Values"
zh = "值"

[reference.foundations.dictionary.oneliner]
en = "A map from string keys to values."
zh = "从「字符串」（[string](#x-term-string)）键到值的映射。"

[reference.foundations.dictionary.title]
en = "Dictionary"
zh = "「字典」（[dictionary](#x-term-dictionary)）"

[reference.foundations.duration.description]
en = "Documentation for the Duration type."
zh = "Duration「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.duration.duration.days.details]
en = "The duration expressed in days.\n\nThis function returns the total duration represented in days as a\nfloating-point number rather than the second component of the duration."
zh = "以天为单位表示的持续时间。\n\n此函数返回以天为单位表示的总持续时间作为浮点数，而不是持续时间的第二个组成部分。"

[reference.foundations.duration.duration.days.oneliner]
en = "The duration expressed in days."
zh = "以天为单位表示的持续时间。"

[reference.foundations.duration.duration.days.title]
en = "Days"
zh = "天"

[reference.foundations.duration.duration.details]
en = "Represents a positive or negative span of time."
zh = "表示正或负的时间跨度。"

[reference.foundations.duration.duration.duration.days.details]
en = "The number of days."
zh = "天数。"

[reference.foundations.duration.duration.duration.details]
en = "Creates a new duration.\n\nYou can specify the [duration] using weeks, days, hours, minutes and\nseconds. You can also get a duration by subtracting two\n[datetimes]($datetime).\n\n"
zh = "创建新的持续时间。\n\n您可以使用周、天、小时、分钟和秒来指定持续时间。您也可以通过减去两个「日期时间」（[datetimes]($datetime)）来获得持续时间。\n\n"

[reference.foundations.duration.duration.duration.hours.details]
en = "The number of hours."
zh = "小时数。"

[reference.foundations.duration.duration.duration.minutes.details]
en = "The number of minutes."
zh = "分钟数。"

[reference.foundations.duration.duration.duration.oneliner]
en = "Creates a new duration."
zh = "创建新的持续时间。"

[reference.foundations.duration.duration.duration.seconds.details]
en = "The number of seconds."
zh = "秒数。"

[reference.foundations.duration.duration.duration.title]
en = "Construct"
zh = "构造"

[reference.foundations.duration.duration.duration.weeks.details]
en = "The number of weeks."
zh = "周数。"

[reference.foundations.duration.duration.hours.details]
en = "The duration expressed in hours.\n\nThis function returns the total duration represented in hours as a\nfloating-point number rather than the second component of the duration."
zh = "以小时为单位表示的持续时间。\n\n此函数返回以小时为单位表示的总持续时间作为浮点数，而不是持续时间的第二个组成部分。"

[reference.foundations.duration.duration.hours.oneliner]
en = "The duration expressed in hours."
zh = "以小时为单位表示的持续时间。"

[reference.foundations.duration.duration.hours.title]
en = "Hours"
zh = "小时"

[reference.foundations.duration.duration.minutes.details]
en = "The duration expressed in minutes.\n\nThis function returns the total duration represented in minutes as a\nfloating-point number rather than the second component of the duration."
zh = "以分钟为单位表示的持续时间。\n\n此函数返回以分钟为单位表示的总持续时间作为浮点数，而不是持续时间的第二个组成部分。"

[reference.foundations.duration.duration.minutes.oneliner]
en = "The duration expressed in minutes."
zh = "以分钟为单位表示的持续时间。"

[reference.foundations.duration.duration.minutes.title]
en = "Minutes"
zh = "分钟"

[reference.foundations.duration.duration.oneliner]
en = "Represents a positive or negative span of time."
zh = "表示正或负的时间跨度。"

[reference.foundations.duration.duration.seconds.details]
en = "The duration expressed in seconds.\n\nThis function returns the total duration represented in seconds as a\nfloating-point number rather than the second component of the duration."
zh = "以秒为单位表示的持续时间。\n\n此函数返回以秒为单位表示的总持续时间作为浮点数，而不是持续时间的第二个组成部分。"

[reference.foundations.duration.duration.seconds.oneliner]
en = "The duration expressed in seconds."
zh = "以秒为单位表示的持续时间。"

[reference.foundations.duration.duration.seconds.title]
en = "Seconds"
zh = "秒"

[reference.foundations.duration.duration.title]
en = "Duration"
zh = "持续时间"

[reference.foundations.duration.duration.weeks.details]
en = "The duration expressed in weeks.\n\nThis function returns the total duration represented in weeks as a\nfloating-point number rather than the second component of the duration."
zh = "以周为单位表示的持续时间。\n\n此函数返回以周为单位表示的总持续时间作为浮点数，而不是持续时间的第二个组成部分。"

[reference.foundations.duration.duration.weeks.oneliner]
en = "The duration expressed in weeks."
zh = "以周为单位表示的持续时间。"

[reference.foundations.duration.duration.weeks.title]
en = "Weeks"
zh = "周"

[reference.foundations.duration.oneliner]
en = "Represents a positive or negative span of time."
zh = "表示正或负的时间跨度。"

[reference.foundations.duration.title]
en = "Duration"
zh = "持续时间"

[reference.foundations.eval.description]
en = "Documentation for the `eval` function."
zh = "`eval` 函数的文档。"

[reference.foundations.eval.eval.details]
en = "Evaluates a string as Typst code.\n\nThis function should only be used as a last resort.\n\n# Example\n```example\n#eval(\"1 + 1\") \\\n#eval(\"(1, 2, 3, 4)\").len() \\\n#eval(\"*Markup!*\", mode: \"markup\") \\\n```"
zh = "将字符串作为 Typst 代码进行求值。\n\n此函数应仅作为最后手段使用。\n\n# 示例\n```example\n#eval(\"1 + 1\") \\\n#eval(\"(1, 2, 3, 4)\").len() \\\n#eval(\"*Markup!*\", mode: \"markup\") \\\n```"

[reference.foundations.eval.eval.mode.details]
en = "The [syntactical mode]($reference/syntax/#modes) in which the string is\nparsed.\n\n"
zh = "解析字符串的[语法模式]($reference/syntax/#modes)。\n\n"

[reference.foundations.eval.eval.oneliner]
en = "Evaluates a string as Typst code."
zh = "将字符串作为 Typst 代码进行求值。"

[reference.foundations.eval.eval.scope.details]
en = "A scope of definitions that are made available.\n\n"
zh = "提供可用定义的作用域。\n\n"

[reference.foundations.eval.eval.source.details]
en = "A string of Typst code to evaluate."
zh = "要求值的 Typst 代码字符串。"

[reference.foundations.eval.eval.title]
en = "Evaluate"
zh = "求值"

[reference.foundations.eval.oneliner]
en = "Evaluates a string as Typst code."
zh = "将字符串作为 Typst 代码进行求值。"

[reference.foundations.eval.title]
en = "Evaluate"
zh = "求值"

[reference.foundations.float.description]
en = "Documentation for the Float type."
zh = "Float 类型的文档。"

[reference.foundations.float.float.details]
en = "A floating-point number.\n\nA limited-precision representation of a real number. Typst uses 64 bits to\nstore floats. Wherever a float is expected, you can also pass an\n[integer]($int).\n\nYou can convert a value to a float with this type's constructor.\n\nNaN and positive infinity are available as `{float.nan}` and `{float.inf}`\nrespectively.\n\n# Example\n```example\n#3.14 \\\n#1e4 \\\n#(10 / 4)\n```"
zh = "浮点数。\n\n实数的有限精度表示。Typst 使用 64 位存储浮点数。任何需要浮点数的地方，您也可以传递[整数]($int)。\n\n您可以使用此类型的构造函数将值转换为浮点数。\n\nNaN 和正无穷大分别可用作 `{float.nan}` 和 `{float.inf}`。\n\n# 示例\n```example\n#3.14 \\\n#1e4 \\\n#(10 / 4)\n```"

[reference.foundations.float.float.float.details]
en = "Converts a value to a float.\n\n- Booleans are converted to `0.0` or `1.0`.\n- Integers are converted to the closest 64-bit float. For integers with\n  absolute value less than `{calc.pow(2, 53)}`, this conversion is\n  exact.\n- Ratios are divided by 100%.\n- Strings are parsed in base 10 to the closest 64-bit float. Exponential\n  notation is supported.\n\n"
zh = "将值转换为浮点数。\n\n- 布尔值转换为 `0.0` 或 `1.0`。\n- 整数转换为最接近的 64 位浮点数。对于绝对值小于 `{calc.pow(2, 53)}` 的整数，此转换是精确的。\n- 比例除以 100%。\n- 字符串以 10 进制解析为最接近的 64 位浮点数。支持指数表示法。\n\n"

[reference.foundations.float.float.float.oneliner]
en = "Converts a value to a float."
zh = "将值转换为浮点数。"

[reference.foundations.float.float.float.title]
en = "Construct"
zh = "构造"

[reference.foundations.float.float.float.value.details]
en = "The value that should be converted to a float."
zh = "应转换为浮点数的值。"

[reference.foundations.float.float.from-bytes.bytes.details]
en = "The bytes that should be converted to a float.\n\nMust have a length of either 4 or 8. The bytes are then\ninterpreted in [IEEE 754](https://en.wikipedia.org/wiki/IEEE_754)'s\nbinary32 (single-precision) or binary64 (double-precision) format\ndepending on the length of the bytes."
zh = "应转换为浮点数的「字节」（[bytes](#x-term-bytes)）。\n\n必须具有 4 或 8 的长度。然后根据字节的长度，将这些字节解释为 [IEEE 754](https://en.wikipedia.org/wiki/IEEE_754) 的 binary32（单精度）或 binary64（双精度）格式。"

[reference.foundations.float.float.from-bytes.details]
en = "Interprets bytes as a float.\n\n"
zh = "将字节解释为浮点数。\n\n"

[reference.foundations.float.float.from-bytes.endian.details]
en = "The endianness of the conversion."
zh = "转换的字节序。"

[reference.foundations.float.float.from-bytes.oneliner]
en = "Interprets bytes as a float."
zh = "将字节解释为浮点数。"

[reference.foundations.float.float.from-bytes.title]
en = "From Bytes"
zh = "从字节"

[reference.foundations.float.float.is-infinite.details]
en = "Checks if a float is infinite.\n\nFloats can represent positive infinity and negative infinity. This\nfunction returns `{true}` if the float is an infinity.\n\n"
zh = "检查浮点数是否为无穷大。\n\n浮点数可以表示正无穷大和负无穷大。如果浮点数是无穷大，此函数返回 `{true}`。\n\n"

[reference.foundations.float.float.is-infinite.oneliner]
en = "Checks if a float is infinite."
zh = "检查浮点数是否为无穷大。"

[reference.foundations.float.float.is-infinite.title]
en = "Is Infinite"
zh = "是否无穷大"

[reference.foundations.float.float.is-nan.details]
en = "Checks if a float is not a number.\n\nIn IEEE 754, more than one bit pattern represents a NaN. This function\nreturns `true` if the float is any of those bit patterns.\n\n"
zh = "检查浮点数是否不是数字（NaN）。\n\n在 IEEE 754 中，多个位模式表示 NaN。如果浮点数是这些位模式中的任何一个，此函数返回 `true`。\n\n"

[reference.foundations.float.float.is-nan.oneliner]
en = "Checks if a float is not a number."
zh = "检查浮点数是否不是数字（NaN）。"

[reference.foundations.float.float.is-nan.title]
en = "Is Nan"
zh = "是否 NaN"

[reference.foundations.float.float.oneliner]
en = "A floating-point number."
zh = "浮点数。"

[reference.foundations.float.float.signum.details]
en = "Calculates the sign of a floating point number.\n\n- If the number is positive (including `{+0.0}`), returns `{1.0}`.\n- If the number is negative (including `{-0.0}`), returns `{-1.0}`.\n- If the number is NaN, returns `{float.nan}`.\n\n"
zh = "计算浮点数的符号。\n\n- 如果数字为正（包括 `{+0.0}`），返回 `{1.0}`。\n- 如果数字为负（包括 `{-0.0}`），返回 `{-1.0}`。\n- 如果数字为 NaN，返回 `{float.nan}`。\n\n"

[reference.foundations.float.float.signum.oneliner]
en = "Calculates the sign of a floating point number."
zh = "计算浮点数的符号。"

[reference.foundations.float.float.signum.title]
en = "Signum"
zh = "符号函数"

[reference.foundations.float.float.title]
en = "Float"
zh = "浮点数"

[reference.foundations.float.float.to-bytes.details]
en = "Converts a float to bytes.\n\n"
zh = "将浮点数转换为字节。\n\n"

[reference.foundations.float.float.to-bytes.endian.details]
en = "The endianness of the conversion."
zh = "转换的字节序。"

[reference.foundations.float.float.to-bytes.oneliner]
en = "Converts a float to bytes."
zh = "将浮点数转换为字节。"

[reference.foundations.float.float.to-bytes.size.details]
en = "The size of the resulting bytes.\n\nThis must be either 4 or 8. The call will return the\nrepresentation of this float in either\n[IEEE 754](https://en.wikipedia.org/wiki/IEEE_754)'s binary32\n(single-precision) or binary64 (double-precision) format\ndepending on the provided size."
zh = "结果字节的大小。\n\n这必须是 4 或 8。调用将根据提供的大小返回此浮点数在 [IEEE 754](https://en.wikipedia.org/wiki/IEEE_754) 的 binary32（单精度）或 binary64（双精度）格式中的表示。"

[reference.foundations.float.float.to-bytes.title]
en = "To Bytes"
zh = "转为字节"

[reference.foundations.float.oneliner]
en = "A floating-point number."
zh = "浮点数。"

[reference.foundations.float.title]
en = "Float"
zh = "浮点数"

[reference.foundations.foundations.details]
en = "Foundational types and functions.\n\nHere, you'll find documentation for basic data types like [integers]($int) and\n[strings]($str) as well as details about core computational functions.\n"
zh = "基础类型和函数。\n\n在这里，您将找到基本数据类型（如[整数]($int)和[字符串]($str)）的文档，以及核心计算函数的详细信息。\n"

[reference.foundations.foundations.title]
en = "Foundations"
zh = "基础"

[reference.foundations.function.description]
en = "Documentation for the Function type."
zh = "Function 类型的文档。"

[reference.foundations.function.function.details]
en = "{{typst-docs/reference.foundations.function.function.details.toml}}"

[reference.foundations.function.function.oneliner]
en = "A mapping from argument values to a return value."
zh = "从「参数」（[argument](#x-term-argument)）值到返回值的映射。"

[reference.foundations.function.function.title]
en = "Function"
zh = "函数"

[reference.foundations.function.function.where.details]
en = "Returns a selector that filters for elements belonging to this function\nwhose fields have the values of the given arguments.\n\n"
zh = "返回一个选择器，用于筛选属于此函数且其字段具有给定参数值的元素。\n\n"

[reference.foundations.function.function.where.fields.details]
en = "The fields to filter for."
zh = "要筛选的字段。"

[reference.foundations.function.function.where.oneliner]
en = "Returns a selector that filters for elements belonging to this function"
zh = "返回一个选择器，用于筛选属于此函数的元素"

[reference.foundations.function.function.where.title]
en = "Where"
zh = "筛选条件"

[reference.foundations.function.function.with.arguments.details]
en = "The arguments to apply to the function."
zh = "应用于函数的参数。"

[reference.foundations.function.function.with.details]
en = "Returns a new function that has the given arguments pre-applied."
zh = "返回一个新函数，该函数已预先应用了给定的「参数」（[argument](#x-term-argument)）。"

[reference.foundations.function.function.with.oneliner]
en = "Returns a new function that has the given arguments pre-applied."
zh = "返回一个新函数，该函数已预先应用了给定的「参数」（[argument](#x-term-argument)）。"

[reference.foundations.function.function.with.title]
en = "With"
zh = "应用参数"

[reference.foundations.function.oneliner]
en = "A mapping from argument values to a return value."
zh = "从「参数」（[argument](#x-term-argument)）值到返回值的映射。"

[reference.foundations.function.title]
en = "Function"
zh = "函数"

[reference.foundations.int.description]
en = "Documentation for the Integer type."
zh = "Integer 类型的文档。"

[reference.foundations.int.int.bit-and.details]
en = "Calculates the bitwise AND between two integers.\n\nFor the purposes of this function, the operands are treated as signed\nintegers of 64 bits.\n\n"
zh = "计算两个整数之间的按位与运算。\n\n对于此函数，操作数被视为 64 位有符号整数。\n\n"

[reference.foundations.int.int.bit-and.oneliner]
en = "Calculates the bitwise AND between two integers."
zh = "计算两个整数之间的按位与运算。"

[reference.foundations.int.int.bit-and.rhs.details]
en = "The right-hand operand of the bitwise AND."
zh = "按位与运算的右操作数。"

[reference.foundations.int.int.bit-and.title]
en = "Bitwise AND"
zh = "按位与"

[reference.foundations.int.int.bit-lshift.details]
en = "Shifts the operand's bits to the left by the specified amount.\n\nFor the purposes of this function, the operand is treated as a signed\ninteger of 64 bits. An error will occur if the result is too large to\nfit in a 64-bit integer.\n\n"
zh = "将操作数的位向左移动指定的数量。\n\n对于此函数，操作数被视为 64 位有符号整数。如果结果太大而无法适应 64 位整数，将发生错误。\n\n"

[reference.foundations.int.int.bit-lshift.oneliner]
en = "Shifts the operand's bits to the left by the specified amount."
zh = "将操作数的位向左移动指定的数量。"

[reference.foundations.int.int.bit-lshift.shift.details]
en = "The amount of bits to shift. Must not be negative."
zh = "要移动的位数。不能为负数。"

[reference.foundations.int.int.bit-lshift.title]
en = "Bitwise Left Shift"
zh = "按位左移"

[reference.foundations.int.int.bit-not.details]
en = "Calculates the bitwise NOT of an integer.\n\nFor the purposes of this function, the operand is treated as a signed\ninteger of 64 bits.\n\n"
zh = "计算整数的按位取反。\n\n对于此函数，操作数被视为 64 位有符号整数。\n\n"

[reference.foundations.int.int.bit-not.oneliner]
en = "Calculates the bitwise NOT of an integer."
zh = "计算整数的按位取反。"

[reference.foundations.int.int.bit-not.title]
en = "Bitwise NOT"
zh = "按位取反"

[reference.foundations.int.int.bit-or.details]
en = "Calculates the bitwise OR between two integers.\n\nFor the purposes of this function, the operands are treated as signed\nintegers of 64 bits.\n\n"
zh = "计算两个整数之间的按位或运算。\n\n对于此函数，操作数被视为 64 位有符号整数。\n\n"

[reference.foundations.int.int.bit-or.oneliner]
en = "Calculates the bitwise OR between two integers."
zh = "计算两个整数之间的按位或运算。"

[reference.foundations.int.int.bit-or.rhs.details]
en = "The right-hand operand of the bitwise OR."
zh = "按位或运算的右操作数。"

[reference.foundations.int.int.bit-or.title]
en = "Bitwise OR"
zh = "按位或"

[reference.foundations.int.int.bit-rshift.details]
en = "Shifts the operand's bits to the right by the specified amount.\nPerforms an arithmetic shift by default (extends the sign bit to the left,\nsuch that negative numbers stay negative), but that can be changed by the\n`logical` parameter.\n\nFor the purposes of this function, the operand is treated as a signed\ninteger of 64 bits.\n\n"
zh = "将操作数的位向右移动指定的数量。\n默认执行算术移位（将符号位扩展到左侧，使负数保持负数），但可以通过 `logical` 参数更改。\n\n对于此函数，操作数被视为 64 位有符号整数。\n\n"

[reference.foundations.int.int.bit-rshift.logical.details]
en = "Toggles whether a logical (unsigned) right shift should be performed\ninstead of arithmetic right shift.\nIf this is `{true}`, negative operands will not preserve their sign\nbit, and bits which appear to the left after the shift will be\n`{0}`. This parameter has no effect on non-negative operands."
zh = "切换是否应执行逻辑（无符号）右移而不是算术右移。\n如果为 `{true}`，负操作数将不会保留其符号位，移位后出现在左侧的位将为 `{0}`。此参数对非负操作数没有影响。"

[reference.foundations.int.int.bit-rshift.oneliner]
en = "Shifts the operand's bits to the right by the specified amount."
zh = "将操作数的位向右移动指定的数量。"

[reference.foundations.int.int.bit-rshift.shift.details]
en = "The amount of bits to shift. Must not be negative.\n\nShifts larger than 63 are allowed and will cause the return value to\nsaturate. For non-negative numbers, the return value saturates at\n`{0}`, while, for negative numbers, it saturates at `{-1}` if\n`logical` is set to `{false}`, or `{0}` if it is `{true}`. This\nbehavior is consistent with just applying this operation multiple\ntimes. Therefore, the shift will always succeed."
zh = "要移位的位数。不能为负数。\n\n允许大于 63 的移位，会导致返回值饱和。对于非负数，返回值在 `{0}` 处饱和，而对于负数，如果 `logical` 设置为 `{false}`，则在 `{-1}` 处饱和，如果设置为 `{true}`，则在 `{0}` 处饱和。此行为与多次应用此操作一致。因此，移位总是会成功。"

[reference.foundations.int.int.bit-rshift.title]
en = "Bitwise Right Shift"
zh = "按位右移"

[reference.foundations.int.int.bit-xor.details]
en = "Calculates the bitwise XOR between two integers.\n\nFor the purposes of this function, the operands are treated as signed\nintegers of 64 bits.\n\n"
zh = "计算两个整数之间的按位异或。\n\n对于此函数，操作数被视为 64 位有符号整数。\n\n"

[reference.foundations.int.int.bit-xor.oneliner]
en = "Calculates the bitwise XOR between two integers."
zh = "计算两个整数之间的按位异或。"

[reference.foundations.int.int.bit-xor.rhs.details]
en = "The right-hand operand of the bitwise XOR."
zh = "按位异或的右操作数。"

[reference.foundations.int.int.bit-xor.title]
en = "Bitwise XOR"
zh = "按位异或"

[reference.foundations.int.int.details]
en = "{{typst-docs/reference.foundations.int.int.details.toml}}"

[reference.foundations.int.int.from-bytes.bytes.details]
en = "The bytes that should be converted to an integer.\n\nMust be of length at most 8 so that the result fits into a 64-bit\nsigned integer."
zh = "应该转换为整数的「字节」（[bytes](#x-term-bytes)）。\n\n「长度」（[length](#x-term-length)）最多为 8，以便结果适合 64 位有符号整数。"

[reference.foundations.int.int.from-bytes.details]
en = "Converts bytes to an integer.\n\n"
zh = "将「字节」（[bytes](#x-term-bytes)）转换为整数。\n\n"

[reference.foundations.int.int.from-bytes.endian.details]
en = "The endianness of the conversion."
zh = "转换的字节序。"

[reference.foundations.int.int.from-bytes.oneliner]
en = "Converts bytes to an integer."
zh = "将「字节」（[bytes](#x-term-bytes)）转换为整数。"

[reference.foundations.int.int.from-bytes.signed.details]
en = "Whether the bytes should be treated as a signed integer. If this is\n`{true}` and the most significant bit is set, the resulting number\nwill negative."
zh = "是否应将「字节」（[bytes](#x-term-bytes)）视为有符号整数。如果这是 `{true}` 并且设置了最高有效位，则结果数字将为负数。"

[reference.foundations.int.int.from-bytes.title]
en = "From Bytes"
zh = "从字节创建"

[reference.foundations.int.int.int.details]
en = "Converts a value to an integer. Raises an error if there is an attempt\nto produce an integer larger than the maximum 64-bit signed integer\nor smaller than the minimum 64-bit signed integer.\n\n- Booleans are converted to `0` or `1`.\n- Floats and decimals are truncated to the next 64-bit integer.\n- Strings are parsed in base 10.\n\n"
zh = "将值转换为整数。如果尝试生成大于最大 64 位有符号整数或小于最小 64 位有符号整数的整数，则会引发错误。\n\n- 「布尔值」（[Booleans](#x-term-boolean)）转换为 `0` 或 `1`。\n- 浮点数和十进制数被截断为下一个 64 位整数。\n- 「字符串」（[Strings](#x-term-string)）以 10 进制解析。\n\n"

[reference.foundations.int.int.int.oneliner]
en = "Converts a value to an integer. Raises an error if there is an attempt"
zh = "将值转换为整数。如果尝试"

[reference.foundations.int.int.int.title]
en = "Construct"
zh = "构造"

[reference.foundations.int.int.int.value.details]
en = "The value that should be converted to an integer."
zh = "应该转换为整数的值。"

[reference.foundations.int.int.oneliner]
en = "A whole number."
zh = "整数。"

[reference.foundations.int.int.signum.details]
en = "Calculates the sign of an integer.\n\n- If the number is positive, returns `{1}`.\n- If the number is negative, returns `{-1}`.\n- If the number is zero, returns `{0}`.\n\n"
zh = "计算整数的符号。\n\n- 如果数字为正数，返回 `{1}`。\n- 如果数字为负数，返回 `{-1}`。\n- 如果数字为零，返回 `{0}`。\n\n"

[reference.foundations.int.int.signum.oneliner]
en = "Calculates the sign of an integer."
zh = "计算整数的符号。"

[reference.foundations.int.int.signum.title]
en = "Signum"
zh = "符号"

[reference.foundations.int.int.title]
en = "Integer"
zh = "整数"

[reference.foundations.int.int.to-bytes.details]
en = "Converts an integer to bytes.\n\n"
zh = "将整数转换为「字节」（[bytes](#x-term-bytes)）。\n\n"

[reference.foundations.int.int.to-bytes.endian.details]
en = "The endianness of the conversion."
zh = "转换的字节序。"

[reference.foundations.int.int.to-bytes.oneliner]
en = "Converts an integer to bytes."
zh = "将整数转换为「字节」（[bytes](#x-term-bytes)）。"

[reference.foundations.int.int.to-bytes.size.details]
en = "The size in bytes of the resulting bytes (must be at least zero). If\nthe integer is too large to fit in the specified size, the\nconversion will truncate the remaining bytes based on the\nendianness. To keep the same resulting value, if the endianness is\nbig-endian, the truncation will happen at the rightmost bytes.\nOtherwise, if the endianness is little-endian, the truncation will\nhappen at the leftmost bytes.\n\nBe aware that if the integer is negative and the size is not enough\nto make the number fit, when passing the resulting bytes to\n`int.from-bytes`, the resulting number might be positive, as the\nmost significant bit might not be set to 1."
zh = "结果「字节」（[bytes](#x-term-bytes)）的大小（字节数，必须至少为零）。如果整数太大无法适合指定的大小，转换将根据字节序截断剩余的「字节」（[bytes](#x-term-bytes)）。为了保持相同的结果值，如果字节序是大端序，截断将发生在最右侧的「字节」（[bytes](#x-term-bytes)）。否则，如果字节序是小端序，截断将发生在最左侧的「字节」（[bytes](#x-term-bytes)）。\n\n请注意，如果整数为负数且大小不足以容纳该数字，当将结果「字节」（[bytes](#x-term-bytes)）传递给 `int.from-bytes` 时，结果数字可能为正数，因为最高有效位可能未设置为 1。"

[reference.foundations.int.int.to-bytes.title]
en = "To Bytes"
zh = "转换为字节"

[reference.foundations.int.oneliner]
en = "A whole number."
zh = "整数。"

[reference.foundations.int.title]
en = "Integer"
zh = "整数"

[reference.foundations.label.description]
en = "Documentation for the Label type."
zh = "Label「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.label.label.details]
en = "{{typst-docs/reference.foundations.label.label.details.toml}}"

[reference.foundations.label.label.label.details]
en = "Creates a label from a string."
zh = "从「字符串」（[string](#x-term-string)）创建标签。"

[reference.foundations.label.label.label.name.details]
en = "The name of the label."
zh = "标签的名称。"

[reference.foundations.label.label.label.oneliner]
en = "Creates a label from a string."
zh = "从「字符串」（[string](#x-term-string)）创建标签。"

[reference.foundations.label.label.label.title]
en = "Construct"
zh = "构造"

[reference.foundations.label.label.oneliner]
en = "A label for an element."
zh = "元素的标签。"

[reference.foundations.label.label.title]
en = "Label"
zh = "标签"

[reference.foundations.label.oneliner]
en = "A label for an element."
zh = "元素的标签。"

[reference.foundations.label.title]
en = "Label"
zh = "标签"

[reference.foundations.module.description]
en = "Documentation for the Module type."
zh = "Module「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.module.module.details]
en = "An module of definitions.\n\nA module\n- be built-in\n- stem from a [file import]($scripting/#modules)\n- stem from a [package import]($scripting/#packages) (and thus indirectly\n  its entrypoint file)\n- result from a call to the [plugin]($plugin) function\n\nYou can access definitions from the module using [field access\nnotation]($scripting/#fields) and interact with it using the [import and\ninclude syntaxes]($scripting/#modules). Alternatively, it is possible to\nconvert a module to a dictionary, and therefore access its contents\ndynamically, using the [dictionary constructor]($dictionary/#constructor).\n\n# Example\n```example\n<<< #import \"utils.typ\"\n<<< #utils.add(2, 5)\n\n<<< #import utils: sub\n<<< #sub(1, 4)\n>>> #7\n>>>\n>>> #(-3)\n```"
zh = "定义的模块。\n\n模块可以\n- 是内置的\n- 来自「文件导入」（[file import]($scripting/#modules)）\n- 来自「包导入」（[package import]($scripting/#packages)）（因此间接来自其入口点文件）\n- 来自对「插件」（[plugin]($plugin)）函数的调用结果\n\n您可以使用「字段访问语法」（[field access notation]($scripting/#fields)）从模块访问定义，并使用「导入和包含语法」（[import and include syntaxes]($scripting/#modules)）与其交互。或者，可以将模块转换为「字典」（[dictionary](#x-term-dictionary)），因此可以使用「字典构造器」（[dictionary constructor]($dictionary/#constructor)）动态访问其内容。\n\n# 示例\n```example\n<<< #import \"utils.typ\"\n<<< #utils.add(2, 5)\n\n<<< #import utils: sub\n<<< #sub(1, 4)\n>>> #7\n>>>\n>>> #(-3)\n```"

[reference.foundations.module.module.oneliner]
en = "An module of definitions."
zh = "定义的模块。"

[reference.foundations.module.module.title]
en = "Module"
zh = "模块"

[reference.foundations.module.oneliner]
en = "An module of definitions."
zh = "定义的模块。"

[reference.foundations.module.title]
en = "Module"
zh = "模块"

[reference.foundations.none.description]
en = "Documentation for the None type."
zh = "None「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.none.none.details]
en = "A value that indicates the absence of any other value.\n\nThe none type has exactly one value: `{none}`.\n\nWhen inserted into the document, it is not visible. This is also the value\nthat is produced by empty code blocks. It can be\n[joined]($scripting/#blocks) with any value, yielding the other value.\n\n# Example\n```example\nNot visible: #none\n```"
zh = "表示没有任何其他值的值。\n\nnone「类型」（[type](#x-term-type)）恰好有一个值：`{none}`。\n\n当插入到文档中时，它是不可见的。这也是由空代码块产生的值。它可以与任何值「连接」（[joined]($scripting/#blocks)），产生另一个值。\n\n# 示例\n```example\nNot visible: #none\n```"

[reference.foundations.none.none.oneliner]
en = "A value that indicates the absence of any other value."
zh = "表示没有任何其他值的值。"

[reference.foundations.none.none.title]
en = "None"
zh = "None"

[reference.foundations.none.oneliner]
en = "A value that indicates the absence of any other value."
zh = "表示没有任何其他值的值。"

[reference.foundations.none.title]
en = "None"
zh = "None"

[reference.foundations.panic.description]
en = "Documentation for the `panic` function."
zh = "`panic` 函数的文档。"

[reference.foundations.panic.oneliner]
en = "Fails with an error."
zh = "以错误失败。"

[reference.foundations.panic.panic.details]
en = "Fails with an error.\n\nArguments are displayed to the user (not rendered in the document) as\nstrings, converting with `repr` if necessary.\n\n# Example\nThe code below produces the error `panicked with: \"this is wrong\"`.\n```typ\n#panic(\"this is wrong\")\n```"
zh = "以错误失败。\n\n「参数」（[argument](#x-term-argument)）作为「字符串」（[string](#x-term-string)）显示给用户（不在文档中呈现），必要时使用 `repr` 转换。\n\n# 示例\n下面的代码产生错误 `panicked with: \"this is wrong\"`。\n```typ\n#panic(\"this is wrong\")\n```"

[reference.foundations.panic.panic.oneliner]
en = "Fails with an error."
zh = "以错误失败。"

[reference.foundations.panic.panic.title]
en = "Panic"
zh = "Panic"

[reference.foundations.panic.panic.values.details]
en = "The values to panic with and display to the user."
zh = "要与之 panic 并显示给用户的值。"

[reference.foundations.panic.title]
en = "Panic"
zh = "Panic"

[reference.foundations.plugin.description]
en = "Documentation for the `plugin` function."
zh = "`plugin` 函数的文档。"

[reference.foundations.plugin.oneliner]
en = "Loads a WebAssembly module."
zh = "加载 WebAssembly 模块。"

[reference.foundations.plugin.plugin.details]
en = "{{typst-docs/reference.foundations.plugin.plugin.details.toml}}"

[reference.foundations.plugin.plugin.oneliner]
en = "Loads a WebAssembly module."
zh = "加载 WebAssembly 模块。"

[reference.foundations.plugin.plugin.source.details]
en = "A [path]($syntax/#paths) to a WebAssembly file or raw WebAssembly bytes."
zh = "WebAssembly 文件的「路径」（[path]($syntax/#paths)）或原始 WebAssembly「字节」（[bytes](#x-term-bytes)）。"

[reference.foundations.plugin.plugin.title]
en = "Plugin"
zh = "插件"

[reference.foundations.plugin.plugin.transition.arguments.details]
en = "The byte buffers to call the function with."
zh = "调用函数时使用的字节缓冲区。"

[reference.foundations.plugin.plugin.transition.details]
en = "{{typst-docs/reference.foundations.plugin.plugin.transition.details.toml}}"

[reference.foundations.plugin.plugin.transition.func.details]
en = "The plugin function to call."
zh = "要调用的插件函数。"

[reference.foundations.plugin.plugin.transition.oneliner]
en = "Calls a plugin function that has side effects and returns a new module"
zh = "调用具有副作用并返回新模块的插件函数"

[reference.foundations.plugin.plugin.transition.title]
en = "Transition"
zh = "过渡"

[reference.foundations.plugin.title]
en = "Plugin"
zh = "插件"

[reference.foundations.regex.description]
en = "Documentation for the Regex type."
zh = "Regex「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.regex.oneliner]
en = "A regular expression."
zh = "正则表达式。"

[reference.foundations.regex.regex.details]
en = "{{typst-docs/reference.foundations.regex.regex.details.toml}}"

[reference.foundations.regex.regex.oneliner]
en = "A regular expression."
zh = "正则表达式。"

[reference.foundations.regex.regex.regex.details]
en = "Create a regular expression from a string."
zh = "从「字符串」（[string](#x-term-string)）创建正则表达式。"

[reference.foundations.regex.regex.regex.oneliner]
en = "Create a regular expression from a string."
zh = "从「字符串」（[string](#x-term-string)）创建正则表达式。"

[reference.foundations.regex.regex.regex.regex.details]
en = "The regular expression as a string.\n\nMost regex escape sequences just work because they are not valid Typst\nescape sequences. To produce regex escape sequences that are also valid in\nTypst (e.g. `[\\\\]`), you need to escape twice. Thus, to match a verbatim\nbackslash, you would need to write `{regex(\"\\\\\\\\\")}`.\n\nIf you need many escape sequences, you can also create a raw element\nand extract its text to use it for your regular expressions:\n"
zh = "正则表达式作为「字符串」（[string](#x-term-string)）。\n\n大多数正则表达式转义序列都可以正常工作，因为它们不是有效的 Typst 转义序列。要生成在 Typst 中也有效的正则表达式转义序列（例如 `[\\\\]`），您需要转义两次。因此，要匹配逐字反斜杠，您需要编写 `{regex(\"\\\\\\\\\")}`。\n\n如果您需要许多转义序列，您也可以创建一个原始元素并提取其文本以将其用于您的正则表达式：\n"

[reference.foundations.regex.regex.regex.title]
en = "Construct"
zh = "构造"

[reference.foundations.regex.regex.title]
en = "Regex"
zh = "正则表达式"

[reference.foundations.regex.title]
en = "Regex"
zh = "正则表达式"

[reference.foundations.repr.description]
en = "Documentation for the `repr` function."
zh = "`repr` 函数的文档。"

[reference.foundations.repr.oneliner]
en = "Returns the string representation of a value."
zh = "返回值的字符串表示。"

[reference.foundations.repr.repr.details]
en = "Returns the string representation of a value.\n\nWhen inserted into content, most values are displayed as this representation\nin monospace with syntax-highlighting. The exceptions are `{none}`,\nintegers, floats, strings, content, and functions.\n\n**Note:** This function is for debugging purposes. Its output should not be\nconsidered stable and may change at any time!\n\n# Example\n```example\n#none vs #repr(none) \\\n#\"hello\" vs #repr(\"hello\") \\\n#(1, 2) vs #repr((1, 2)) \\\n#[*Hi*] vs #repr([*Hi*])\n```"
zh = "返回值的字符串表示。\n\n当插入到内容中时，大多数值都会以等宽字体和语法高亮显示这种表示。例外是 `{none}`、整数、浮点数、「字符串」（[strings](#x-term-string)）、内容和函数。\n\n**注意：** 此函数用于调试目的。其输出不应被视为稳定，可能随时更改！\n\n# 示例\n```example\n#none vs #repr(none) \\\n#\"hello\" vs #repr(\"hello\") \\\n#(1, 2) vs #repr((1, 2)) \\\n#[*Hi*] vs #repr([*Hi*])\n```"

[reference.foundations.repr.repr.oneliner]
en = "Returns the string representation of a value."
zh = "返回值的字符串表示。"

[reference.foundations.repr.repr.title]
en = "Representation"
zh = "表示"

[reference.foundations.repr.repr.value.details]
en = "The value whose string representation to produce."
zh = "要生成字符串表示的值。"

[reference.foundations.repr.title]
en = "Representation"
zh = "表示"

[reference.foundations.selector.description]
en = "Documentation for the Selector type."
zh = "Selector「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.selector.oneliner]
en = "A filter for selecting elements within the document."
zh = "用于在文档中选择元素的过滤器。"

[reference.foundations.selector.selector.after.details]
en = "Returns a modified selector that will only match elements that occur\nafter the first match of `start`."
zh = "返回一个修改后的「选择器」（[selector](#x-term-selector)），该选择器只匹配在 `start` 的第一个匹配项之后出现的元素。"

[reference.foundations.selector.selector.after.inclusive.details]
en = "Whether `start` itself should match or not. This is only relevant\n if both selectors match the same type of element. Defaults to\n `{true}`."
zh = "`start` 本身是否应该匹配。这仅在两个「选择器」（[selector](#x-term-selector)）匹配相同类型的元素时才相关。默认为 `{true}`。"

[reference.foundations.selector.selector.after.oneliner]
en = "Returns a modified selector that will only match elements that occur"
zh = "返回一个修改后的选择器，该选择器只匹配在指定匹配项之后出现的元素。"

[reference.foundations.selector.selector.after.start.details]
en = "The original selection will start at the first match of `start`."
zh = "原始选择将从 `start` 的第一个匹配项开始。"

[reference.foundations.selector.selector.after.title]
en = "After"
zh = "之后"

[reference.foundations.selector.selector.and.details]
en = "Selects all elements that match this and all of the other selectors."
zh = "选择同时匹配此「选择器」（[selector](#x-term-selector)）和所有其他选择器的元素。"

[reference.foundations.selector.selector.and.oneliner]
en = "Selects all elements that match this and all of the other selectors."
zh = "选择同时匹配此选择器和所有其他选择器的元素。"

[reference.foundations.selector.selector.and.others.details]
en = "The other selectors to match on."
zh = "要匹配的其他「选择器」（[selector](#x-term-selector)）。"

[reference.foundations.selector.selector.and.title]
en = "And"
zh = "且"

[reference.foundations.selector.selector.before.details]
en = "Returns a modified selector that will only match elements that occur\nbefore the first match of `end`."
zh = "返回一个修改后的「选择器」（[selector](#x-term-selector)），该选择器只匹配在 `end` 的第一个匹配项之前出现的元素。"

[reference.foundations.selector.selector.before.end.details]
en = "The original selection will end at the first match of `end`."
zh = "原始选择将在 `end` 的第一个匹配项处结束。"

[reference.foundations.selector.selector.before.inclusive.details]
en = "Whether `end` itself should match or not. This is only relevant if\nboth selectors match the same type of element. Defaults to `{true}`."
zh = "`end` 本身是否应该匹配。这仅在两个「选择器」（[selector](#x-term-selector)）匹配相同类型的元素时才相关。默认为 `{true}`。"

[reference.foundations.selector.selector.before.oneliner]
en = "Returns a modified selector that will only match elements that occur"
zh = "返回一个修改后的选择器，该选择器只匹配在指定匹配项之前出现的元素。"

[reference.foundations.selector.selector.before.title]
en = "Before"
zh = "之前"

[reference.foundations.selector.selector.details]
en = "{{typst-docs/reference.foundations.selector.selector.details.toml}}"

[reference.foundations.selector.selector.oneliner]
en = "A filter for selecting elements within the document."
zh = "用于在文档中选择元素的过滤器。"

[reference.foundations.selector.selector.or.details]
en = "Selects all elements that match this or any of the other selectors."
zh = "选择匹配此「选择器」（[selector](#x-term-selector)）或任何其他选择器的元素。"

[reference.foundations.selector.selector.or.oneliner]
en = "Selects all elements that match this or any of the other selectors."
zh = "选择匹配此选择器或任何其他选择器的元素。"

[reference.foundations.selector.selector.or.others.details]
en = "The other selectors to match on."
zh = "要匹配的其他「选择器」（[selector](#x-term-selector)）。"

[reference.foundations.selector.selector.or.title]
en = "Or"
zh = "或"

[reference.foundations.selector.selector.selector.details]
en = "Turns a value into a selector. The following values are accepted:\n- An element function like a `heading` or `figure`.\n- A `{<label>}`.\n- A more complex selector like `{heading.where(level: 1)}`."
zh = "将值转换为选择器。接受以下值：\n- 像 `heading` 或 `figure` 这样的元素函数。\n- 一个 `{<label>}`。\n- 更复杂的选择器，如 `{heading.where(level: 1)}`。"

[reference.foundations.selector.selector.selector.oneliner]
en = "Turns a value into a selector. The following values are accepted:"
zh = "将值转换为选择器。接受以下值："

[reference.foundations.selector.selector.selector.target.details]
en = "Can be an element function like a `heading` or `figure`, a `{<label>}`\nor a more complex selector like `{heading.where(level: 1)}`."
zh = "可以是像 `heading` 或 `figure` 这样的元素「函数」（[function](#x-term-function)），一个 `{<label>}`\n或者像 `{heading.where(level: 1)}` 这样更复杂的选择器。"

[reference.foundations.selector.selector.selector.title]
en = "Construct"
zh = "构造"

[reference.foundations.selector.selector.title]
en = "Selector"
zh = "选择器"

[reference.foundations.selector.title]
en = "Selector"
zh = "选择器"

[reference.foundations.str.description]
en = "Documentation for the String type."
zh = "String「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.str.oneliner]
en = "A sequence of Unicode codepoints."
zh = "Unicode 码点序列。"

[reference.foundations.str.str.at.default.details]
en = "A default value to return if the index is out of bounds."
zh = "如果索引超出范围，则返回的默认值。"

[reference.foundations.str.str.at.details]
en = "Extracts the first grapheme cluster after the specified index. Returns\nthe default value if the index is out of bounds or fails with an error\nif no default value was specified."
zh = "提取指定索引后的第一个字形簇。如果索引超出范围，则返回默认值，如果未指定默认值，则失败并报错。"

[reference.foundations.str.str.at.index.details]
en = "The byte index. If negative, indexes from the back."
zh = "字节索引。如果为负数，则从后面索引。"

[reference.foundations.str.str.at.oneliner]
en = "Extracts the first grapheme cluster after the specified index. Returns"
zh = "提取指定索引后的第一个字形簇。返回"

[reference.foundations.str.str.at.title]
en = "At"
zh = "在"

[reference.foundations.str.str.clusters.details]
en = "Returns the grapheme clusters of the string as an array of substrings."
zh = "将「字符串」（[string](#x-term-string)）的字形簇作为子字符串「数组」（[array](#x-term-array)）返回。"

[reference.foundations.str.str.clusters.oneliner]
en = "Returns the grapheme clusters of the string as an array of substrings."
zh = "将「字符串」（[string](#x-term-string)）的字形簇作为子字符串「数组」（[array](#x-term-array)）返回。"

[reference.foundations.str.str.clusters.title]
en = "Clusters"
zh = "簇"

[reference.foundations.str.str.codepoints.details]
en = "Returns the Unicode codepoints of the string as an array of substrings."
zh = "将「字符串」（[string](#x-term-string)）的 Unicode 码点作为子字符串「数组」（[array](#x-term-array)）返回。"

[reference.foundations.str.str.codepoints.oneliner]
en = "Returns the Unicode codepoints of the string as an array of substrings."
zh = "将「字符串」（[string](#x-term-string)）的 Unicode 码点作为子字符串数组返回。"

[reference.foundations.str.str.codepoints.title]
en = "Codepoints"
zh = "码点"

[reference.foundations.str.str.contains.details]
en = "Whether the string contains the specified pattern.\n\nThis method also has dedicated syntax: You can write `{\"bc\" in \"abcd\"}`\ninstead of `{\"abcd\".contains(\"bc\")}`."
zh = "「字符串」（[string](#x-term-string)）是否包含指定的模式。\n\n此方法还有专用语法：您可以写 `{\"bc\" in \"abcd\"}` 而不是 `{\"abcd\".contains(\"bc\")}`。"

[reference.foundations.str.str.contains.oneliner]
en = "Whether the string contains the specified pattern."
zh = "字符串是否包含指定的模式。"

[reference.foundations.str.str.contains.pattern.details]
en = "The pattern to search for."
zh = "要搜索的模式。"

[reference.foundations.str.str.contains.title]
en = "Contains"
zh = "包含"

[reference.foundations.str.str.details]
en = "{{typst-docs/reference.foundations.str.str.details.toml}}"

[reference.foundations.str.str.ends-with.details]
en = "Whether the string ends with the specified pattern."
zh = "「字符串」（[string](#x-term-string)）是否以指定模式结尾。"

[reference.foundations.str.str.ends-with.oneliner]
en = "Whether the string ends with the specified pattern."
zh = "字符串是否以指定模式结尾。"

[reference.foundations.str.str.ends-with.pattern.details]
en = "The pattern the string might end with."
zh = "字符串可能以此模式结尾。"

[reference.foundations.str.str.ends-with.title]
en = "Ends With"
zh = "以...结尾"

[reference.foundations.str.str.find.details]
en = "Searches for the specified pattern in the string and returns the first\nmatch as a string or `{none}` if there is no match."
zh = "在「字符串」（[string](#x-term-string)）中搜索指定模式，如果有匹配则返回第一个匹配项作为字符串，如果没有匹配则返回 `{none}`。"

[reference.foundations.str.str.find.oneliner]
en = "Searches for the specified pattern in the string and returns the first"
zh = "在字符串中搜索指定模式并返回第一个匹配项。"

[reference.foundations.str.str.find.pattern.details]
en = "The pattern to search for."
zh = "要搜索的模式。"

[reference.foundations.str.str.find.title]
en = "Find"
zh = "查找"

[reference.foundations.str.str.first.details]
en = "Extracts the first grapheme cluster of the string.\nFails with an error if the string is empty."
zh = "提取「字符串」（[string](#x-term-string)）的第一个字形簇。\n如果字符串为空，则会出现错误。"

[reference.foundations.str.str.first.oneliner]
en = "Extracts the first grapheme cluster of the string."
zh = "提取字符串的第一个字形簇。"

[reference.foundations.str.str.first.title]
en = "First"
zh = "第一个"

[reference.foundations.str.str.from-unicode.details]
en = "Converts a unicode code point into its corresponding string.\n\n"
zh = "将 Unicode 码点转换为其对应的「字符串」（[string](#x-term-string)）。\n\n"

[reference.foundations.str.str.from-unicode.oneliner]
en = "Converts a unicode code point into its corresponding string."
zh = "将 Unicode 码点转换为其对应的字符串。"

[reference.foundations.str.str.from-unicode.title]
en = "From Unicode"
zh = "来自 Unicode"

[reference.foundations.str.str.from-unicode.value.details]
en = "The code point that should be converted."
zh = "应该转换的码点。"

[reference.foundations.str.str.last.details]
en = "Extracts the last grapheme cluster of the string.\nFails with an error if the string is empty."
zh = "提取「字符串」（[string](#x-term-string)）的最后一个字形簇。\n如果字符串为空会出错。"

[reference.foundations.str.str.last.oneliner]
en = "Extracts the last grapheme cluster of the string."
zh = "提取字符串的最后一个字形簇。"

[reference.foundations.str.str.last.title]
en = "Last"
zh = "获取最后一个字符"

[reference.foundations.str.str.len.details]
en = "The length of the string in UTF-8 encoded bytes."
zh = "「字符串」（[string](#x-term-string)）的 UTF-8 编码字节「长度」（[length](#x-term-length)）。"

[reference.foundations.str.str.len.oneliner]
en = "The length of the string in UTF-8 encoded bytes."
zh = "字符串的 UTF-8 编码字节长度。"

[reference.foundations.str.str.len.title]
en = "Length"
zh = "长度"

[reference.foundations.str.str.match.details]
en = "Searches for the specified pattern in the string and returns a\ndictionary with details about the first match or `{none}` if there is no\nmatch.\n\nThe returned dictionary has the following keys:\n- `start`: The start offset of the match\n- `end`: The end offset of the match\n- `text`: The text that matched.\n- `captures`: An array containing a string for each matched capturing\n  group. The first item of the array contains the first matched\n  capturing, not the whole match! This is empty unless the `pattern` was\n  a regex with capturing groups."
zh = "在「字符串」（[string](#x-term-string)）中搜索指定模式，返回包含第一个匹配详细信息的「字典」（[dictionary](#x-term-dictionary)），如果没有匹配则返回 `{none}`。\n\n返回的字典包含以下键：\n- `start`: 匹配的起始偏移量\n- `end`: 匹配的结束偏移量\n- `text`: 匹配的文本\n- `captures`: 包含每个匹配捕获组字符串的数组。数组的第一项包含第一个匹配的捕获，而不是整个匹配！除非 `pattern` 是带有捕获组的正则表达式，否则此项为空。"

[reference.foundations.str.str.match.oneliner]
en = "Searches for the specified pattern in the string and returns a"
zh = "在字符串中搜索指定模式并返回匹配详情。"

[reference.foundations.str.str.match.pattern.details]
en = "The pattern to search for."
zh = "要搜索的模式。"

[reference.foundations.str.str.match.title]
en = "Match"
zh = "匹配"

[reference.foundations.str.str.matches.details]
en = "Searches for the specified pattern in the string and returns an array of\ndictionaries with details about all matches. For details about the\nreturned dictionaries, see above."
zh = "在「字符串」（[string](#x-term-string)）中搜索指定模式，返回包含所有匹配详细信息的「字典」（[dictionary](#x-term-dictionary)）「数组」（[array](#x-term-array)）。有关返回字典的详细信息，请参见上文。"

[reference.foundations.str.str.matches.oneliner]
en = "Searches for the specified pattern in the string and returns an array of"
zh = "在字符串中搜索指定模式并返回所有匹配的数组。"

[reference.foundations.str.str.matches.pattern.details]
en = "The pattern to search for."
zh = "要搜索的模式。"

[reference.foundations.str.str.matches.title]
en = "Matches"
zh = "多个匹配"

[reference.foundations.str.str.oneliner]
en = "A sequence of Unicode codepoints."
zh = "Unicode 码点序列。"

[reference.foundations.str.str.position.details]
en = "Searches for the specified pattern in the string and returns the index\nof the first match as an integer or `{none}` if there is no match."
zh = "在「字符串」（[string](#x-term-string)）中搜索指定模式，返回第一个匹配的索引作为「整数」（[integer](#x-term-integer)），如果没有匹配则返回 `{none}`。"

[reference.foundations.str.str.position.oneliner]
en = "Searches for the specified pattern in the string and returns the index"
zh = "在字符串中搜索指定模式并返回索引。"

[reference.foundations.str.str.position.pattern.details]
en = "The pattern to search for."
zh = "要搜索的模式。"

[reference.foundations.str.str.position.title]
en = "Position"
zh = "位置"

[reference.foundations.str.str.replace.count.details]
en = "If given, only the first `count` matches of the pattern are placed."
zh = "如果给定，只替换模式的前 `count` 个匹配。"

[reference.foundations.str.str.replace.details]
en = "Replace at most `count` occurrences of the given pattern with a\nreplacement string or function (beginning from the start). If no count\nis given, all occurrences are replaced."
zh = "用替换字符串或「函数」（[function](#x-term-function)）替换给定模式的最多 `count` 个出现（从开头开始）。如果未给定计数，则替换所有出现。"

[reference.foundations.str.str.replace.oneliner]
en = "Replace at most `count` occurrences of the given pattern with a"
zh = "用替换内容替换给定模式的最多指定次数出现。"

[reference.foundations.str.str.replace.pattern.details]
en = "The pattern to search for."
zh = "要搜索的模式。"

[reference.foundations.str.str.replace.replacement.details]
en = "The string to replace the matches with or a function that gets a\ndictionary for each match and can return individual replacement\nstrings."
zh = "用于替换匹配项的「字符串」（[string](#x-term-string)）或为每个匹配项获取「字典」（[dictionary](#x-term-dictionary)）并可返回个别替换字符串的函数。"

[reference.foundations.str.str.replace.title]
en = "Replace"
zh = "替换"

[reference.foundations.str.str.rev.details]
en = "Reverse the string."
zh = "反转「字符串」（[string](#x-term-string)）。"

[reference.foundations.str.str.rev.oneliner]
en = "Reverse the string."
zh = "反转字符串。"

[reference.foundations.str.str.rev.title]
en = "Reverse"
zh = "反转"

[reference.foundations.str.str.slice.count.details]
en = "The number of bytes to extract. This is equivalent to passing\n`start + count` as the `end` position. Mutually exclusive with `end`."
zh = "要提取的字节数。这等同于将 `start + count` 作为 `end` 位置传递。与 `end` 互斥。"

[reference.foundations.str.str.slice.details]
en = "Extracts a substring of the string.\nFails with an error if the start or end index is out of bounds."
zh = "提取「字符串」（[string](#x-term-string)）的子字符串。\n如果起始或结束索引超出边界会出错。"

[reference.foundations.str.str.slice.end.details]
en = "The end byte index (exclusive). If omitted, the whole slice until\nthe end of the string is extracted. If negative, indexes from the\nback."
zh = "结束字节索引且「不包括本身」（[exclusive](#x-term-exclusive)）。如果省略，则提取到字符串末尾的整个切片。如果为负数，则从后面索引。"

[reference.foundations.str.str.slice.oneliner]
en = "Extracts a substring of the string."
zh = "提取字符串的子字符串。"

[reference.foundations.str.str.slice.start.details]
en = "The start byte index (inclusive). If negative, indexes from the\nback."
zh = "起始字节索引（包括）。如果为负数，则从后面索引。"

[reference.foundations.str.str.slice.title]
en = "Slice"
zh = "切片"

[reference.foundations.str.str.split.details]
en = "Splits a string at matches of a specified pattern and returns an array\nof the resulting parts.\n\nWhen the empty string is used as a separator, it separates every\ncharacter (i.e., Unicode code point) in the string, along with the\nbeginning and end of the string. In practice, this means that the\nresulting list of parts will contain the empty string at the start\nand end of the list."
zh = "在指定模式的匹配处分割「字符串」（[string](#x-term-string)），返回结果部分的「数组」（[array](#x-term-array)）。\n\n当使用空字符串作为「分隔符」（[separator](#x-term-separator)）时，它会分离字符串中的每个字符（即 Unicode 码点），以及字符串的开头和结尾。实际上，这意味着结果部分列表将在列表的开始和结尾包含空字符串。"

[reference.foundations.str.str.split.oneliner]
en = "Splits a string at matches of a specified pattern and returns an array"
zh = "在指定模式的匹配处分割字符串并返回数组。"

[reference.foundations.str.str.split.pattern.details]
en = "The pattern to split at. Defaults to whitespace."
zh = "分割的模式。默认为空白字符。"

[reference.foundations.str.str.split.title]
en = "Split"
zh = "分割"

[reference.foundations.str.str.starts-with.details]
en = "Whether the string starts with the specified pattern."
zh = "「字符串」（[string](#x-term-string)）是否以指定模式开头。"

[reference.foundations.str.str.starts-with.oneliner]
en = "Whether the string starts with the specified pattern."
zh = "字符串是否以指定模式开头。"

[reference.foundations.str.str.starts-with.pattern.details]
en = "The pattern the string might start with."
zh = "字符串可能开头的模式。"

[reference.foundations.str.str.starts-with.title]
en = "Starts With"
zh = "以...开头"

[reference.foundations.str.str.str.base.details]
en = "The base (radix) to display integers in, between 2 and 36."
zh = "显示「整数」（[integer](#x-term-integer)）的基数（进制），在 2 到 36 之间。"

[reference.foundations.str.str.str.details]
en = "Converts a value to a string.\n\n- Integers are formatted in base 10. This can be overridden with the\n  optional `base` parameter.\n- Floats are formatted in base 10 and never in exponential notation.\n- Negative integers and floats are formatted with the Unicode minus sign\n  (\"−\" U+2212) instead of the ASCII minus sign (\"-\" U+002D).\n- From labels the name is extracted.\n- Bytes are decoded as UTF-8.\n\nIf you wish to convert from and to Unicode code points, see the\n[`to-unicode`]($str.to-unicode) and [`from-unicode`]($str.from-unicode)\nfunctions.\n\n"
zh = "将值转换为「字符串」（[string](#x-term-string)）。\n\n- 整数以 10 进制格式化。可以用可选的 `base` 参数覆盖此设置。\n- 浮点数以 10 进制格式化，且从不使用指数记法。\n- 负整数和浮点数使用 Unicode 减号（\"−\" U+2212）而不是 ASCII 减号（\"-\" U+002D）格式化。\n- 从标签中提取名称。\n- 字节以 UTF-8 解码。\n\n如果您希望在 Unicode 码点之间转换，请参见 [`to-unicode`]($str.to-unicode) 和 [`from-unicode`]($str.from-unicode) 函数。\n\n"

[reference.foundations.str.str.str.oneliner]
en = "Converts a value to a string."
zh = "将值转换为字符串。"

[reference.foundations.str.str.str.title]
en = "Construct"
zh = "构造"

[reference.foundations.str.str.str.value.details]
en = "The value that should be converted to a string."
zh = "应该转换为字符串的值。"

[reference.foundations.str.str.title]
en = "String"
zh = "字符串"

[reference.foundations.str.str.to-unicode.character.details]
en = "The character that should be converted."
zh = "应该转换的字符。"

[reference.foundations.str.str.to-unicode.details]
en = "Converts a character into its corresponding code point.\n\n"
zh = "将字符转换为其对应的码点。\n\n"

[reference.foundations.str.str.to-unicode.oneliner]
en = "Converts a character into its corresponding code point."
zh = "将字符转换为其对应的码点。"

[reference.foundations.str.str.to-unicode.title]
en = "To Unicode"
zh = "转为 Unicode"

[reference.foundations.str.str.trim.at.details]
en = "Can be `{start}` or `{end}` to only trim the start or end of the\nstring. If omitted, both sides are trimmed."
zh = "可以是 `{start}` 或 `{end}` 来只修剪「字符串」（[string](#x-term-string)）的开始或结束。如果省略，则修剪两边。"

[reference.foundations.str.str.trim.details]
en = "Removes matches of a pattern from one or both sides of the string, once or\nrepeatedly and returns the resulting string."
zh = "从字符串的一侧或两侧移除模式的匹配，一次或重复地，并返回结果字符串。"

[reference.foundations.str.str.trim.oneliner]
en = "Removes matches of a pattern from one or both sides of the string, once or"
zh = "从字符串的一侧或两侧移除模式的匹配。"

[reference.foundations.str.str.trim.pattern.details]
en = "The pattern to search for. If `{none}`, trims white spaces."
zh = "要搜索的模式。如果是 `{none}`，则修剪空白字符。"

[reference.foundations.str.str.trim.repeat.details]
en = "Whether to repeatedly removes matches of the pattern or just once.\nDefaults to `{true}`."
zh = "是否重复移除模式的匹配或只移除一次。\n默认为 `{true}`。"

[reference.foundations.str.str.trim.title]
en = "Trim"
zh = "修剪"

[reference.foundations.str.title]
en = "String"
zh = "字符串"

[reference.foundations.symbol.description]
en = "Documentation for the Symbol type."
zh = "Symbol「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.symbol.oneliner]
en = "A Unicode symbol."
zh = "一个 Unicode 符号。"

[reference.foundations.symbol.symbol.details]
en = "{{typst-docs/reference.foundations.symbol.symbol.details.toml}}"

[reference.foundations.symbol.symbol.oneliner]
en = "A Unicode symbol."
zh = "一个 Unicode 符号。"

[reference.foundations.symbol.symbol.symbol.details]
en = "Create a custom symbol with modifiers.\n\n"
zh = "创建带有修饰符的自定义符号。\n\n"

[reference.foundations.symbol.symbol.symbol.oneliner]
en = "Create a custom symbol with modifiers."
zh = "创建带有修饰符的自定义符号。"

[reference.foundations.symbol.symbol.symbol.title]
en = "Construct"
zh = "构造"

[reference.foundations.symbol.symbol.symbol.variants.details]
en = "The variants of the symbol.\n\nCan be a just a string consisting of a single character for the\nmodifierless variant or an array with two strings specifying the modifiers\nand the symbol. Individual modifiers should be separated by dots. When\ndisplaying a symbol, Typst selects the first from the variants that have\nall attached modifiers and the minimum number of other modifiers."
zh = "符号的变体。\n\n可以是包含单个字符的「字符串」（[string](#x-term-string)）用于无修饰符变体，或包含两个字符串的「数组」（[array](#x-term-array)）用于指定修饰符和符号。单个修饰符应以点分隔。显示符号时，Typst 从变体中选择具有所有附加修饰符且其他修饰符数量最少的第一个。"

[reference.foundations.symbol.symbol.title]
en = "Symbol"
zh = "符号"

[reference.foundations.symbol.title]
en = "Symbol"
zh = "符号"

[reference.foundations.sys.description]
en = "Documentation for the sys functions."
zh = "sys 函数的文档。"

[reference.foundations.sys.oneliner]
en = "Module for system interactions."
zh = "用于系统交互的模块。"

[reference.foundations.sys.sys.details]
en = "Module for system interactions.\n\nThis module defines the following items:\n\n- The `sys.version` constant (of type [`version`]) that specifies\n  the currently active Typst compiler version.\n\n- The `sys.inputs` [dictionary], which makes external inputs\n  available to the project. An input specified in the command line as\n  `--input key=value` becomes available under `sys.inputs.key` as\n  `{\"value\"}`. To include spaces in the value, it may be enclosed with\n  single or double quotes.\n\n  The value is always of type [string]($str). More complex data\n  may be parsed manually using functions like [`json.decode`]($json.decode).\n"
zh = "用于系统交互的模块。\n\n此模块定义以下项目：\n\n- `sys.version` 常量（「类型」（[type](#x-term-type)）为 [`version`]）指定当前活动的 Typst 编译器版本。\n\n- `sys.inputs` 「字典」（[dictionary](#x-term-dictionary)），使外部输入对项目可用。在命令行中指定为 `--input key=value` 的输入在 `sys.inputs.key` 下作为 `{\"value\"}` 可用。要在值中包含空格，可以用单引号或双引号括起来。\n\n  值始终为 [字符串]($str) 类型。更复杂的数据可以使用像 [`json.decode`]($json.decode) 这样的函数手动解析。\n"

[reference.foundations.sys.sys.title]
en = "System"
zh = "系统"

[reference.foundations.sys.title]
en = "System"
zh = "系统"

[reference.foundations.target.description]
en = "Documentation for the `target` function."
zh = "`target` 函数的文档。"

[reference.foundations.target.oneliner]
en = "Returns the current export target."
zh = "返回当前导出目标。"

[reference.foundations.target.target.details]
en = "{{typst-docs/reference.foundations.target.target.details.toml}}"

[reference.foundations.target.target.oneliner]
en = "Returns the current export target."
zh = "返回当前导出目标。"

[reference.foundations.target.target.title]
en = "Target"
zh = "目标"

[reference.foundations.target.title]
en = "Target"
zh = "目标"

[reference.foundations.title]
en = "Foundations"
zh = "基础"

[reference.foundations.type.description]
en = "Documentation for the Type type."
zh = "Type「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.type.oneliner]
en = "Describes a kind of value."
zh = "描述一种值的类型。"

[reference.foundations.type.title]
en = "Type"
zh = "类型"

[reference.foundations.type.type.details]
en = "{{typst-docs/reference.foundations.type.type.details.toml}}"

[reference.foundations.type.type.oneliner]
en = "Describes a kind of value."
zh = "描述值的类型。"

[reference.foundations.type.type.title]
en = "Type"
zh = "类型"

[reference.foundations.type.type.type.details]
en = "Determines a value's type.\n\n"
zh = "确定值的「类型」（[type](#x-term-type)）。\n\n"

[reference.foundations.type.type.type.oneliner]
en = "Determines a value's type."
zh = "确定值的类型。"

[reference.foundations.type.type.type.title]
en = "Construct"
zh = "构造"

[reference.foundations.type.type.type.value.details]
en = "The value whose type's to determine."
zh = "要确定类型的值。"

[reference.foundations.version.description]
en = "Documentation for the Version type."
zh = "Version「类型」（[type](#x-term-type)）的文档。"

[reference.foundations.version.oneliner]
en = "A version with an arbitrary number of components."
zh = "具有任意数量组件的版本。"

[reference.foundations.version.title]
en = "Version"
zh = "版本"

[reference.foundations.version.version.at.details]
en = "Retrieves a component of a version.\n\nThe returned integer is always non-negative. Returns `0` if the version\nisn't specified to the necessary length."
zh = "检索版本的一个组件。\n\n返回的整数总是非负的。如果版本没有指定到必要的长度，则返回 `0`。"

[reference.foundations.version.version.at.index.details]
en = "The index at which to retrieve the component. If negative, indexes\nfrom the back of the explicitly given components."
zh = "要检索组件的索引。如果为负数，则从显式给定组件的末尾开始索引。"

[reference.foundations.version.version.at.oneliner]
en = "Retrieves a component of a version."
zh = "检索版本的一个组件。"

[reference.foundations.version.version.at.title]
en = "At"
zh = "在"

[reference.foundations.version.version.details]
en = "A version with an arbitrary number of components.\n\nThe first three components have names that can be used as fields: `major`,\n`minor`, `patch`. All following components do not have names.\n\nThe list of components is semantically extended by an infinite list of\nzeros. This means that, for example, `0.8` is the same as `0.8.0`. As a\nspecial case, the empty version (that has no components at all) is the same\nas `0`, `0.0`, `0.0.0`, and so on.\n\nThe current version of the Typst compiler is available as `sys.version`.\n\nYou can convert a version to an array of explicitly given components using\nthe [`array`] constructor."
zh = "具有任意数量组件的版本。\n\n前三个组件有可以用作字段的名称：`major`、`minor`、`patch`。所有后续组件都没有名称。\n\n组件列表在语义上由无限的零列表扩展。这意味着，例如，`0.8` 与 `0.8.0` 相同。作为特殊情况，空版本（根本没有组件）与 `0`、`0.0`、`0.0.0` 等相同。\n\nTypst 编译器的当前版本可以通过 `sys.version` 获得。\n\n您可以使用 [`array`] 构造函数将版本转换为显式给定组件的「数组」（[array](#x-term-array)）。"

[reference.foundations.version.version.oneliner]
en = "A version with an arbitrary number of components."
zh = "具有任意数量组件的版本。"

[reference.foundations.version.version.title]
en = "Version"
zh = "版本"

[reference.foundations.version.version.version.components.details]
en = "The components of the version (array arguments are flattened)"
zh = "版本的组件（「数组」（[array](#x-term-array)）参数会被展平）"

[reference.foundations.version.version.version.details]
en = "Creates a new version.\n\nIt can have any number of components (even zero).\n\n"
zh = "创建一个新版本。\n\n它可以有任意数量的组件（甚至零个）。\n\n"

[reference.foundations.version.version.version.oneliner]
en = "Creates a new version."
zh = "创建一个新版本。"

[reference.foundations.version.version.version.title]
en = "Construct"
zh = "构造"

[reference.html.description]
en = "Documentation for functions related to HTML in Typst."
zh = "Typst 中与 HTML 相关的函数文档。"

[reference.html.elem.description]
en = "Documentation for the `elem` function."
zh = "`elem` 函数的文档。"

[reference.html.elem.elem.attrs.details]
en = "The element's HTML attributes."
zh = "元素的 HTML 属性。"

[reference.html.elem.elem.body.details]
en = "The contents of the HTML element.\n\nThe body can be arbitrary Typst content."
zh = "HTML 元素的内容。\n\n主体可以是任意 Typst 内容。"

[reference.html.elem.elem.details]
en = "An HTML element that can contain Typst content.\n\nTypst's HTML export automatically generates the appropriate tags for most\nelements. However, sometimes, it is desirable to retain more control. For\nexample, when using Typst to generate your blog, you could use this function\nto wrap each article in an `<article>` tag.\n\nTypst is aware of what is valid HTML. A tag and its attributes must form\nsyntactically valid HTML. Some tags, like `meta` do not accept content.\nHence, you must not provide a body for them. We may add more checks in the\nfuture, so be sure that you are generating valid HTML when using this\nfunction.\n\nNormally, Typst will generate `html`, `head`, and `body` tags for you. If\nyou instead create them with this function, Typst will omit its own tags.\n\n```typ\n#html.elem(\"div\", attrs: (style: \"background: aqua\"))[\n  A div with _Typst content_ inside!\n]\n```"
zh = "可以包含 Typst 内容的 HTML 元素。\n\nTypst 的 HTML 导出功能会自动为大多数元素生成适当的标签。但是，有时希望保持更多控制。例如，当使用 Typst 生成博客时，您可以使用此「函数」（[function](#x-term-function)）将每篇文章包装在 `<article>` 标签中。\n\nTypst 知道什么是有效的 HTML。标签及其属性必须形成语法上有效的 HTML。一些标签，如 `meta`，不接受内容。因此，您不能为它们提供主体。我们可能会在将来添加更多检查，所以在使用此函数时请确保您正在生成有效的 HTML。\n\n通常，Typst 会为您生成 `html`、`head` 和 `body` 标签。如果您使用此函数创建它们，Typst 将省略其自己的标签。\n\n```typ\n#html.elem(\"div\", attrs: (style: \"background: aqua\"))[\n  A div with _Typst content_ inside!\n]\n```"

[reference.html.elem.elem.oneliner]
en = "An HTML element that can contain Typst content."
zh = "可以包含 Typst 内容的 HTML 元素。"

[reference.html.elem.elem.tag.details]
en = "The element's tag."
zh = "元素的标签。"

[reference.html.elem.elem.title]
en = "Elem"
zh = "元素"

[reference.html.elem.oneliner]
en = "An HTML element that can contain Typst content."
zh = "可以包含 Typst 内容的 HTML 元素。"

[reference.html.elem.title]
en = "Elem"
zh = "元素"

[reference.html.frame.description]
en = "Documentation for the `frame` function."
zh = "`frame` 函数的文档。"

[reference.html.frame.frame.body.details]
en = "The content that shall be laid out."
zh = "应该布局的内容。"

[reference.html.frame.frame.details]
en = "An element that lays out its content as an inline SVG.\n\nSometimes, converting Typst content to HTML is not desirable. This can be\nthe case for plots and other content that relies on positioning and styling\nto convey its message.\n\nThis function allows you to use the Typst layout engine that would also be\nused for PDF, SVG, and PNG export to render a part of your document exactly\nhow it would appear when exported in one of these formats. It embeds the\ncontent as an inline SVG."
zh = "将其内容作为内联 SVG 布局的元素。\n\n有时，将 Typst 内容转换为 HTML 是不合适的。这可能是图表和其他依赖定位和样式传达信息的内容的情况。\n\n此「函数」（[function](#x-term-function)）允许您使用也将用于 PDF、SVG 和 PNG 导出的 Typst 布局引擎来呈现文档的一部分，使其完全像在这些格式之一中导出时的样子。它将内容嵌入为内联 SVG。"

[reference.html.frame.frame.oneliner]
en = "An element that lays out its content as an inline SVG."
zh = "将其内容作为内联 SVG 布局的元素。"

[reference.html.frame.frame.title]
en = "Frame"
zh = "框架"

[reference.html.frame.oneliner]
en = "An element that lays out its content as an inline SVG."
zh = "将其内容作为内联 SVG 布局的元素。"

[reference.html.frame.title]
en = "Frame"
zh = "框架"

[reference.html.html.details]
en = "{{typst-docs/reference.html.html.details.toml}}"

[reference.html.html.title]
en = "HTML"
zh = "HTML"

[reference.html.title]
en = "HTML"
zh = "HTML"

[reference.introspection.counter.counter.at.details]
en = "Retrieves the value of the counter at the given location. Always returns\nan array of integers, even if the counter has just one number.\n\nThe `selector` must match exactly one element in the document. The most\nuseful kinds of selectors for this are [labels]($label) and\n[locations]($location)."
zh = "检索给定位置的计数器值。总是返回「整数」（[integer](#x-term-integer)）「数组」（[array](#x-term-array)），即使计数器只有一个数字。\n\n`selector` 必须在文档中完全匹配一个元素。最有用的选择器类型是 [标签]($label) 和 [位置]($location)。"

[reference.introspection.counter.counter.at.oneliner]
en = "Retrieves the value of the counter at the given location. Always returns"
zh = "检索给定位置的计数器值。"

[reference.introspection.counter.counter.at.selector.details]
en = "The place at which the counter's value should be retrieved."
zh = "应该检索计数器值的位置。"

[reference.introspection.counter.counter.at.title]
en = "At"
zh = "在位置"

[reference.introspection.counter.counter.counter.details]
en = "Create a new counter identified by a key."
zh = "创建由键标识的新计数器。"

[reference.introspection.counter.counter.counter.key.details]
en = "The key that identifies this counter.\n\n- If it is a string, creates a custom counter that is only affected\n  by manual updates,\n- If it is the [`page`] function, counts through pages,\n- If it is a [selector], counts through elements that matches with the\n  selector. For example,\n  - provide an element function: counts elements of that type,\n  - provide a [`{<label>}`]($label): counts elements with that label."
zh = "标识此计数器的键。\n\n- 如果是「字符串」（[string](#x-term-string)），创建只受手动更新影响的自定义计数器，\n- 如果是 [`page`] 函数，则计算页面数，\n- 如果是选择器，则计算与选择器匹配的元素。例如，\n  - 提供元素函数：计算该类型的元素，\n  - 提供 [`{<label>}`]($label)：计算具有该标签的元素。"

[reference.introspection.counter.counter.counter.oneliner]
en = "Create a new counter identified by a key."
zh = "创建由键标识的新计数器。"

[reference.introspection.counter.counter.counter.title]
en = "Construct"
zh = "构造"

[reference.introspection.counter.counter.details]
en = "{{typst-docs/reference.introspection.counter.counter.details.toml}}"

[reference.introspection.counter.counter.display.both.details]
en = "If enabled, displays the current and final top-level count together.\nBoth can be styled through a single numbering pattern. This is used\nby the page numbering property to display the current and total\nnumber of pages when a pattern like `{\"1 / 1\"}` is given."
zh = "如果启用，将当前和最终顶级计数一起显示。\n两者都可以通过单个编号模式设置样式。这用于\n页面编号属性，当给定像 `{\"1 / 1\"}` 这样的模式时显示当前和总页数。"

[reference.introspection.counter.counter.display.details]
en = "Displays the current value of the counter with a numbering and returns\nthe formatted output."
zh = "显示计数器的当前值及其编号，并返回格式化的输出。"

[reference.introspection.counter.counter.display.numbering.details]
en = "A [numbering pattern or a function]($numbering), which specifies how\nto display the counter. If given a function, that function receives\neach number of the counter as a separate argument. If the amount of\nnumbers varies, e.g. for the heading argument, you can use an\n[argument sink]($arguments).\n\nIf this is omitted or set to `{auto}`, displays the counter with the\nnumbering style for the counted element or with the pattern\n`{\"1.1\"}` if no such style exists."
zh = "[编号模式或函数]($numbering)，指定如何显示计数器。如果给定「函数」（[function](#x-term-function)），该函数会将计数器的每个数字作为单独的「参数」（[parameter](#x-term-parameter)）接收。如果数字数量变化，例如对于标题参数，您可以使用 [参数汇总]($arguments)。\n\n如果省略或设置为 `{auto}`，则使用被计数元素的编号样式显示计数器，如果不存在此样式，则使用模式 `{\"1.1\"}`。"

[reference.introspection.counter.counter.display.oneliner]
en = "Displays the current value of the counter with a numbering and returns"
zh = "显示计数器的当前值及其编号。"

[reference.introspection.counter.counter.display.title]
en = "Display"
zh = "显示"

[reference.introspection.counter.counter.final.details]
en = "Retrieves the value of the counter at the end of the document. Always\nreturns an array of integers, even if the counter has just one number."
zh = "检索文档末尾的计数器值。总是返回「整数」（[integer](#x-term-integer)）「数组」（[array](#x-term-array)），即使计数器只有一个数字。"

[reference.introspection.counter.counter.final.oneliner]
en = "Retrieves the value of the counter at the end of the document. Always"
zh = "检索文档末尾的计数器值。"

[reference.introspection.counter.counter.final.title]
en = "Final"
zh = "最终值"

[reference.introspection.counter.counter.get.details]
en = "Retrieves the value of the counter at the current location. Always\nreturns an array of integers, even if the counter has just one number.\n\nThis is equivalent to `{counter.at(here())}`."
zh = "检索当前位置的计数器值。总是返回「整数」（[integer](#x-term-integer)）「数组」（[array](#x-term-array)），即使计数器只有一个数字。\n\n这等价于 `{counter.at(here())}`。"

[reference.introspection.counter.counter.get.oneliner]
en = "Retrieves the value of the counter at the current location. Always"
zh = "检索当前位置的计数器值。"

[reference.introspection.counter.counter.get.title]
en = "Get"
zh = "获取"

[reference.introspection.counter.counter.oneliner]
en = "Counts through pages, elements, and more."
zh = "计算页面、元素等。"

[reference.introspection.counter.counter.step.details]
en = "Increases the value of the counter by one.\n\nThe update will be in effect at the position where the returned content\nis inserted into the document. If you don't put the output into the\ndocument, nothing happens! This would be the case, for example, if you\nwrite `{let _ = counter(page).step()}`. Counter updates are always\napplied in layout order and in that case, Typst wouldn't know when to\nstep the counter."
zh = "将计数器值增加一。\n\n更新将在返回内容插入文档的位置生效。如果您不将输出放入文档，则什么都不会发生！例如，如果您写 `{let _ = counter(page).step()}`，则不会发生更新。计数器更新始终按布局顺序应用，在这种情况下，Typst 不知道何时增加计数器。"

[reference.introspection.counter.counter.step.level.details]
en = "The depth at which to step the counter. Defaults to `{1}`."
zh = "要增加计数器的深度。默认为 `{1}`。"

[reference.introspection.counter.counter.step.oneliner]
en = "Increases the value of the counter by one."
zh = "将计数器值增加一。"

[reference.introspection.counter.counter.step.title]
en = "Step"
zh = "增加"

[reference.introspection.counter.counter.title]
en = "Counter"
zh = "计数器"

[reference.introspection.counter.counter.update.details]
en = "Updates the value of the counter.\n\nJust like with `step`, the update only occurs if you put the resulting\ncontent into the document."
zh = "更新计数器值。\n\n就像 `step` 一样，更新只在您将结果内容放入文档时生效。"

[reference.introspection.counter.counter.update.oneliner]
en = "Updates the value of the counter."
zh = "更新计数器值。"

[reference.introspection.counter.counter.update.title]
en = "Update"
zh = "更新"

[reference.introspection.counter.counter.update.update.details]
en = "If given an integer or array of integers, sets the counter to that\nvalue. If given a function, that function receives the previous\ncounter value (with each number as a separate argument) and has to\nreturn the new value (integer or array)."
zh = "如果给定「整数」（[integer](#x-term-integer)）或「整数」（[integer](#x-term-integer)）「数组」（[array](#x-term-array)），则将计数器设置为该值。如果给定「函数」（[function](#x-term-function)），该函数接收之前的计数器值（每个数字作为单独的「参数」（[parameter](#x-term-parameter)）），并返回新的值（「整数」（[integer](#x-term-integer)）或「整数」（[integer](#x-term-integer)）「数组」（[array](#x-term-array)））。"

[reference.introspection.counter.description]
en = "Documentation for the Counter type."
zh = "计数器类型的文档。"

[reference.introspection.counter.oneliner]
en = "Counts through pages, elements, and more."
zh = "计算页面、元素等。"

[reference.introspection.counter.title]
en = "Counter"
zh = "计数器"

[reference.introspection.description]
en = "Documentation for functions related to Introspection in Typst."
zh = "Typst 中的「内省」（[introspection](#x-term-introspection)）相关函数的文档。"

[reference.introspection.here.description]
en = "Documentation for the `here` function."
zh = "`here` 函数的文档。"

[reference.introspection.here.here.details]
en = "{{typst-docs/reference.introspection.here.here.details.toml}}"

[reference.introspection.here.here.oneliner]
en = "Provides the current location in the document."
zh = "提供文档中的当前位置。"

[reference.introspection.here.here.title]
en = "Here"
zh = "这里"

[reference.introspection.here.oneliner]
en = "Provides the current location in the document."
zh = "提供文档中的当前位置。"

[reference.introspection.here.title]
en = "Here"
zh = "这里"

[reference.introspection.introspection.details]
en = "Interactions between document parts.\n\nThis category is home to Typst's introspection capabilities: With the `counter`\nfunction, you can access and manipulate page, section, figure, and equation\ncounters or create custom ones. Meanwhile, the `query` function lets you search\nfor elements in the document to construct things like a list of figures or\nheaders which show the current chapter title.\n\nMost of the functions are _contextual._ It is recommended to read the chapter on\n[context] before continuing here.\n"
zh = "文档部分之间的交互。\n\n此类别是 Typst 内省功能的家园：使用 `counter` 函数，您可以访问和操作页面、章节、图表和方程计数器或创建自定义计数器。同时，`query` 函数允许您在文档中搜索元素，以构造诸如图表列表或显示当前章节标题的标题列表之类的东西。\n\n大多数函数是「上下文」（[context](#x-term-context)）相关的。建议在继续之前阅读 [上下文] 章节。\n"

[reference.introspection.introspection.title]
en = "Introspection"
zh = "内省"

[reference.introspection.locate.description]
en = "Documentation for the `locate` function."
zh = "`locate` 函数的文档。"

[reference.introspection.locate.locate.details]
en = "Determines the location of an element in the document.\n\nTakes a selector that must match exactly one element and returns that\nelement's [`location`]. This location can, in particular, be used to\nretrieve the physical [`page`]($location.page) number and\n[`position`]($location.position) (page, x, y) for that element.\n\n# Examples\nLocating a specific element:\n```example\n#context [\n  Introduction is at: \\\n  #locate(<intro>).position()\n]\n\n= Introduction <intro>\n```"
zh = "确定文档中元素的位置。\n\n接受必须完全匹配一个元素的选择器，并返回该元素的 [`location`]。此位置可以特别用于检索该元素的物理 [`page`]($location.page) 编号和 [`position`]($location.position)（页面、x、y）。\n\n# 示例\n定位特定元素：\n```example\n#context [\n  介绍位于： \\\n  #locate(<intro>).position()\n]\n\n= 介绍 <intro>\n```"

[reference.introspection.locate.locate.oneliner]
en = "Determines the location of an element in the document."
zh = "确定文档中元素的位置。"

[reference.introspection.locate.locate.selector.details]
en = "A selector that should match exactly one element. This element will be\nlocated.\n\nEspecially useful in combination with\n- [`here`] to locate the current context,\n- a [`location`] retrieved from some queried element via the\n  [`location()`]($content.location) method on content."
zh = "必须完全匹配一个元素的选择器。将定位该元素。\n\n特别有用的是与\n- [`here`] 一起定位当前上下文，\n- 通过内容上的 [`location()`]($content.location) 方法从某个查询元素检索的 [`location`]。"

[reference.introspection.locate.locate.title]
en = "Locate"
zh = "定位"

[reference.introspection.locate.oneliner]
en = "Determines the location of an element in the document."
zh = "确定文档中元素的位置。"

[reference.introspection.locate.title]
en = "Locate"
zh = "定位"

[reference.introspection.location.description]
en = "Documentation for the Location type."
zh = "位置类型的文档。"

[reference.introspection.location.location.details]
en = "Identifies an element in the document.\n\nA location uniquely identifies an element in the document and lets you\naccess its absolute position on the pages. You can retrieve the current\nlocation with the [`here`] function and the location of a queried or shown\nelement with the [`location()`]($content.location) method on content.\n\n# Locatable elements { #locatable }\nCurrently, only a subset of element functions is locatable. Aside from\nheadings and figures, this includes equations, references, quotes and all\nelements with an explicit label. As a result, you _can_ query for e.g.\n[`strong`] elements, but you will find only those that have an explicit\nlabel attached to them. This limitation will be resolved in the future."
zh = "标识文档中的元素。\n\n位置唯一标识文档中的元素，并允许您访问其在页面上的绝对位置。您可以使用 [`here`] 函数检索当前位置，并使用内容上的 [`location()`]($content.location) 方法检索查询或显示元素的位置。\n\n# 可定位元素 { #locatable }\n目前，只有部分元素函数是可定位的。除了标题和图表外，还包括方程、引用、引号以及所有带有显式标签的元素。因此，您可以查询例如 [`strong`] 元素，但您只会找到那些带有显式标签的元素。将来将解决此限制。"

[reference.introspection.location.location.oneliner]
en = "Identifies an element in the document."
zh = "标识文档中的元素。"

[reference.introspection.location.location.page-numbering.details]
en = "Returns the page numbering pattern of the page at this location. This\ncan be used when displaying the page counter in order to obtain the\nlocal numbering. This is useful if you are building custom indices or\noutlines.\n\nIf the page numbering is set to `{none}` at that location, this function\nreturns `{none}`."
zh = "返回此位置页面的编号模式。这在显示页面计数器时特别有用，以获得本地编号。如果您正在构建自定义索引或大纲，这很有用。\n\n如果该位置的页面编号设置为 `{none}`，则此函数返回 `{none}`。"

[reference.introspection.location.location.page-numbering.oneliner]
en = "Returns the page numbering pattern of the page at this location. This"
zh = "返回此位置页面的编号模式。"

[reference.introspection.location.location.page-numbering.title]
en = "Page Numbering"
zh = "页面编号"

[reference.introspection.location.location.page.details]
en = "Returns the page number for this location.\n\nNote that this does not return the value of the [page counter]($counter)\nat this location, but the true page number (starting from one).\n\nIf you want to know the value of the page counter, use\n`{counter(page).at(loc)}` instead.\n\nCan be used with [`here`] to retrieve the physical page position\nof the current context:\n"
zh = "返回此位置的页面编号。\n\n请注意，这不会返回此位置的 [页面计数器]($counter) 值，而是返回真实的页面编号（从一开始）。\n\n如果您想知道页面计数器的值，请使用 `{counter(page).at(loc)}` 代替。\n\n可以与 [`here`] 一起使用，以检索当前上下文的物理页面位置：\n"

[reference.introspection.location.location.page.oneliner]
en = "Returns the page number for this location."
zh = "返回此位置的页面编号。"

[reference.introspection.location.location.page.title]
en = "Page"
zh = "页面"

[reference.introspection.location.location.position.details]
en = "Returns a dictionary with the page number and the x, y position for this\nlocation. The page number starts at one and the coordinates are measured\nfrom the top-left of the page.\n\nIf you only need the page number, use `page()` instead as it allows\nTypst to skip unnecessary work."
zh = "返回一个包含此位置的页面编号和 x、y 位置的「字典」（[dictionary](#x-term-dictionary)）。页面编号从一开始，坐标从页面的左上角开始测量。\n\n如果您只需要页面编号，请使用 `page()` 代替，因为它允许 Typst 跳过不必要的计算。"

[reference.introspection.location.location.position.oneliner]
en = "Returns a dictionary with the page number and the x, y position for this"
zh = "返回一个包含此位置的页面编号和 x、y 位置的「字典」（[dictionary](#x-term-dictionary)）。"

[reference.introspection.location.location.position.title]
en = "Position"
zh = "位置"

[reference.introspection.location.location.title]
en = "Location"
zh = "位置"

[reference.introspection.location.oneliner]
en = "Identifies an element in the document."
zh = "标识文档中的元素。"

[reference.introspection.location.title]
en = "Location"
zh = "位置"

[reference.introspection.metadata.description]
en = "Documentation for the `metadata` function."
zh = "`metadata` 函数的文档。"

[reference.introspection.metadata.metadata.details]
en = "Exposes a value to the query system without producing visible content.\n\nThis element can be retrieved with the [`query`] function and from the\ncommand line with\n[`typst query`]($reference/introspection/query/#command-line-queries). Its\npurpose is to expose an arbitrary value to the introspection system. To\nidentify a metadata value among others, you can attach a [`label`] to it and\nquery for that label.\n\nThe `metadata` element is especially useful for command line queries because\nit allows you to expose arbitrary values to the outside world.\n\n```example\n// Put metadata somewhere.\n#metadata(\"This is a note\") <note>\n\n// And find it from anywhere else.\n#context {\n  query(<note>).first().value\n}\n```"
zh = "将值暴露给查询系统，而不产生可见内容。\n\n此元素可以通过 [`query`] 函数从命令行检索，使用\n[`typst query`]($reference/introspection/query/#command-line-queries)。它的目的是将任意值暴露给内省系统。要识别其他元数据值，您可以将其附加一个 [`label`]，并查询该标签。\n\n`metadata` 元素对于命令行查询特别有用，因为它允许您将任意值暴露给外部世界。\n\n```example\n// 将元数据放在某个地方。\n#metadata(\"This is a note\") <note>\n\n// 从任何地方找到它。\n#context {\n  query(<note>).first().value\n}\n```"

[reference.introspection.metadata.metadata.oneliner]
en = "Exposes a value to the query system without producing visible content."
zh = "将值暴露给查询系统，而不产生可见内容。"

[reference.introspection.metadata.metadata.title]
en = "Metadata"
zh = "元数据"

[reference.introspection.metadata.metadata.value.details]
en = "The value to embed into the document."
zh = "要嵌入到文档中的值。"

[reference.introspection.metadata.oneliner]
en = "Exposes a value to the query system without producing visible content."
zh = "将值暴露给查询系统，而不产生可见内容。"

[reference.introspection.metadata.title]
en = "Metadata"
zh = "元数据"

[reference.introspection.query.description]
en = "Documentation for the `query` function."
zh = "`query` 函数的文档。"

[reference.introspection.query.oneliner]
en = "Finds elements in the document."
zh = "在文档中查找元素。"

[reference.introspection.query.query.details]
en = "{{typst-docs/reference.introspection.query.query.details.toml}}"

[reference.introspection.query.query.oneliner]
en = "Finds elements in the document."
zh = "在文档中查找元素。"

[reference.introspection.query.query.target.details]
en = "Can be\n- an element function like a `heading` or `figure`,\n- a `{<label>}`,\n- a more complex selector like `{heading.where(level: 1)}`,\n- or `{selector(heading).before(here())}`.\n\nOnly [locatable]($location/#locatable) element functions are supported."
zh = "可以是\n- 元素函数，如 `heading` 或 `figure`，\n- `{<label>}`，\n- 更复杂的选择器，如 `{heading.where(level: 1)}`，\n- 或 `{selector(heading).before(here())}`。\n\n仅支持 [可定位]($location/#locatable) 元素函数。"

[reference.introspection.query.query.title]
en = "Query"
zh = "查询"

[reference.introspection.query.title]
en = "Query"
zh = "查询"

[reference.introspection.state.description]
en = "Documentation for the State type."
zh = "State 类型的文档。"

[reference.introspection.state.oneliner]
en = "Manages stateful parts of your document."
zh = "管理文档中的状态部分。"

[reference.introspection.state.state.at.details]
en = "Retrieves the value of the state at the given selector's unique match.\n\nThe `selector` must match exactly one element in the document. The most\nuseful kinds of selectors for this are [labels]($label) and\n[locations]($location)."
zh = "检索给定选择器唯一匹配的 state 值。\n\n`selector` 必须完全匹配文档中的一个元素。最实用的选择器类型是 [标签]($label) 和 [位置]($location)。"

[reference.introspection.state.state.at.oneliner]
en = "Retrieves the value of the state at the given selector's unique match."
zh = "检索给定选择器唯一匹配的 state 值。"

[reference.introspection.state.state.at.selector.details]
en = "The place at which the state's value should be retrieved."
zh = "state 值应该被检索的位置。"

[reference.introspection.state.state.at.title]
en = "At"
zh = "在"

[reference.introspection.state.state.details]
en = "{{typst-docs/reference.introspection.state.state.details.toml}}"

[reference.introspection.state.state.final.details]
en = "Retrieves the value of the state at the end of the document."
zh = "检索文档末尾的 state 值。"

[reference.introspection.state.state.final.oneliner]
en = "Retrieves the value of the state at the end of the document."
zh = "检索文档末尾的 state 值。"

[reference.introspection.state.state.final.title]
en = "Final"
zh = "最终"

[reference.introspection.state.state.get.details]
en = "Retrieves the value of the state at the current location.\n\nThis is equivalent to `{state.at(here())}`."
zh = "检索当前位置的 state 值。\n\n这等同于 `{state.at(here())}`。"

[reference.introspection.state.state.get.oneliner]
en = "Retrieves the value of the state at the current location."
zh = "检索当前位置的 state 值。"

[reference.introspection.state.state.get.title]
en = "Get"
zh = "获取"

[reference.introspection.state.state.oneliner]
en = "Manages stateful parts of your document."
zh = "管理文档中的状态部分。"

[reference.introspection.state.state.state.details]
en = "Create a new state identified by a key."
zh = "创建一个由键标识的新 state。"

[reference.introspection.state.state.state.init.details]
en = "The initial value of the state."
zh = "state 的初始值。"

[reference.introspection.state.state.state.key.details]
en = "The key that identifies this state."
zh = "标识此 state 的键。"

[reference.introspection.state.state.state.oneliner]
en = "Create a new state identified by a key."
zh = "创建一个由键标识的新 state。"

[reference.introspection.state.state.state.title]
en = "Construct"
zh = "构造"

[reference.introspection.state.state.title]
en = "State"
zh = "State"

[reference.introspection.state.state.update.details]
en = "Update the value of the state.\n\nThe update will be in effect at the position where the returned content\nis inserted into the document. If you don't put the output into the\ndocument, nothing happens! This would be the case, for example, if you\nwrite `{let _ = state(\"key\").update(7)}`. State updates are always\napplied in layout order and in that case, Typst wouldn't know when to\nupdate the state."
zh = "更新 state 的值。\n\n更新将在返回内容插入文档的位置生效。如果您不将输出放入文档中，则什么都不会发生！例如，如果您写 `{let _ = state(\"key\").update(7)}`，则状态更新始终按布局顺序应用，在这种情况下，Typst 不知道何时更新状态。"

[reference.introspection.state.state.update.oneliner]
en = "Update the value of the state."
zh = "更新 state 的值。"

[reference.introspection.state.state.update.title]
en = "Update"
zh = "更新"

[reference.introspection.state.state.update.update.details]
en = "If given a non function-value, sets the state to that value. If\ngiven a function, that function receives the previous state and has\nto return the new state."
zh = "如果给定一个非函数值，则将 state 设置为该值。如果给定一个函数，则该函数接收前一个 state 并返回新的 state。"

[reference.introspection.state.title]
en = "State"
zh = "State"

[reference.introspection.title]
en = "Introspection"
zh = "内省"

[reference.layout.align.align.alignment.details]
en = "The [alignment] along both axes.\n\n"
zh = "沿两个轴的对齐方式。\n\n"

[reference.layout.align.align.body.details]
en = "The content to align."
zh = "要对齐的内容。"

[reference.layout.align.align.details]
en = "{{typst-docs/reference.layout.align.align.details.toml}}"

[reference.layout.align.align.oneliner]
en = "Aligns content horizontally and vertically."
zh = "水平和垂直对齐内容。"

[reference.layout.align.align.title]
en = "Align"
zh = "对齐"

[reference.layout.align.description]
en = "Documentation for the `align` function."
zh = "`align` 函数的文档。"

[reference.layout.align.oneliner]
en = "Aligns content horizontally and vertically."
zh = "水平和垂直对齐内容。"

[reference.layout.align.title]
en = "Align"
zh = "对齐"

[reference.layout.alignment.alignment.axis.details]
en = "The axis this alignment belongs to.\n- `{\"horizontal\"}` for `start`, `left`, `center`, `right`, and `end`\n- `{\"vertical\"}` for `top`, `horizon`, and `bottom`\n- `{none}` for 2-dimensional alignments\n\n"
zh = "此对齐所属的轴。\n- `{\"horizontal\"}` 对应 `start`、`left`、`center`、`right` 和 `end`\n- `{\"vertical\"}` 对应 `top`、`horizon` 和 `bottom`\n- `{none}` 对应二维对齐\n\n"

[reference.layout.alignment.alignment.axis.oneliner]
en = "The axis this alignment belongs to."
zh = "此对齐所属的轴。"

[reference.layout.alignment.alignment.axis.title]
en = "Axis"
zh = "「坐标轴」（[axis](#x-term-axis)）"

[reference.layout.alignment.alignment.details]
en = "{{typst-docs/reference.layout.alignment.alignment.details.toml}}"

[reference.layout.alignment.alignment.inv.details]
en = "The inverse alignment.\n\n"
zh = "反向对齐。\n\n"

[reference.layout.alignment.alignment.inv.oneliner]
en = "The inverse alignment."
zh = "反向对齐。"

[reference.layout.alignment.alignment.inv.title]
en = "Inverse"
zh = "反向"

[reference.layout.alignment.alignment.oneliner]
en = "Where to [align] something along an axis."
zh = "沿轴「对齐」（[align](#x-term-align)）某物的位置。"

[reference.layout.alignment.alignment.title]
en = "Alignment"
zh = "对齐"

[reference.layout.alignment.description]
en = "Documentation for the Alignment type."
zh = "Alignment「类型」（[type](#x-term-type)）的文档。"

[reference.layout.alignment.oneliner]
en = "Where to [align] something along an axis."
zh = "沿轴对齐某物的位置。"

[reference.layout.alignment.title]
en = "Alignment"
zh = "对齐"

[reference.layout.angle.angle.deg.details]
en = "Converts this angle to degrees."
zh = "将此角度转换为度数。"

[reference.layout.angle.angle.deg.oneliner]
en = "Converts this angle to degrees."
zh = "将此角度转换为度数。"

[reference.layout.angle.angle.deg.title]
en = "Degrees"
zh = "度数"

[reference.layout.angle.angle.details]
en = "An angle describing a rotation.\n\nTypst supports the following angular units:\n\n- Degrees: `{180deg}`\n- Radians: `{3.14rad}`\n\n# Example\n```example\n#rotate(10deg)[Hello there!]\n```"
zh = "描述旋转的角度。\n\nTypst 支持以下角度单位：\n\n- 度数：`{180deg}`\n- 弧度：`{3.14rad}`\n\n# 示例\n```example\n#rotate(10deg)[Hello there!]\n```"

[reference.layout.angle.angle.oneliner]
en = "An angle describing a rotation."
zh = "描述旋转的角度。"

[reference.layout.angle.angle.rad.details]
en = "Converts this angle to radians."
zh = "将此角度转换为弧度。"

[reference.layout.angle.angle.rad.oneliner]
en = "Converts this angle to radians."
zh = "将此角度转换为弧度。"

[reference.layout.angle.angle.rad.title]
en = "Radians"
zh = "弧度"

[reference.layout.angle.angle.title]
en = "Angle"
zh = "角度"

[reference.layout.angle.description]
en = "Documentation for the Angle type."
zh = "Angle「类型」（[type](#x-term-type)）的文档。"

[reference.layout.angle.oneliner]
en = "An angle describing a rotation."
zh = "描述旋转的角度。"

[reference.layout.angle.title]
en = "Angle"
zh = "角度"

[reference.layout.block.block.above.details]
en = "The spacing between this block and its predecessor."
zh = "此块与其前一个块之间的间距。"

[reference.layout.block.block.below.details]
en = "The spacing between this block and its successor."
zh = "此块与其后一个块之间的间距。"

[reference.layout.block.block.body.details]
en = "The contents of the block."
zh = "块的内容。"

[reference.layout.block.block.breakable.details]
en = "Whether the block can be broken and continue on the next page.\n\n"
zh = "块是否可以断开并在下一页继续。\n\n"

[reference.layout.block.block.clip.details]
en = "Whether to clip the content inside the block.\n\nClipping is useful when the block's content is larger than the block itself,\nas any content that exceeds the block's bounds will be hidden.\n\n"
zh = "是否剪裁块内的内容。\n\n剪裁在块的内容大于块本身时特别有用，因为任何超出块边界的内容都会被隐藏。\n\n"

[reference.layout.block.block.details]
en = "{{typst-docs/reference.layout.block.block.details.toml}}"

[reference.layout.block.block.fill.details]
en = "The block's background color. See the\n[rectangle's documentation]($rect.fill) for more details."
zh = "块的背景颜色。请参阅 [矩形]($rect.fill) 的文档以获取更多详细信息。"

[reference.layout.block.block.height.details]
en = "The block's height. When the height is larger than the remaining space\non a page and [`breakable`]($block.breakable) is `{true}`, the\nblock will continue on the next page with the remaining height.\n\n"
zh = "块的高度。当块的高度大于页面剩余空间且 [`breakable`]($block.breakable) 为 `{true}` 时，块将在下一页继续，剩余高度为块的高度。\n\n"

[reference.layout.block.block.inset.details]
en = "How much to pad the block's content. See the\n[box's documentation]($box.inset) for more details."
zh = "块内容的内边距。请参阅 [框]($box.inset) 的文档以获取更多详细信息。"

[reference.layout.block.block.oneliner]
en = "A block-level container."
zh = "一个块级容器。"

[reference.layout.block.block.outset.details]
en = "How much to expand the block's size without affecting the layout. See\nthe [box's documentation]($box.outset) for more details."
zh = "扩展块的大小而不影响布局。请参阅 [框]($box.outset) 的文档以获取更多详细信息。"

[reference.layout.block.block.radius.details]
en = "How much to round the block's corners. See the\n[rectangle's documentation]($rect.radius) for more details."
zh = "块的圆角大小。请参阅 [矩形]($rect.radius) 的文档以获取更多详细信息。"

[reference.layout.block.block.spacing.details]
en = "The spacing around the block. When `{auto}`, inherits the paragraph\n[`spacing`]($par.spacing).\n\nFor two adjacent blocks, the larger of the first block's `above` and the\nsecond block's `below` spacing wins. Moreover, block spacing takes\nprecedence over paragraph [`spacing`]($par.spacing).\n\nNote that this is only a shorthand to set `above` and `below` to the\nsame value. Since the values for `above` and `below` might differ, a\n[context] block only provides access to `{block.above}` and\n`{block.below}`, not to `{block.spacing}` directly.\n\nThis property can be used in combination with a show rule to adjust the\nspacing around arbitrary block-level elements.\n\n"
zh = "块的间距。当 `{auto}` 时，继承段落的 [`spacing`]($par.spacing)。\n\n对于两个相邻的块，第一个块的 `above` 和第二个块的 `below` 间距中较大的那个获胜。此外，块间距优先于段落的 [`spacing`]($par.spacing)。\n\n请注意，这只是一种简写，将 `above` 和 `below` 设置为相同的值。由于 `above` 和 `below` 的值可能不同，一个 [context] 块只能访问 `{block.above}` 和 `{block.below}`，而不能直接访问 `{block.spacing}`。\n\n此属性可以与 show 规则结合使用，以调整任意块级元素周围的间距。\n\n"

[reference.layout.block.block.sticky.details]
en = "Whether this block must stick to the following one, with no break in\nbetween.\n\nThis is, by default, set on heading blocks to prevent orphaned headings\nat the bottom of the page.\n\n"
zh = "是否必须粘附到下一个块，中间没有断开。\n\n默认情况下，标题块上设置此属性，以防止页面底部出现孤立的标题。\n\n"

[reference.layout.block.block.stroke.details]
en = "The block's border color. See the\n[rectangle's documentation]($rect.stroke) for more details."
zh = "块的边框颜色。请参阅 [矩形]($rect.stroke) 的文档以获取更多详细信息。"

[reference.layout.block.block.title]
en = "Block"
zh = "块"

[reference.layout.block.block.width.details]
en = "The block's width.\n\n"
zh = "块的宽度。\n\n"

[reference.layout.block.description]
en = "Documentation for the `block` function."
zh = "`block` 函数的文档。"

[reference.layout.block.oneliner]
en = "A block-level container."
zh = "一个块级容器。"

[reference.layout.block.title]
en = "Block"
zh = "块"

[reference.layout.box.box.baseline.details]
en = "An amount to shift the box's baseline by.\n\n"
zh = "一个偏移量，用于将「内联盒子」（[box](#x-term-box)）的基线移位。\n\n"

[reference.layout.box.box.body.details]
en = "The contents of the box."
zh = "「内联盒子」（[box](#x-term-box)）的内容。"

[reference.layout.box.box.clip.details]
en = "Whether to clip the content inside the box.\n\nClipping is useful when the box's content is larger than the box itself,\nas any content that exceeds the box's bounds will be hidden.\n\n"
zh = "是否剪裁「内联盒子」（[box](#x-term-box)）内的内容。\n\n剪裁在内联盒子的内容大于内联盒子本身时特别有用，因为任何超出内联盒子边界的内容都会被隐藏。\n\n"

[reference.layout.box.box.details]
en = "An inline-level container that sizes content.\n\nAll elements except inline math, text, and boxes are block-level and cannot\noccur inside of a [paragraph]($par). The box function can be used to\nintegrate such elements into a paragraph. Boxes take the size of their\ncontents by default but can also be sized explicitly.\n\n# Example\n```example\nRefer to the docs\n#box(\n  height: 9pt,\n  image(\"docs.svg\")\n)\nfor more information.\n```"
zh = "一个内联级容器，用于调整内容的大小。\n\n所有元素（除了内联数学、文本和内联盒子）都是块级元素，不能出现在 [段落]($par) 中。`box` 函数可以用于将这些元素集成到段落中。内联盒子默认采用其内容的大小，但也可以显式调整大小。\n\n# 示例\n```example\n请参阅文档\n#box(\n  height: 9pt,\n  image(\"docs.svg\")\n)\n以获取更多信息。\n```"

[reference.layout.box.box.fill.details]
en = "The box's background color. See the\n[rectangle's documentation]($rect.fill) for more details."
zh = "「内联盒子」（[box](#x-term-box)）的背景颜色。请参阅 [矩形]($rect.fill) 的文档以获取更多详细信息。"

[reference.layout.box.box.height.details]
en = "The height of the box."
zh = "「内联盒子」（[box](#x-term-box)）的高度。"

[reference.layout.box.box.inset.details]
en = "How much to pad the box's content.\n\n_Note:_ When the box contains text, its exact size depends on the\ncurrent [text edges]($text.top-edge).\n\n"
zh = "「内联盒子」（[box](#x-term-box)）内容的内边距。\n\n_注意：_ 当内联盒子包含文本时，其确切大小取决于当前 [文本边缘]($text.top-edge)。\n\n"

[reference.layout.box.box.oneliner]
en = "An inline-level container that sizes content."
zh = "一个内联级容器，用于调整内容的大小。"

[reference.layout.box.box.outset.details]
en = "How much to expand the box's size without affecting the layout.\n\nThis is useful to prevent padding from affecting line layout. For a\ngeneralized version of the example below, see the documentation for the\n[raw text's block parameter]($raw.block).\n\n"
zh = "扩展「内联盒子」（[box](#x-term-box)）的大小而不影响布局。\n\n这有助于防止内边距影响行布局。对于下面示例的通用版本，请参阅 [原始文本的块参数]($raw.block) 的文档。\n\n"

[reference.layout.box.box.radius.details]
en = "How much to round the box's corners. See the\n[rectangle's documentation]($rect.radius) for more details."
zh = "「内联盒子」（[box](#x-term-box)）的圆角大小。请参阅 [矩形]($rect.radius) 的文档以获取更多详细信息。"

[reference.layout.box.box.stroke.details]
en = "The box's border color. See the\n[rectangle's documentation]($rect.stroke) for more details."
zh = "「内联盒子」（[box](#x-term-box)）的边框颜色。请参阅 [矩形]($rect.stroke) 的文档以获取更多详细信息。"

[reference.layout.box.box.title]
en = "Box"
zh = "「内联盒子」（[box](#x-term-box)）"

[reference.layout.box.box.width.details]
en = "The width of the box.\n\nBoxes can have [fractional]($fraction) widths, as the example below\ndemonstrates.\n\n_Note:_ Currently, only boxes and only their widths might be fractionally\nsized within paragraphs. Support for fractionally sized images, shapes,\nand more might be added in the future.\n\n"
zh = "「内联盒子」（[box](#x-term-box)）的宽度。\n\n内联盒子可以有 [分数]($fraction) 宽度，如下面示例所示。\n\n_注意：_ 目前，只有内联盒子和它们的宽度可以在段落中按分数大小调整。支持按分数大小调整图像、形状等可能在将来添加。\n\n"

[reference.layout.box.description]
en = "Documentation for the `box` function."
zh = "`box` 函数的文档。"

[reference.layout.box.oneliner]
en = "An inline-level container that sizes content."
zh = "一个内联级容器，用于调整内容的大小。"

[reference.layout.box.title]
en = "Box"
zh = "「内联盒子」（[box](#x-term-box)）"

[reference.layout.colbreak.colbreak.details]
en = "Forces a column break.\n\nThe function will behave like a [page break]($pagebreak) when used in a\nsingle column layout or the last column on a page. Otherwise, content after\nthe column break will be placed in the next column.\n\n# Example\n```example\n#set page(columns: 2)\nPreliminary findings from our\nongoing research project have\nrevealed a hitherto unknown\nphenomenon of extraordinary\nsignificance.\n\n#colbreak()\nThrough rigorous experimentation\nand analysis, we have discovered\na hitherto uncharacterized process\nthat defies our current\nunderstanding of the fundamental\nlaws of nature.\n```"
zh = "强制换列。\n\n当在单列布局或页面最后一列中使用时，该函数的行为类似于 [页面换行]($pagebreak)。否则，换列后的内容将放置在下一列。\n\n# 示例\n```example\n#set page(columns: 2)\n我们的持续研究项目取得了初步发现，\n揭示了一个迄今未知的非凡现象。\n\n#colbreak()\n通过严格的实验和分析，我们发现了\n一个迄今未被认识的过程，\n它违背了我们当前对自然基本规律的理解。\n```"

[reference.layout.colbreak.colbreak.oneliner]
en = "Forces a column break."
zh = "强制换列。"

[reference.layout.colbreak.colbreak.title]
en = "Column Break"
zh = "列换行"

[reference.layout.colbreak.colbreak.weak.details]
en = "If `{true}`, the column break is skipped if the current column is\nalready empty."
zh = "如果 `{true}`，则如果当前列已为空，则跳过列换行。"

[reference.layout.colbreak.description]
en = "Documentation for the `colbreak` function."
zh = "`colbreak` 函数的文档。"

[reference.layout.colbreak.oneliner]
en = "Forces a column break."
zh = "强制换列。"

[reference.layout.colbreak.title]
en = "Column Break"
zh = "列换行"

[reference.layout.columns.columns.body.details]
en = "The content that should be layouted into the columns."
zh = "应布局到列中的内容。"

[reference.layout.columns.columns.count.details]
en = "The number of columns."
zh = "列数。"

[reference.layout.columns.columns.details]
en = "{{typst-docs/reference.layout.columns.columns.details.toml}}"

[reference.layout.columns.columns.gutter.details]
en = "The size of the gutter space between each column."
zh = "每列之间的间距大小。"

[reference.layout.columns.columns.oneliner]
en = "Separates a region into multiple equally sized columns."
zh = "将一个区域分成多个等大小列。"

[reference.layout.columns.columns.title]
en = "Columns"
zh = "「多列布局容器」（[columns](#x-term-columns)）"

[reference.layout.columns.description]
en = "Documentation for the `columns` function."
zh = "`columns` 函数的文档。"

[reference.layout.columns.oneliner]
en = "Separates a region into multiple equally sized columns."
zh = "将一个区域分成多个等大小列。"

[reference.layout.columns.title]
en = "Columns"
zh = "「多列布局容器」（[columns](#x-term-columns)）"

[reference.layout.description]
en = "Documentation for functions related to Layout in Typst."
zh = "Typst 中与布局相关的函数的文档。"

[reference.layout.direction.description]
en = "Documentation for the Direction type."
zh = "Direction 类型的文档。"

[reference.layout.direction.direction.axis.details]
en = "The axis this direction belongs to, either `{\"horizontal\"}` or\n`{\"vertical\"}`.\n\n"
zh = "此方向所属的「坐标轴」（[axis](#x-term-axis)），可以是 `{\"horizontal\"}` 或 `{\"vertical\"}`。\n\n"

[reference.layout.direction.direction.axis.oneliner]
en = "The axis this direction belongs to, either `{\"horizontal\"}` or"
zh = "此方向所属的「坐标轴」（[axis](#x-term-axis)），可以是 `{\"horizontal\"}` 或 `{\"vertical\"}`。"

[reference.layout.direction.direction.axis.title]
en = "Axis"
zh = "「坐标轴」（[axis](#x-term-axis)）"

[reference.layout.direction.direction.details]
en = "The four directions into which content can be laid out.\n\n Possible values are:\n- `{ltr}`: Left to right.\n- `{rtl}`: Right to left.\n- `{ttb}`: Top to bottom.\n- `{btt}`: Bottom to top.\n\nThese values are available globally and\nalso in the direction type's scope, so you can write either of the following\ntwo:\n```example\n#stack(dir: rtl)[A][B][C]\n#stack(dir: direction.rtl)[A][B][C]\n```"
zh = "四个方向，分别是：\n- `{ltr}`: 从左到右。\n- `{rtl}`: 从右到左。\n- `{ttb}`: 从上到下。\n- `{btt}`: 从下到上。\n\n这些值在全局范围内可用，也在 Direction 类型的作用域内可用，因此你可以写以下两种之一：\n```example\n#stack(dir: rtl)[A][B][C]\n#stack(dir: direction.rtl)[A][B][C]\n```"

[reference.layout.direction.direction.end.details]
en = "The end point of this direction, as an alignment.\n\n"
zh = "此方向的终点，作为对齐方式。\n\n"

[reference.layout.direction.direction.end.oneliner]
en = "The end point of this direction, as an alignment."
zh = "此方向的终点，作为对齐方式。"

[reference.layout.direction.direction.end.title]
en = "End"
zh = "终点"

[reference.layout.direction.direction.inv.details]
en = "The inverse direction.\n\n"
zh = "此方向的反方向。\n\n"

[reference.layout.direction.direction.inv.oneliner]
en = "The inverse direction."
zh = "此方向的反方向。"

[reference.layout.direction.direction.inv.title]
en = "Inverse"
zh = "反方向"

[reference.layout.direction.direction.oneliner]
en = "The four directions into which content can be laid out."
zh = "四个方向，分别是：\n- `{ltr}`: 从左到右。\n- `{rtl}`: 从右到左。\n- `{ttb}`: 从上到下。\n- `{btt}`: 从下到上。\n\n这些值在全局范围内可用，也在 Direction 类型的作用域内可用，因此你可以写以下两种之一：\n```example\n#stack(dir: rtl)[A][B][C]\n#stack(dir: direction.rtl)[A][B][C]\n```"

[reference.layout.direction.direction.start.details]
en = "The start point of this direction, as an alignment.\n\n"
zh = "此方向的起点，作为对齐方式。\n\n"

[reference.layout.direction.direction.start.oneliner]
en = "The start point of this direction, as an alignment."
zh = "此方向的起点，作为对齐方式。"

[reference.layout.direction.direction.start.title]
en = "Start"
zh = "起点"

[reference.layout.direction.direction.title]
en = "Direction"
zh = "方向"

[reference.layout.direction.oneliner]
en = "The four directions into which content can be laid out."
zh = "四个可以放置内容的方向。"

[reference.layout.direction.title]
en = "Direction"
zh = "方向"

[reference.layout.fraction.description]
en = "Documentation for the Fraction type."
zh = "Fraction 类型的文档。"

[reference.layout.fraction.fraction.details]
en = "Defines how the remaining space in a layout is distributed.\n\nEach fractionally sized element gets space based on the ratio of its\nfraction to the sum of all fractions.\n\nFor more details, also see the [h] and [v] functions and the\n[grid function]($grid).\n\n# Example\n```example\nLeft #h(1fr) Left-ish #h(2fr) Right\n```"
zh = "定义布局中剩余空间如何分配。\n\n每个按分数大小调整的元素根据其分数与所有分数之和的比率获得空间。\n\n更多细节，请参阅 [h] 和 [v] 函数以及 [网格函数]($grid)。\n\n# 示例\n```example\nLeft #h(1fr) Left-ish #h(2fr) Right\n```"

[reference.layout.fraction.fraction.oneliner]
en = "Defines how the remaining space in a layout is distributed."
zh = "定义布局中剩余空间如何分配。"

[reference.layout.fraction.fraction.title]
en = "Fraction"
zh = "分数"

[reference.layout.fraction.oneliner]
en = "Defines how the remaining space in a layout is distributed."
zh = "定义布局中剩余空间如何分配。"

[reference.layout.fraction.title]
en = "Fraction"
zh = "分数"

[reference.layout.grid.description]
en = "Documentation for the `grid` function."
zh = "`grid` 函数的文档。"

[reference.layout.grid.grid.align.details]
en = "How to align the cells' content.\n\nThis can either be a single alignment, an array of alignments\n(corresponding to each column) or a function that returns an alignment.\nThe function receives the cells' column and row indices, starting from\nzero. If set to `{auto}`, the outer alignment is used.\n\nYou can find an example for this argument at the\n[`table.align`]($table.align) parameter."
zh = "如何对齐单元格内容。\n\n这可以是单个对齐方式，也可以是对应每个列的对齐方式数组，或者返回对齐方式的函数。\n该函数接收单元格的列和行索引，从零开始。如果设置为 `{auto}`，则使用外部对齐方式。\n\n你可以在 [`table.align`]($table.align) 「参数」（[parameter](#x-term-parameter)）中找到此「参数」（[argument](#x-term-argument)）的示例。"

[reference.layout.grid.grid.cell.align.details]
en = "The cell's [alignment]($grid.align) override."
zh = "单元格的 [对齐方式]($grid.align) 覆盖。"

[reference.layout.grid.grid.cell.body.details]
en = "The cell's body."
zh = "单元格的内容。"

[reference.layout.grid.grid.cell.breakable.details]
en = "Whether rows spanned by this cell can be placed in different pages.\nWhen equal to `{auto}`, a cell spanning only fixed-size rows is\nunbreakable, while a cell spanning at least one `{auto}`-sized row is\nbreakable."
zh = "此单元格跨越的行是否可以放在不同的页面上。\n当等于 `{auto}` 时，跨越仅固定大小行的单元格是不可拆分的，而跨越至少一个 `{auto}` 大小行的单元格是可拆分的。"

[reference.layout.grid.grid.cell.colspan.details]
en = "The amount of columns spanned by this cell."
zh = "此单元格跨越的列数。"

[reference.layout.grid.grid.cell.details]
en = "A cell in the grid. You can use this function in the argument list of a grid\nto override grid style properties for an individual cell or manually\npositioning it within the grid. You can also use this function in show rules\nto apply certain styles to multiple cells at once.\n\nFor example, you can override the position and stroke for a single cell:\n\n"
zh = "网格中的一个单元格。你可以在网格的参数列表中使用此函数，为单个单元格覆盖网格样式属性，或者手动将其放置在网格中。你也可以在显示规则中使用此函数，一次性应用某些样式到多个单元格。\n\n例如，你可以为单个单元格覆盖位置和描边：\n\n"

[reference.layout.grid.grid.cell.fill.details]
en = "The cell's [fill]($grid.fill) override."
zh = "单元格的 [填充]($grid.fill) 覆盖。"

[reference.layout.grid.grid.cell.inset.details]
en = "The cell's [inset]($grid.inset) override."
zh = "单元格的 [内边距]($grid.inset) 覆盖。"

[reference.layout.grid.grid.cell.oneliner]
en = "A cell in the grid. You can use this function in the argument list of a grid"
zh = "网格中的一个单元格。你可以在网格的参数列表中使用此函数，为单个单元格覆盖网格样式属性，或者手动将其放置在网格中。你也可以在显示规则中使用此函数，一次性应用某些样式到多个单元格。\n\n例如，你可以为单个单元格覆盖位置和描边：\n\n"

[reference.layout.grid.grid.cell.rowspan.details]
en = "The amount of rows spanned by this cell."
zh = "此单元格跨越的行数。"

[reference.layout.grid.grid.cell.stroke.details]
en = "The cell's [stroke]($grid.stroke) override."
zh = "单元格的 [描边]($grid.stroke) 覆盖。"

[reference.layout.grid.grid.cell.title]
en = "Grid Cell"
zh = "网格单元格"

[reference.layout.grid.grid.cell.x.details]
en = "The cell's column (zero-indexed).\nThis field may be used in show rules to style a cell depending on its\ncolumn.\n\nYou may override this field to pick in which column the cell must\nbe placed. If no row (`y`) is chosen, the cell will be placed in the\nfirst row (starting at row 0) with that column available (or a new row\nif none). If both `x` and `y` are chosen, however, the cell will be\nplaced in that exact position. An error is raised if that position is\nnot available (thus, it is usually wise to specify cells with a custom\nposition before cells with automatic positions).\n\n"
zh = "单元格的列（零索引）。\n此字段可用于在显示规则中根据列样式单元格。\n\n你可以覆盖此字段，选择单元格应放置在哪一列。如果未选择行（`y`），则单元格将放置在所选列中第一行（从行 0 开始）。如果所选列中的所有行都已占用，则引发错误。\n\n"

[reference.layout.grid.grid.cell.y.details]
en = "The cell's row (zero-indexed).\nThis field may be used in show rules to style a cell depending on its\nrow.\n\nYou may override this field to pick in which row the cell must be\nplaced. If no column (`x`) is chosen, the cell will be placed in the\nfirst column (starting at column 0) available in the chosen row. If all\ncolumns in the chosen row are already occupied, an error is raised.\n\n"
zh = "单元格的行（零索引）。\n此字段可用于在显示规则中根据行样式单元格。\n\n你可以覆盖此字段，选择单元格应放置在哪一行。如果未选择列（`x`），则单元格将放置在所选行中第一列（从列 0 开始）。如果所选行中的所有列都已占用，则引发错误。\n\n"

[reference.layout.grid.grid.children.details]
en = "The contents of the grid cells, plus any extra grid lines specified\nwith the [`grid.hline`]($grid.hline) and [`grid.vline`]($grid.vline)\nelements.\n\nThe cells are populated in row-major order."
zh = "网格单元格的内容，以及通过 [`grid.hline`]($grid.hline) 和 [`grid.vline`]($grid.vline) 元素指定的任何额外网格线。\n\n单元格按行优先顺序填充。"

[reference.layout.grid.grid.column-gutter.details]
en = "The gaps between columns."
zh = "列之间的间距。"

[reference.layout.grid.grid.columns.details]
en = "The column sizes.\n\nEither specify a track size array or provide an integer to create a grid\nwith that many `{auto}`-sized columns. Note that opposed to rows and\ngutters, providing a single track size will only ever create a single\ncolumn."
zh = "列的大小。\n\n指定一个轨道大小数组，或者提供一个整数来创建一个具有该数量 `{auto}` 大小列的网格。请注意，与行和间距不同，提供单个轨道大小只会创建单个列。"

[reference.layout.grid.grid.details]
en = "{{typst-docs/reference.layout.grid.grid.details.toml}}"

[reference.layout.grid.grid.fill.details]
en = "How to fill the cells.\n\nThis can be a color or a function that returns a color. The function\nreceives the cells' column and row indices, starting from zero. This can\nbe used to implement striped grids.\n\n"
zh = "如何填充单元格。\n\n这可以是颜色或返回颜色的函数。该函数接收单元格的列和行索引，从零开始。这可用于实现条纹网格。\n\n"

[reference.layout.grid.grid.footer.children.details]
en = "The cells and lines within the footer."
zh = "网格页脚中的单元格和线条。"

[reference.layout.grid.grid.footer.details]
en = "A repeatable grid footer.\n\nJust like the [`grid.header`]($grid.header) element, the footer can repeat\nitself on every page of the table.\n\nNo other grid cells may be placed after the footer."
zh = "可重复的网格页脚。\n\n就像 [`grid.header`]($grid.header) 元素一样，页脚可以在表格的每一页重复。\n\n在页脚之后不能放置其他网格单元格。"

[reference.layout.grid.grid.footer.oneliner]
en = "A repeatable grid footer."
zh = "可重复的网格页脚。"

[reference.layout.grid.grid.footer.repeat.details]
en = "Whether this footer should be repeated across pages."
zh = "此页脚是否应在每页重复。"

[reference.layout.grid.grid.footer.title]
en = "Grid Footer"
zh = "网格页脚"

[reference.layout.grid.grid.gutter.details]
en = "The gaps between rows and columns.\n\nIf there are more gutters than defined sizes, the last gutter is\nrepeated.\n\nThis is a shorthand to set `column-gutter` and `row-gutter` to the same\nvalue."
zh = "行和列之间的间距。\n\n如果间距数量大于定义的大小，则最后一个间距重复。\n\n这是一个简写，将 `column-gutter` 和 `row-gutter` 设置为相同的值。"

[reference.layout.grid.grid.header.children.details]
en = "The cells and lines within the header."
zh = "网格页头中的单元格和线条。"

[reference.layout.grid.grid.header.details]
en = "A repeatable grid header.\n\nIf `repeat` is set to `true`, the header will be repeated across pages. For\nan example, refer to the [`table.header`]($table.header) element and the\n[`grid.stroke`]($grid.stroke) parameter."
zh = "可重复的网格页头。\n\n如果 `repeat` 设置为 `true`，则页头将在表格的每一页重复。例如，请参阅 [`table.header`]($table.header) 元素和 [`grid.stroke`]($grid.stroke) 参数。"

[reference.layout.grid.grid.header.oneliner]
en = "A repeatable grid header."
zh = "可重复的网格页头。"

[reference.layout.grid.grid.header.repeat.details]
en = "Whether this header should be repeated across pages."
zh = "此页头是否应在每页重复。"

[reference.layout.grid.grid.header.title]
en = "Grid Header"
zh = "网格页头"

[reference.layout.grid.grid.hline.details]
en = "A horizontal line in the grid.\n\nOverrides any per-cell stroke, including stroke specified through the grid's\n`stroke` field. Can cross spacing between cells created through the grid's\n`column-gutter` option.\n\nAn example for this function can be found at the\n[`table.hline`]($table.hline) element."
zh = "网格中的水平线。\n\n覆盖任何单元格描边，包括通过网格的 `stroke` 字段指定的描边。可以跨越通过网格的 `column-gutter` 选项创建的单元格间距。\n\n此函数的示例可以在 [`table.hline`]($table.hline) 元素中找到。"

[reference.layout.grid.grid.hline.end.details]
en = "The column before which the horizontal line ends (zero-indexed,\nexclusive).\nTherefore, the horizontal line will be drawn up to and across column\n`end - 1`.\n\nA value equal to `{none}` or to the amount of columns causes it to\nextend all the way towards the end of the grid."
zh = "水平线结束的列（零索引，不包括）。\n因此，水平线将绘制到并跨越列 `end - 1`。\n\n等于 `{none}` 或等于列数时，水平线将延伸到网格的末尾。"

[reference.layout.grid.grid.hline.oneliner]
en = "A horizontal line in the grid."
zh = "网格中的水平线。"

[reference.layout.grid.grid.hline.position.details]
en = "The position at which the line is placed, given its row (`y`) - either\n`{top}` to draw above it or `{bottom}` to draw below it.\n\nThis setting is only relevant when row gutter is enabled (and\nshouldn't be used otherwise - prefer just increasing the `y` field by\none instead), since then the position below a row becomes different\nfrom the position above the next row due to the spacing between both."
zh = "水平线的位置，给定其行（`y`） - 要么 `{top}` 在它上方绘制，要么 `{bottom}` 在它下方绘制。\n\n此设置仅在启用行间距时相关（否则不应使用 - 最好只是增加 `y` 字段），因为这样行下方的位置与上方下一个行的位置不同，因为两者之间有间距。"

[reference.layout.grid.grid.hline.start.details]
en = "The column at which the horizontal line starts (zero-indexed, inclusive)."
zh = "水平线开始的列（零索引，包括）。"

[reference.layout.grid.grid.hline.stroke.details]
en = "The line's stroke.\n\nSpecifying `{none}` removes any lines previously placed across this\nline's range, including hlines or per-cell stroke below it."
zh = "线条的描边。\n\n指定 `{none}` 会删除此线条范围内之前放置的任何线条，包括水平线或其下方的单元格描边。"

[reference.layout.grid.grid.hline.title]
en = "Grid Horizontal Line"
zh = "网格水平线"

[reference.layout.grid.grid.hline.y.details]
en = "The row above which the horizontal line is placed (zero-indexed).\nIf the `position` field is set to `{bottom}`, the line is placed below\nthe row with the given index instead (see that field's docs for\ndetails).\n\nSpecifying `{auto}` causes the line to be placed at the row below the\nlast automatically positioned cell (that is, cell without coordinate\noverrides) before the line among the grid's children. If there is no\nsuch cell before the line, it is placed at the top of the grid (row 0).\nNote that specifying for this option exactly the total amount of rows\nin the grid causes this horizontal line to override the bottom border\nof the grid, while a value of 0 overrides the top border."
zh = "水平线放置的行（零索引）。\n如果 `position` 字段设置为 `{bottom}`，则行下方放置线条（请参阅该字段的文档以了解详细信息）。\n\n指定 `{auto}` 会导致线条放置在自动定位的单元格（即没有坐标覆盖的单元格）下方，该单元格位于线条之前的网格子元素中。如果该单元格之前没有这样的单元格，则将其放置在网格的顶部（行 0）。请注意，指定此选项的确切行数会导致此水平线覆盖网格的底部边框，而值为 0 则覆盖顶部边框。"

[reference.layout.grid.grid.inset.details]
en = "How much to pad the cells' content.\n\nYou can find an example for this argument at the\n[`table.inset`]($table.inset) parameter."
zh = "单元格内容填充多少。\n\n你可以在 [`table.inset`]($table.inset) 「参数」（[parameter](#x-term-parameter)）中找到此「参数」（[argument](#x-term-argument)）的示例。"

[reference.layout.grid.grid.oneliner]
en = "Arranges content in a grid."
zh = "将内容排列在网格中。"

[reference.layout.grid.grid.row-gutter.details]
en = "The gaps between rows."
zh = "行之间的间距。"

[reference.layout.grid.grid.rows.details]
en = "The row sizes.\n\nIf there are more cells than fit the defined rows, the last row is\nrepeated until there are no more cells."
zh = "行的大小。\n\n如果单元格数量大于定义的行数，则最后一个行重复，直到没有更多单元格。"

[reference.layout.grid.grid.stroke.details]
en = "How to [stroke]($stroke) the cells.\n\nGrids have no strokes by default, which can be changed by setting this\noption to the desired stroke.\n\nIf it is necessary to place lines which can cross spacing between cells\nproduced by the `gutter` option, or to override the stroke between\nmultiple specific cells, consider specifying one or more of\n[`grid.hline`]($grid.hline) and [`grid.vline`]($grid.vline) alongside\nyour grid cells.\n\n"
zh = "如何 [描边]($stroke) 单元格。\n\n默认情况下，网格没有描边，可以通过设置此选项为所需的描边来改变。\n\n如果需要放置可以跨越由 `gutter` 选项产生的单元格间距的线条，或者覆盖多个特定单元格之间的描边，请考虑在网格单元格旁边指定一个或多个 [`grid.hline`]($grid.hline) 和 [`grid.vline`]($grid.vline)。\n\n"

[reference.layout.grid.grid.title]
en = "Grid"
zh = "网格"

[reference.layout.grid.grid.vline.details]
en = "A vertical line in the grid.\n\nOverrides any per-cell stroke, including stroke specified through the\ngrid's `stroke` field. Can cross spacing between cells created through\nthe grid's `row-gutter` option."
zh = "网格中的垂直线。\n\n覆盖任何单元格描边，包括通过网格的 `stroke` 字段指定的描边。可以跨越通过网格的 `row-gutter` 选项创建的单元格间距。"

[reference.layout.grid.grid.vline.end.details]
en = "The row on top of which the vertical line ends (zero-indexed,\nexclusive).\nTherefore, the vertical line will be drawn up to and across row\n`end - 1`.\n\nA value equal to `{none}` or to the amount of rows causes it to extend\nall the way towards the bottom of the grid."
zh = "垂直线结束的行（零索引，不包括）。\n因此，垂直线将绘制到并跨越行 `end - 1`。\n\n等于 `{none}` 或等于行数时，垂直线将延伸到网格的底部。"

[reference.layout.grid.grid.vline.oneliner]
en = "A vertical line in the grid."
zh = "网格中的垂直线。"

[reference.layout.grid.grid.vline.position.details]
en = "The position at which the line is placed, given its column (`x`) -\neither `{start}` to draw before it or `{end}` to draw after it.\n\nThe values `{left}` and `{right}` are also accepted, but discouraged as\nthey cause your grid to be inconsistent between left-to-right and\nright-to-left documents.\n\nThis setting is only relevant when column gutter is enabled (and\nshouldn't be used otherwise - prefer just increasing the `x` field by\none instead), since then the position after a column becomes different\nfrom the position before the next column due to the spacing between\nboth."
zh = "线条的位置，给定其列（`x`） - 要么 `{start}` 在它之前绘制，要么 `{end}` 在它之后绘制。\n\n值 `{left}` 和 `{right}` 也接受，但被弃用，因为它们会导致网格在从左到右和从右到左的文档中不一致。\n\n此设置仅在启用列间距时相关（否则不应使用 - 最好只是增加 `x` 字段），因为这样列后的位置与列前的位置不同，因为两者之间有间距。"

[reference.layout.grid.grid.vline.start.details]
en = "The row at which the vertical line starts (zero-indexed, inclusive)."
zh = "垂直线开始的行（零索引，包括）。"

[reference.layout.grid.grid.vline.stroke.details]
en = "The line's stroke.\n\nSpecifying `{none}` removes any lines previously placed across this\nline's range, including vlines or per-cell stroke below it."
zh = "线条的描边。\n\n指定 `{none}` 会删除此线条范围内之前放置的任何线条，包括垂直线或其下方的单元格描边。"

[reference.layout.grid.grid.vline.title]
en = "Grid Vertical Line"
zh = "网格垂直线"

[reference.layout.grid.grid.vline.x.details]
en = "The column before which the horizontal line is placed (zero-indexed).\nIf the `position` field is set to `{end}`, the line is placed after the\ncolumn with the given index instead (see that field's docs for\ndetails).\n\nSpecifying `{auto}` causes the line to be placed at the column after\nthe last automatically positioned cell (that is, cell without\ncoordinate overrides) before the line among the grid's children. If\nthere is no such cell before the line, it is placed before the grid's\nfirst column (column 0).\nNote that specifying for this option exactly the total amount of\ncolumns in the grid causes this vertical line to override the end\nborder of the grid (right in LTR, left in RTL), while a value of 0\noverrides the start border (left in LTR, right in RTL)."
zh = "垂直线放置的列（零索引）。\n如果 `position` 字段设置为 `{end}`，则行下方放置线条（请参阅该字段的文档以了解详细信息）。\n\n指定 `{auto}` 会导致线条放置在自动定位的单元格（即没有坐标覆盖的单元格）下方，该单元格位于线条之前的网格子元素中。如果该单元格之前没有这样的单元格，则将其放置在网格的顶部（行 0）。请注意，指定此选项的确切行数会导致此水平线覆盖网格的底部边框，而值为 0 则覆盖顶部边框。"

[reference.layout.grid.oneliner]
en = "Arranges content in a grid."
zh = "将内容排列在网格中。"

[reference.layout.grid.title]
en = "Grid"
zh = "网格"

[reference.layout.h.description]
en = "Documentation for the `h` function."
zh = "`h` 函数的文档。"

[reference.layout.h.h.amount.details]
en = "How much spacing to insert."
zh = "插入多少间距。"

[reference.layout.h.h.details]
en = "{{typst-docs/reference.layout.h.h.details.toml}}"

[reference.layout.h.h.oneliner]
en = "Inserts horizontal spacing into a paragraph."
zh = "插入水平间距到段落中。"

[reference.layout.h.h.title]
en = "Spacing (H)"
zh = "间距 (H)"

[reference.layout.h.h.weak.details]
en = "If `{true}`, the spacing collapses at the start or end of a paragraph.\nMoreover, from multiple adjacent weak spacings all but the largest one\ncollapse.\n\nWeak spacing in markup also causes all adjacent markup spaces to be\nremoved, regardless of the amount of spacing inserted. To force a space\nnext to weak spacing, you can explicitly write `[#\" \"]` (for a normal\nspace) or `[~]` (for a non-breaking space). The latter can be useful to\ncreate a construct that always attaches to the preceding word with one\nnon-breaking space, independently of whether a markup space existed in\nfront or not.\n\n"
zh = "如果 `{true}`，间距在段落的开始或结束时折叠。\n此外，从多个相邻的弱间距中，所有但最大的一个折叠。\n\n标记中的弱间距也会导致所有相邻的标记空间被删除，无论插入多少间距。要强制在弱间距旁边插入一个空间，可以显式写入 `[#\" \"]`（对于普通空间）或 `[~]`（对于非断行空间）。后者可用于创建一个始终附加到前一个单词的构造，无论前面是否存在标记空间，都使用一个非断行空间。\n\n"

[reference.layout.h.oneliner]
en = "Inserts horizontal spacing into a paragraph."
zh = "插入水平间距到段落中。"

[reference.layout.h.title]
en = "Spacing (H)"
zh = "间距 (H)"

[reference.layout.hide.description]
en = "Documentation for the `hide` function."
zh = "`hide` 函数的文档。"

[reference.layout.hide.hide.body.details]
en = "The content to hide."
zh = "要隐藏的内容。"

[reference.layout.hide.hide.details]
en = "Hides content without affecting layout.\n\nThe `hide` function allows you to hide content while the layout still 'sees'\nit. This is useful to create whitespace that is exactly as large as some\ncontent. It may also be useful to redact content because its arguments are\nnot included in the output.\n\n# Example\n```example\nHello Jane \\\n#hide[Hello] Joe\n```"
zh = "隐藏内容而不影响布局。\n\n`hide` 函数允许你在布局仍然 '看到' 内容时隐藏内容。这对于创建与某些内容大小完全相同的空白非常有用。它也可能有用，因为它的参数不包含在输出中。\n\n# 示例\n```example\nHello Jane \\\n#hide[Hello] Joe\n```"

[reference.layout.hide.hide.oneliner]
en = "Hides content without affecting layout."
zh = "隐藏内容而不影响布局。"

[reference.layout.hide.hide.title]
en = "Hide"
zh = "隐藏"

[reference.layout.hide.oneliner]
en = "Hides content without affecting layout."
zh = "隐藏内容而不影响布局。"

[reference.layout.hide.title]
en = "Hide"
zh = "隐藏"

[reference.layout.layout.description]
en = "Documentation for the `layout` function."
zh = "`layout` 函数的文档。"

[reference.layout.layout.details]
en = "Arranging elements on the page in different ways.\n\nBy combining layout functions, you can create complex and automatic layouts.\n"
zh = "以不同方式排列页面上的元素。\n\n通过组合布局函数，可以创建复杂和自动的布局。\n"

[reference.layout.layout.layout.details]
en = "{{typst-docs/reference.layout.layout.layout.details.toml}}"

[reference.layout.layout.layout.func.details]
en = "A function to call with the outer container's size. Its return value is\ndisplayed in the document.\n\nThe container's size is given as a [dictionary] with the keys `width`\nand `height`.\n\nThis function is called once for each time the content returned by\n`layout` appears in the document. This makes it possible to generate\ncontent that depends on the dimensions of its container."
zh = "一个函数，用于调用外部容器的尺寸。其返回值显示在文档中。\n\n外部容器的尺寸以「字典」（[dictionary](#x-term-dictionary)）形式给出，键为 `width` 和 `height`。\n\n每次 `layout` 返回的内容出现在文档中时，都会调用此函数。这使得可以生成依赖于其容器尺寸的内容。"

[reference.layout.layout.layout.oneliner]
en = "Provides access to the current outer container's (or page's, if none)"
zh = "提供对当前外部容器（或页面，如果没有外部容器）的访问。"

[reference.layout.layout.layout.title]
en = "Layout"
zh = "布局"

[reference.layout.layout.oneliner]
en = "Provides access to the current outer container's (or page's, if none)"
zh = "提供对当前外部容器（或页面，如果没有外部容器）的访问。"

[reference.layout.layout.title]
en = "Layout"
zh = "布局"

[reference.layout.length.description]
en = "Documentation for the Length type."
zh = "Length 类型的文档。"

[reference.layout.length.length.cm.details]
en = "Converts this length to centimeters.\n\nFails with an error if this length has non-zero `em` units. See the\n[`pt`]($length.pt) method for more details."
zh = "将此长度转换为厘米。\n\n如果此长度有非零 `em` 单位，则失败并显示错误。请参阅 [`pt`]($length.pt) 方法以获取更多详细信息。"

[reference.layout.length.length.cm.oneliner]
en = "Converts this length to centimeters."
zh = "将此长度转换为厘米。"

[reference.layout.length.length.cm.title]
en = "Centimeters"
zh = "厘米"

[reference.layout.length.length.details]
en = "{{typst-docs/reference.layout.length.length.details.toml}}"

[reference.layout.length.length.inches.details]
en = "Converts this length to inches.\n\nFails with an error if this length has non-zero `em` units. See the\n[`pt`]($length.pt) method for more details."
zh = "将此长度转换为英寸。\n\n如果此长度有非零 `em` 单位，则失败并显示错误。请参阅 [`pt`]($length.pt) 方法以获取更多详细信息。"

[reference.layout.length.length.inches.oneliner]
en = "Converts this length to inches."
zh = "将此长度转换为英寸。"

[reference.layout.length.length.inches.title]
en = "Inches"
zh = "英寸"

[reference.layout.length.length.mm.details]
en = "Converts this length to millimeters.\n\nFails with an error if this length has non-zero `em` units. See the\n[`pt`]($length.pt) method for more details."
zh = "将此长度转换为毫米。\n\n如果此长度有非零 `em` 单位，则失败并显示错误。请参阅 [`pt`]($length.pt) 方法以获取更多详细信息。"

[reference.layout.length.length.mm.oneliner]
en = "Converts this length to millimeters."
zh = "将此长度转换为毫米。"

[reference.layout.length.length.mm.title]
en = "Millimeters"
zh = "毫米"

[reference.layout.length.length.oneliner]
en = "A size or distance, possibly expressed with contextual units."
zh = "一个大小或距离，可能带有上下文单位。"

[reference.layout.length.length.pt.details]
en = "Converts this length to points.\n\nFails with an error if this length has non-zero `em` units (such as\n`5em + 2pt` instead of just `2pt`). Use the `abs` field (such as in\n`(5em + 2pt).abs.pt()`) to ignore the `em` component of the length (thus\nconverting only its absolute component)."
zh = "将此长度转换为点。\n\n如果此长度有非零 `em` 单位（例如 `5em + 2pt` 而不是 `2pt`），则失败并显示错误。使用 `abs` 字段（例如在 `(5em + 2pt).abs.pt()` 中）来忽略长度中的 `em` 成分（因此只转换其绝对成分）。"

[reference.layout.length.length.pt.oneliner]
en = "Converts this length to points."
zh = "将此长度转换为点。"

[reference.layout.length.length.pt.title]
en = "Points"
zh = "点"

[reference.layout.length.length.title]
en = "Length"
zh = "长度"

[reference.layout.length.length.to-absolute.details]
en = "Resolve this length to an absolute length.\n\n"
zh = "将此长度解析为绝对长度。\n\n"

[reference.layout.length.length.to-absolute.oneliner]
en = "Resolve this length to an absolute length."
zh = "将此长度解析为绝对长度。"

[reference.layout.length.length.to-absolute.title]
en = "To Absolute"
zh = "到绝对"

[reference.layout.length.oneliner]
en = "A size or distance, possibly expressed with contextual units."
zh = "一个大小或距离，可能带有上下文单位。"

[reference.layout.length.title]
en = "Length"
zh = "长度"

[reference.layout.measure.description]
en = "Documentation for the `measure` function."
zh = "`measure` 函数的文档。"

[reference.layout.measure.measure.content.details]
en = "The content whose size to measure."
zh = "要测量的内容的大小。"

[reference.layout.measure.measure.details]
en = "{{typst-docs/reference.layout.measure.measure.details.toml}}"

[reference.layout.measure.measure.height.details]
en = "The height available to layout the content.\n\nSetting this to `{auto}` indicates infinite available height."
zh = "可用于布局内容的高度。\n\n设置为 `{auto}` 表示无限可用高度。"

[reference.layout.measure.measure.oneliner]
en = "Measures the layouted size of content."
zh = "测量布局后的内容大小。"

[reference.layout.measure.measure.title]
en = "Measure"
zh = "测量"

[reference.layout.measure.measure.width.details]
en = "The width available to layout the content.\n\nSetting this to `{auto}` indicates infinite available width.\n\nNote that using the `width` and `height` parameters of this function is\ndifferent from measuring a sized [`block`] containing the content. In\nthe following example, the former will get the dimensions of the inner\ncontent instead of the dimensions of the block.\n\n"
zh = "可用于布局内容的宽度。\n\n设置为 `{auto}` 表示无限可用宽度。\n\n请注意，使用此函数的 `width` 和 `height` 参数与测量包含内容的 [`block`] 不同。在以下示例中，前者将获取内部内容的大小，而不是块的大小。\n\n"

[reference.layout.measure.oneliner]
en = "Measures the layouted size of content."
zh = "测量布局后的内容大小。"

[reference.layout.measure.title]
en = "Measure"
zh = "测量"

[reference.layout.move.description]
en = "Documentation for the `move` function."
zh = "`move` 函数的文档。"

[reference.layout.move.move.body.details]
en = "The content to move."
zh = "要移动的内容。"

[reference.layout.move.move.details]
en = "Moves content without affecting layout.\n\nThe `move` function allows you to move content while the layout still 'sees'\nit at the original positions. Containers will still be sized as if the\ncontent was not moved.\n\n# Example\n```example\n#rect(inset: 0pt, move(\n  dx: 6pt, dy: 6pt,\n  rect(\n    inset: 8pt,\n    fill: white,\n    stroke: black,\n    [Abra cadabra]\n  )\n))\n```"
zh = "移动内容而不影响布局。\n\n`move` 函数允许你在布局仍然 '看到' 内容时移动内容。容器仍会按内容未移动时的大小进行调整。\n\n# 示例\n```example\n#rect(inset: 0pt, move(\n  dx: 6pt, dy: 6pt,\n  rect(\n    inset: 8pt,\n    fill: white,\n    stroke: black,\n    [Abra cadabra]\n  )\n))\n```"

[reference.layout.move.move.dx.details]
en = "The horizontal displacement of the content."
zh = "内容水平偏移量。"

[reference.layout.move.move.dy.details]
en = "The vertical displacement of the content."
zh = "内容垂直偏移量。"

[reference.layout.move.move.oneliner]
en = "Moves content without affecting layout."
zh = "移动内容而不影响布局。"

[reference.layout.move.move.title]
en = "Move"
zh = "移动"

[reference.layout.move.oneliner]
en = "Moves content without affecting layout."
zh = "移动内容而不影响布局。"

[reference.layout.move.title]
en = "Move"
zh = "移动"

[reference.layout.pad.description]
en = "Documentation for the `pad` function."
zh = "`pad` 函数的文档。"

[reference.layout.pad.oneliner]
en = "Adds spacing around content."
zh = "在内容周围添加间距。"

[reference.layout.pad.pad.body.details]
en = "The content to pad at the sides."
zh = "要在侧面添加间距的内容。"

[reference.layout.pad.pad.bottom.details]
en = "The padding at the bottom side."
zh = "底部边距。"

[reference.layout.pad.pad.details]
en = "Adds spacing around content.\n\nThe spacing can be specified for each side individually, or for all sides at\nonce by specifying a positional argument.\n\n# Example\n```example\n#set align(center)\n\n#pad(x: 16pt, image(\"typing.jpg\"))\n_Typing speeds can be\n measured in words per minute._\n```"
zh = "在内容周围添加间距。\n\n间距可以单独为每边指定，也可以通过指定一个「位置参数」（[positional argument](#x-term-positional)）为所有边指定。\n\n# 示例\n```example\n#set align(center)\n\n#pad(x: 16pt, image(\"typing.jpg\"))\n_Typing speeds can be\n measured in words per minute._\n```"

[reference.layout.pad.pad.left.details]
en = "The padding at the left side."
zh = "左侧边距。"

[reference.layout.pad.pad.oneliner]
en = "Adds spacing around content."
zh = "在内容周围添加间距。"

[reference.layout.pad.pad.rest.details]
en = "A shorthand to set all four sides to the same value."
zh = "设置所有四边的值的简写。"

[reference.layout.pad.pad.right.details]
en = "The padding at the right side."
zh = "右侧边距。"

[reference.layout.pad.pad.title]
en = "Padding"
zh = "内边距"

[reference.layout.pad.pad.top.details]
en = "The padding at the top side."
zh = "顶部内边距。"

[reference.layout.pad.pad.x.details]
en = "A shorthand to set `left` and `right` to the same value."
zh = "设置 `left` 和 `right` 的值的简写。"

[reference.layout.pad.pad.y.details]
en = "A shorthand to set `top` and `bottom` to the same value."
zh = "设置 `top` 和 `bottom` 的值的简写。"

[reference.layout.pad.title]
en = "Pad"
zh = "内边距"

[reference.layout.page.description]
en = "Documentation for the `page` function."
zh = "`page` 函数的文档。"

[reference.layout.page.oneliner]
en = "Layouts its child onto one or multiple pages."
zh = "将其子元素布局到一张或多张页面上。"

[reference.layout.page.page.background.details]
en = "Content in the page's background.\n\nThis content will be placed behind the page's body. It can be\nused to place a background image or a watermark.\n\n"
zh = "页面背景中的内容。\n\n这些内容将放置在页面主体的后面。它可以用于放置背景图像或水印。\n\n"

[reference.layout.page.page.binding.details]
en = "On which side the pages will be bound.\n\n- `{auto}`: Equivalent to `left` if the [text direction]($text.dir)\n  is left-to-right and `right` if it is right-to-left.\n- `left`: Bound on the left side.\n- `right`: Bound on the right side.\n\nThis affects the meaning of the `inside` and `outside` options for\nmargins."
zh = "页面将「绑定」（[binding](#x-term-binding)）在哪一侧。\n\n- `{auto}`: 如果 [文本方向]($text.dir) 是左到右，则等同于 `left`；如果文本方向是右到左，则等同于 `right`。\n- `left`: 绑定在左侧。\n- `right`: 绑定在右侧。\n\n这会影响边距的 `inside` 和 `outside` 选项的含义。"

[reference.layout.page.page.body.details]
en = "The contents of the page(s).\n\nMultiple pages will be created if the content does not fit on a single\npage. A new page with the page properties prior to the function invocation\nwill be created after the body has been typeset."
zh = "页面中的内容。\n\n如果内容无法在一页上显示，则会创建多页。在函数调用之前设置的页面属性将在主体排版后创建新页面。"

[reference.layout.page.page.columns.details]
en = "How many columns the page has.\n\nIf you need to insert columns into a page or other container, you can\nalso use the [`columns` function]($columns).\n\n"
zh = "页面有多少列。\n\n如果需要将列插入到页面或其他容器中，也可以使用 [`columns` 函数]($columns)。\n\n"

[reference.layout.page.page.details]
en = "{{typst-docs/reference.layout.page.page.details.toml}}"

[reference.layout.page.page.fill.details]
en = "The page's background fill.\n\nSetting this to something non-transparent instructs the printer to color\nthe complete page. If you are considering larger production runs, it may\nbe more environmentally friendly and cost-effective to source pre-dyed\npages and not set this property.\n\nWhen set to `{none}`, the background becomes transparent. Note that PDF\npages will still appear with a (usually white) background in viewers,\nbut they are actually transparent. (If you print them, no color is used\nfor the background.)\n\nThe default of `{auto}` results in `{none}` for PDF output, and\n`{white}` for PNG and SVG.\n\n"
zh = "页面背景填充。\n\n设置为非透明值会指示打印机为整个页面着色。如果您考虑更大的生产量，可能更环保和经济的是使用预染色的页面，而不是设置此属性。\n\n当设置为 `{none}` 时，背景变为透明。请注意，PDF 页面在查看器中仍会显示（通常为白色）背景，但实际上是透明的。（如果您打印它们，背景不会使用任何颜色。）\n\n默认值 `{auto}` 在 PDF 输出中结果为 `{none}`，在 PNG 和 SVG 中为 `{white}`。\n\n"

[reference.layout.page.page.flipped.details]
en = "Whether the page is flipped into landscape orientation.\n\n"
zh = "页面是否翻转为横向方向。\n\n"

[reference.layout.page.page.footer-descent.details]
en = "The amount the footer is lowered into the bottom margin."
zh = "页脚下降到下边距的量。"

[reference.layout.page.page.footer.details]
en = "The page's footer. Fills the bottom margin of each page.\n\n- Content: Shows the content as the footer.\n- `{auto}`: Shows the page number if a `numbering` is set and\n  `number-align` is `bottom`.\n- `{none}`: Suppresses the footer.\n\nFor just a page number, the `numbering` property typically suffices. If\nyou want to create a custom footer but still display the page number,\nyou can directly access the [page counter]($counter).\n\n"
zh = "页面页脚。填充每页的底部边距。\n\n- Content: 显示内容作为页脚。\n- `{auto}`: 如果设置了 `numbering` 并且 `number-align` 为 `bottom`，则显示页码。\n- `{none}`: 不显示页脚。\n\n对于只显示页码的情况，通常使用 `numbering` 属性就足够了。如果您想创建自定义页脚但仍显示页码，可以直接访问 [页码计数器]($counter)。\n\n"

[reference.layout.page.page.foreground.details]
en = "Content in the page's foreground.\n\nThis content will overlay the page's body.\n\n"
zh = "页面前景中的内容。\n\n这些内容将覆盖页面主体。\n\n"

[reference.layout.page.page.header-ascent.details]
en = "The amount the header is raised into the top margin."
zh = "页眉上升到上边距的量。"

[reference.layout.page.page.header.details]
en = "The page's header. Fills the top margin of each page.\n\n- Content: Shows the content as the header.\n- `{auto}`: Shows the page number if a `numbering` is set and\n  `number-align` is `top`.\n- `{none}`: Suppresses the header.\n\n"
zh = "页面页眉。填充每页的上边距。\n\n- Content: 显示内容作为页眉。\n- `{auto}`: 如果设置了 `numbering` 并且 `number-align` 为 `top`，则显示页码。\n- `{none}`: 不显示页眉。\n\n"

[reference.layout.page.page.height.details]
en = "The height of the page.\n\nIf this is set to `{auto}`, page breaks can only be triggered manually\nby inserting a [page break]($pagebreak). Most examples throughout this\ndocumentation use `{auto}` for the height of the page to dynamically\ngrow and shrink to fit their content."
zh = "页面高度。\n\n如果设置为 `{auto}`，则只能通过插入 [分页符]($pagebreak) 手动触发分页。本文档中的大多数示例都使用 `{auto}` 作为页面高度，以动态增长和收缩以适应其内容。"

[reference.layout.page.page.margin.details]
en = "The page's margins.\n\n- `{auto}`: The margins are set automatically to 2.5/21 times the smaller\n  dimension of the page. This results in 2.5cm margins for an A4 page.\n- A single length: The same margin on all sides.\n- A dictionary: With a dictionary, the margins can be set individually.\n  The dictionary can contain the following keys in order of precedence:\n  - `top`: The top margin.\n  - `right`: The right margin.\n  - `bottom`: The bottom margin.\n  - `left`: The left margin.\n  - `inside`: The margin at the inner side of the page (where the\n    [binding]($page.binding) is).\n  - `outside`: The margin at the outer side of the page (opposite to the\n    [binding]($page.binding)).\n  - `x`: The horizontal margins.\n  - `y`: The vertical margins.\n  - `rest`: The margins on all sides except those for which the\n    dictionary explicitly sets a size.\n\nThe values for `left` and `right` are mutually exclusive with\nthe values for `inside` and `outside`.\n\n"
zh = "页面边距。\n\n- `{auto}`: 边距自动设置为页面较小尺寸的 2.5/21 倍。这将产生 A4 页面的 2.5cm 边距。\n- 单个长度: 所有边都使用相同的边距。\n- 「字典」（[dictionary](#x-term-dictionary)）: 使用字典可以单独设置边距。字典可以包含以下键，按优先级顺序排列：\n  - `top`: 上边距。\n  - `right`: 右边距。\n  - `bottom`: 下边距。\n  - `left`: 左边距。\n  - `inside`: 页面内侧的边距（「绑定」（[binding](#x-term-binding)）所在的一侧）。\n  - `outside`: 页面外侧的边距（与 [绑定]($page.binding) 相反的一侧）。\n  - `x`: 水平边距。\n  - `y`: 垂直边距。\n  - `rest`: 所有边距，除了字典显式设置大小的边。\n\n`left` 和 `right` 的值与 `inside` 和 `outside` 的值是互斥的。\n\n"

[reference.layout.page.page.number-align.details]
en = "The alignment of the page numbering.\n\nIf the vertical component is `top`, the numbering is placed into the\nheader and if it is `bottom`, it is placed in the footer. Horizon\nalignment is forbidden. If an explicit matching `header` or `footer` is\ngiven, the numbering is ignored.\n\n"
zh = "页码对齐方式。\n\n如果垂直组件为 `top`，则页码放置在页眉中；如果为 `bottom`，则放置在页脚中。水平对齐被禁止。如果给定明确的 `header` 或 `footer`，则忽略页码。\n\n"

[reference.layout.page.page.numbering.details]
en = "How to [number]($numbering) the pages.\n\nIf an explicit `footer` (or `header` for top-aligned numbering) is\ngiven, the numbering is ignored.\n\n"
zh = "如何 [编号]($numbering) 页面。\n\n如果给定明确的 `footer`（或顶部对齐的 `header`），则忽略页码。\n\n"

[reference.layout.page.page.oneliner]
en = "Layouts its child onto one or multiple pages."
zh = "将其子元素布局到一张或多张页面上。"

[reference.layout.page.page.paper.details]
en = "A standard paper size to set width and height.\n\nThis is just a shorthand for setting `width` and `height` and, as such,\ncannot be retrieved in a context expression."
zh = "设置纸张尺寸的标准纸张大小。\n\n这只是设置 `width` 和 `height` 的简写，因此无法在上下文表达式中检索。"

[reference.layout.page.page.supplement.details]
en = "A supplement for the pages.\n\nFor page references, this is added before the page number.\n\n"
zh = "页面补充。\n\n对于页面引用，这会在页码之前添加。\n\n"

[reference.layout.page.page.title]
en = "Page"
zh = "页面"

[reference.layout.page.page.width.details]
en = "The width of the page.\n\n"
zh = "页面宽度。\n\n"

[reference.layout.page.title]
en = "Page"
zh = "页面"

[reference.layout.pagebreak.description]
en = "Documentation for the `pagebreak` function."
zh = "`pagebreak` 函数的文档。"

[reference.layout.pagebreak.oneliner]
en = "A manual page break."
zh = "手动分页。"

[reference.layout.pagebreak.pagebreak.details]
en = "A manual page break.\n\nMust not be used inside any containers.\n\n# Example\n```example\nThe next page contains\nmore details on compound theory.\n#pagebreak()\n\n== Compound Theory\nIn 1984, the first ...\n```"
zh = "手动分页。\n\n不能在任何容器中使用。\n\n# 示例\n```example\nThe next page contains\nmore details on compound theory.\n#pagebreak()\n\n== Compound Theory\nIn 1984, the first ...\n```"

[reference.layout.pagebreak.pagebreak.oneliner]
en = "A manual page break."
zh = "手动分页。"

[reference.layout.pagebreak.pagebreak.title]
en = "Page Break"
zh = "分页符"

[reference.layout.pagebreak.pagebreak.to.details]
en = "If given, ensures that the next page will be an even/odd page, with an\nempty page in between if necessary.\n\n"
zh = "如果给定，确保下一页是偶数/奇数页，如果需要，在中间插入一个空页。\n\n"

[reference.layout.pagebreak.pagebreak.weak.details]
en = "If `{true}`, the page break is skipped if the current page is already\nempty."
zh = "如果 `{true}`，如果当前页面已经为空，则跳过分页符。"

[reference.layout.pagebreak.title]
en = "Page Break"
zh = "分页符"

[reference.layout.place.description]
en = "Documentation for the `place` function."
zh = "`place` 函数的文档。"

[reference.layout.place.oneliner]
en = "Places content relatively to its parent container."
zh = "将内容相对其父容器放置。"

[reference.layout.place.place.alignment.details]
en = "Relative to which position in the parent container to place the content.\n\n- If `float` is `{false}`, then this can be any alignment other than `{auto}`.\n- If `float` is `{true}`, then this must be `{auto}`, `{top}`, or `{bottom}`.\n\nWhen `float` is `{false}` and no vertical alignment is specified, the\ncontent is placed at the current position on the vertical axis."
zh = "相对于父容器中的哪个位置放置内容。\n\n- 如果 `float` 为 `{false}`，则可以是除了 `{auto}` 以外的任何对齐方式。\n- 如果 `float` 为 `{true}`，则必须是 `{auto}`、`{top}` 或 `{bottom}`。\n\n当 `float` 为 `{false}` 且未指定垂直对齐方式时，内容放置在当前垂直轴上的位置。"

[reference.layout.place.place.body.details]
en = "The content to place."
zh = "要放置的内容。"

[reference.layout.place.place.clearance.details]
en = "The spacing between the placed element and other elements in a floating\nlayout.\n\nHas no effect if `float` is `{false}`."
zh = "浮动布局中放置元素与其他元素之间的间距。\n\n如果 `float` 为 `{false}`，则没有效果。"

[reference.layout.place.place.details]
en = "{{typst-docs/reference.layout.place.place.details.toml}}"

[reference.layout.place.place.dx.details]
en = "The horizontal displacement of the placed content.\n\n"
zh = "放置内容的水平位移。\n\n"

[reference.layout.place.place.dy.details]
en = "The vertical displacement of the placed content.\n\nThis does not affect the layout of in-flow content.\nIn other words, the placed content is treated as if it\nwere wrapped in a [`move`] element."
zh = "放置内容的垂直位移。\n\n这不会影响内联内容的布局。换句话说，放置的内容被视为被 [`move`] 元素包裹。"

[reference.layout.place.place.float.details]
en = "Whether the placed element has floating layout.\n\nFloating elements are positioned at the top or bottom of the parent\ncontainer, displacing in-flow content. They are always placed in the\nin-flow order relative to each other, as well as before any content\nfollowing a later [`place.flush`] element.\n\n"
zh = "放置元素是否具有浮动布局。\n\n浮动元素放置在父容器的顶部或底部， displacing in-flow content。它们总是相对于彼此按内联顺序放置，并且位于任何后续 [`place.flush`] 元素之后的任何内容之前。\n\n"

[reference.layout.place.place.flush.details]
en = "Asks the layout algorithm to place pending floating elements before\ncontinuing with the content.\n\nThis is useful for preventing floating figures from spilling\ninto the next section.\n\n"
zh = "请求布局算法在继续内容之前放置挂起的浮动元素。\n\n这对于防止浮动图形溢出到下一个部分很有用。\n\n"

[reference.layout.place.place.flush.oneliner]
en = "Asks the layout algorithm to place pending floating elements before"
zh = "请求布局算法在继续内容之前放置挂起的浮动元素"

[reference.layout.place.place.flush.title]
en = "Flush"
zh = "Flush"

[reference.layout.place.place.oneliner]
en = "Places content relatively to its parent container."
zh = "将内容相对其父容器放置。"

[reference.layout.place.place.scope.details]
en = "Relative to which containing scope something is placed.\n\nThe parent scope is primarily used with figures and, for\nthis reason, the figure function has a mirrored [`scope`\nparameter]($figure.scope). Nonetheless, it can also be more generally\nuseful to break out of the columns. A typical example would be to\n[create a single-column title section]($guides/page-setup-guide/#columns)\nin a two-column document.\n\nNote that parent-scoped placement is currently only supported if `float`\nis `{true}`. This may change in the future.\n\n"
zh = "相对于哪个包含范围放置内容。\n\n父范围主要用于图形，因此图形函数有一个镜像的 [`scope` 参数]($figure.scope)。然而，它也可以更一般地用于打破列。一个典型的例子是在两列文档中[创建一个单列标题部分]($guides/page-setup-guide/#columns)。\n\n请注意，目前只有当 `float` 为 `{true}` 时才支持父范围放置。这可能会在未来发生变化。\n\n"

[reference.layout.place.place.title]
en = "Place"
zh = "放置"
[reference.layout.place.title]
en = "Place"
zh = "放置"

[reference.layout.ratio.description]
en = "Documentation for the Ratio type."
zh = "Ratio 类型的文档。"

[reference.layout.ratio.oneliner]
en = "A ratio of a whole."
zh = "一个整体的比例。"

[reference.layout.ratio.ratio.details]
en = "A ratio of a whole.\n\nWritten as a number, followed by a percent sign.\n\n# Example\n```example\n#set align(center)\n#scale(x: 150%)[\n  Scaled apart.\n]\n```"
zh = "一个整体的比例。\n\n写成一个数字，后面跟着一个百分号。\n\n# 示例\n```example\n#set align(center)\n#scale(x: 150%)[\n  Scaled apart.\n]\n```"

[reference.layout.ratio.ratio.oneliner]
en = "A ratio of a whole."
zh = "一个整体的比例。"

[reference.layout.ratio.ratio.title]
en = "Ratio"
zh = "比例"

[reference.layout.ratio.title]
en = "Ratio"
zh = "比例"

[reference.layout.relative.description]
en = "Documentation for the Relative Length type."
zh = "Relative Length 类型的文档。"

[reference.layout.relative.oneliner]
en = "A length in relation to some known length."
zh = "一个相对于某个已知长度的长度。"

[reference.layout.relative.relative.details]
en = "A length in relation to some known length.\n\nThis type is a combination of a [length] with a [ratio]. It results from\naddition and subtraction of a length and a ratio. Wherever a relative length\nis expected, you can also use a bare length or ratio.\n\n# Example\n```example\n#rect(width: 100% - 50pt)\n\n#(100% - 50pt).length \\\n#(100% - 50pt).ratio\n```\n\nA relative length has the following fields:\n- `length`: Its length component.\n- `ratio`: Its ratio component."
zh = "一个相对于某个已知长度的长度。\n\n这种类型是 [长度] 和 [比例] 的组合。它来自于长度和比例的加减运算。无论何时需要相对长度，您也可以使用裸长度或比例。\n\n# 示例\n```example\n#rect(width: 100% - 50pt)\n\n#(100% - 50pt).length \\\n#(100% - 50pt).ratio\n```\n\n一个相对长度有以下字段：\n- `length`: 它的长度成分。\n- `ratio`: 它的比例成分。"

[reference.layout.relative.relative.oneliner]
en = "A length in relation to some known length."
zh = "一个相对于某个已知长度的长度。"

[reference.layout.relative.relative.title]
en = "Relative Length"
zh = "相对长度"

[reference.layout.relative.title]
en = "Relative Length"
zh = "相对长度"

[reference.layout.repeat.description]
en = "Documentation for the `repeat` function."
zh = "`repeat` 函数的文档。"

[reference.layout.repeat.oneliner]
en = "Repeats content to the available space."
zh = "重复内容以适应可用空间。"

[reference.layout.repeat.repeat.body.details]
en = "The content to repeat."
zh = "要重复的内容。"

[reference.layout.repeat.repeat.details]
en = "{{typst-docs/reference.layout.repeat.repeat.details.toml}}"

[reference.layout.repeat.repeat.gap.details]
en = "The gap between each instance of the body."
zh = "每个实例之间的间距。"

[reference.layout.repeat.repeat.justify.details]
en = "Whether to increase the gap between instances to completely fill the\navailable space."
zh = "是否增加实例之间的间距以完全填充可用空间。"

[reference.layout.repeat.repeat.oneliner]
en = "Repeats content to the available space."
zh = "重复内容以适应可用空间。"

[reference.layout.repeat.repeat.title]
en = "Repeat"
zh = "重复"

[reference.layout.repeat.title]
en = "Repeat"
zh = "重复"

[reference.layout.rotate.description]
en = "Documentation for the `rotate` function."
zh = "`rotate` 函数的文档。"

[reference.layout.rotate.oneliner]
en = "Rotates content without affecting layout."
zh = "旋转内容而不影响布局。"

[reference.layout.rotate.rotate.angle.details]
en = "The amount of rotation.\n\n"
zh = "旋转的角度。\n\n"

[reference.layout.rotate.rotate.body.details]
en = "The content to rotate."
zh = "要旋转的内容。"

[reference.layout.rotate.rotate.details]
en = "Rotates content without affecting layout.\n\nRotates an element by a given angle. The layout will act as if the element\nwas not rotated unless you specify `{reflow: true}`.\n\n# Example\n```example\n#stack(\n  dir: ltr,\n  spacing: 1fr,\n  ..range(16)\n    .map(i => rotate(24deg * i)[X]),\n)\n```"
zh = "旋转内容而不影响布局。\n\n按给定角度旋转元素。除非指定 `{reflow: true}`，否则布局将视为未旋转的元素。\n\n# 示例\n```example\n#stack(\n  dir: ltr,\n  spacing: 1fr,\n  ..range(16)\n    .map(i => rotate(24deg * i)[X]),\n)\n```"

[reference.layout.rotate.rotate.oneliner]
en = "Rotates content without affecting layout."
zh = "旋转内容而不影响布局。"

[reference.layout.rotate.rotate.origin.details]
en = "The origin of the rotation.\n\nIf, for instance, you wanted the bottom left corner of the rotated\nelement to stay aligned with the baseline, you would set it to `bottom +\nleft` instead.\n\n"
zh = "旋转的中心点。\n\n例如，如果您希望旋转元素的左下角与基线对齐，您应该将其设置为 `bottom +\nleft` 而不是 `bottom`。\n\n"

[reference.layout.rotate.rotate.reflow.details]
en = "Whether the rotation impacts the layout.\n\nIf set to `{false}`, the rotated content will retain the bounding box of\nthe original content. If set to `{true}`, the bounding box will take the\nrotation of the content into account and adjust the layout accordingly.\n\n"
zh = "旋转是否影响布局。\n\n如果设置为 `{false}`，旋转的内容将保留原始内容的边界框。如果设置为 `{true}`，边界框将考虑内容旋转并相应地调整布局。\n\n"

[reference.layout.rotate.rotate.title]
en = "Rotate"
zh = "旋转"

[reference.layout.rotate.title]
en = "Rotate"
zh = "旋转"

[reference.layout.scale.description]
en = "Documentation for the `scale` function."
zh = "`scale` 函数的文档。"

[reference.layout.scale.oneliner]
en = "Scales content without affecting layout."
zh = "缩放内容而不影响布局。"

[reference.layout.scale.scale.body.details]
en = "The content to scale."
zh = "要缩放的内容。"

[reference.layout.scale.scale.details]
en = "Scales content without affecting layout.\n\nLets you mirror content by specifying a negative scale on a single axis.\n\n# Example\n```example\n#set align(center)\n#scale(x: -100%)[This is mirrored.]\n#scale(x: -100%, reflow: true)[This is mirrored.]\n```"
zh = "缩放内容而不影响布局。\n\n允许您通过在单个轴上指定负缩放来镜像内容。\n\n# 示例\n```example\n#set align(center)\n#scale(x: -100%)[This is mirrored.]\n#scale(x: -100%, reflow: true)[This is mirrored.]\n```"

[reference.layout.scale.scale.factor.details]
en = "The scaling factor for both axes, as a positional argument. This is just\nan optional shorthand notation for setting `x` and `y` to the same\nvalue."
zh = "两个轴的缩放因子，作为「位置参数」（[positional argument](#x-term-positional)）。这只是设置 `x` 和 `y` 的简写，因此无法在上下文表达式中检索。"

[reference.layout.scale.scale.oneliner]
en = "Scales content without affecting layout."
zh = "缩放内容而不影响布局。"

[reference.layout.scale.scale.origin.details]
en = "The origin of the transformation.\n\n"
zh = "变换的中心点。\n\n"

[reference.layout.scale.scale.reflow.details]
en = "Whether the scaling impacts the layout.\n\nIf set to `{false}`, the scaled content will be allowed to overlap\nother content. If set to `{true}`, it will compute the new size of\nthe scaled content and adjust the layout accordingly.\n\n"
zh = "缩放是否影响布局。\n\n如果设置为 `{false}`，缩放的内容将允许与其他内容重叠。如果设置为 `{true}`，它将计算缩放内容的新大小并相应地调整布局。\n\n"

[reference.layout.scale.scale.title]
en = "Scale"
zh = "缩放"

[reference.layout.scale.scale.x.details]
en = "The horizontal scaling factor.\n\nThe body will be mirrored horizontally if the parameter is negative."
zh = "水平缩放因子。\n\n如果「参数」（[parameter](#x-term-parameter)）为负，则内容将水平镜像。"

[reference.layout.scale.scale.y.details]
en = "The vertical scaling factor.\n\nThe body will be mirrored vertically if the parameter is negative."
zh = "垂直缩放因子。\n\n如果「参数」（[parameter](#x-term-parameter)）为负，则内容将垂直镜像。"

[reference.layout.scale.title]
en = "Scale"
zh = "缩放"

[reference.layout.skew.description]
en = "Documentation for the `skew` function."
zh = "`skew` 函数的文档。"

[reference.layout.skew.oneliner]
en = "Skews content."
zh = "倾斜内容。"

[reference.layout.skew.skew.ax.details]
en = "The horizontal skewing angle.\n\n"
zh = "水平倾斜角度。\n\n"

[reference.layout.skew.skew.ay.details]
en = "The vertical skewing angle.\n\n"
zh = "垂直倾斜角度。\n\n"

[reference.layout.skew.skew.body.details]
en = "The content to skew."
zh = "要倾斜的内容。"

[reference.layout.skew.skew.details]
en = "Skews content.\n\nSkews an element in horizontal and/or vertical direction. The layout will\nact as if the element was not skewed unless you specify `{reflow: true}`.\n\n# Example\n```example\n#skew(ax: -12deg)[\n  This is some fake italic text.\n]\n```"
zh = "倾斜内容。\n\n在水平和/或垂直方向上倾斜元素。除非指定 `{reflow: true}`，否则布局将视为未倾斜的元素。\n\n# 示例\n```example\n#skew(ax: -12deg)[\n  This is some fake italic text.\n]\n```"

[reference.layout.skew.skew.oneliner]
en = "Skews content."
zh = "倾斜内容。"

[reference.layout.skew.skew.origin.details]
en = "The origin of the skew transformation.\n\nThe origin will stay fixed during the operation.\n\n"
zh = "倾斜变换的中心点。\n\n在操作过程中，中心点将保持固定。\n\n"

[reference.layout.skew.skew.reflow.details]
en = "Whether the skew transformation impacts the layout.\n\nIf set to `{false}`, the skewed content will retain the bounding box of\nthe original content. If set to `{true}`, the bounding box will take the\ntransformation of the content into account and adjust the layout accordingly.\n\n"
zh = "倾斜变换是否影响布局。\n\n如果设置为 `{false}`，倾斜的内容将保留原始内容的边界框。如果设置为 `{true}`，边界框将考虑内容倾斜并相应地调整布局。\n\n"

[reference.layout.skew.skew.title]
en = "Skew"
zh = "倾斜"

[reference.layout.skew.title]
en = "Skew"
zh = "倾斜"

[reference.layout.stack.description]
en = "Documentation for the `stack` function."
zh = "`stack` 函数的文档。"

[reference.layout.stack.oneliner]
en = "Arranges content and spacing horizontally or vertically."
zh = "水平或垂直排列内容和间距。"

[reference.layout.stack.stack.children.details]
en = "The children to stack along the axis."
zh = "沿轴堆叠的子元素。"

[reference.layout.stack.stack.details]
en = "Arranges content and spacing horizontally or vertically.\n\nThe stack places a list of items along an axis, with optional spacing\nbetween each item.\n\n# Example\n```example\n#stack(\n  dir: ttb,\n  rect(width: 40pt),\n  rect(width: 120pt),\n  rect(width: 90pt),\n)\n```"
zh = "水平或垂直排列内容和间距。\n\n堆栈沿轴放置一系列项目，每个项目之间可选的间距。\n\n# 示例\n```example\n#stack(\n  dir: ttb,\n  rect(width: 40pt),\n  rect(width: 120pt),\n  rect(width: 90pt),\n)\n```"

[reference.layout.stack.stack.dir.details]
en = "The direction along which the items are stacked. Possible values are:\n\n- `{ltr}`: Left to right.\n- `{rtl}`: Right to left.\n- `{ttb}`: Top to bottom.\n- `{btt}`: Bottom to top.\n\nYou can use the `start` and `end` methods to obtain the initial and\nfinal points (respectively) of a direction, as `alignment`. You can also\nuse the `axis` method to determine whether a direction is\n`{\"horizontal\"}` or `{\"vertical\"}`. The `inv` method returns a\ndirection's inverse direction.\n\nFor example, `{ttb.start()}` is `top`, `{ttb.end()}` is `bottom`,\n`{ttb.axis()}` is `{\"vertical\"}` and `{ttb.inv()}` is equal to `btt`."
zh = "沿轴堆叠的方向。可能的值是：\n\n- `{ltr}`: 从左到右。\n- `{rtl}`: 从右到左。\n- `{ttb}`: 从上到下。\n- `{btt}`: 从下到上。\n\n您可以使用 `start` 和 `end` 方法来获取方向的初始和最终点（分别为），作为 `alignment`。您还可以使用 `axis` 方法来确定方向是 `{\"horizontal\"}` 还是 `{\"vertical\"}`。`inv` 方法返回方向的反方向。\n\n例如，`{ttb.start()}` 是 `top`，`{ttb.end()}` 是 `bottom`，`{ttb.axis()}` 是 `{\"vertical\"}` 并且 `{ttb.inv()}` 等于 `btt`。"

[reference.layout.stack.stack.oneliner]
en = "Arranges content and spacing horizontally or vertically."
zh = "水平或垂直排列内容和间距。"

[reference.layout.stack.stack.spacing.details]
en = "Spacing to insert between items where no explicit spacing was provided."
zh = "在未提供显式间距的项目之间插入的间距。"

[reference.layout.stack.stack.title]
en = "Stack"
zh = "堆叠"

[reference.layout.stack.title]
en = "Stack"
zh = "堆叠"

[reference.layout.title]
en = "Layout"
zh = "布局"

[reference.layout.v.description]
en = "Documentation for the `v` function."
zh = "`v` 函数的文档。"

[reference.layout.v.oneliner]
en = "Inserts vertical spacing into a flow of blocks."
zh = "插入垂直间距到块流中。"

[reference.layout.v.title]
en = "Spacing (V)"
zh = "间距 (V)"

[reference.layout.v.v.amount.details]
en = "How much spacing to insert."
zh = "插入多少间距。"

[reference.layout.v.v.details]
en = "Inserts vertical spacing into a flow of blocks.\n\nThe spacing can be absolute, relative, or fractional. In the last case,\nthe remaining space on the page is distributed among all fractional spacings\naccording to their relative fractions.\n\n# Example\n```example\n#grid(\n  rows: 3cm,\n  columns: 6,\n  gutter: 1fr,\n  [A #parbreak() B],\n  [A #v(0pt) B],\n  [A #v(10pt) B],\n  [A #v(0pt, weak: true) B],\n  [A #v(40%, weak: true) B],\n  [A #v(1fr) B],\n)\n```"
zh = "插入垂直间距到块流中。\n\n间距可以是绝对的、相对的或分数的。在最后一种情况下，剩余空间在页面上按其相对分数分配给所有分数间距。\n\n# 示例\n```example\n#grid(\n  rows: 3cm,\n  columns: 6,\n  gutter: 1fr,\n  [A #parbreak() B],\n  [A #v(0pt) B],\n  [A #v(10pt) B],\n  [A #v(0pt, weak: true) B],\n  [A #v(40%, weak: true) B],\n  [A #v(1fr) B],\n)\n```"

[reference.layout.v.v.oneliner]
en = "Inserts vertical spacing into a flow of blocks."
zh = "插入垂直间距到块流中。"

[reference.layout.v.v.title]
en = "Spacing (V)"
zh = "间距 (V)"

[reference.layout.v.v.weak.details]
en = "If `{true}`, the spacing collapses at the start or end of a flow.\nMoreover, from multiple adjacent weak spacings all but the largest one\ncollapse. Weak spacings will always collapse adjacent paragraph spacing,\neven if the paragraph spacing is larger.\n\n"
zh = "如果 `{true}`，间距在流的开头或结尾处折叠。此外，从多个相邻的弱间距中，除了最大的一个外，所有间距都会折叠。弱间距将始终折叠相邻的段落间距，即使段落间距更大。\n\n"

[reference.math.accent.accent.accent.details]
en = "The accent to apply to the base.\n\nSupported accents include:\n\n| Accent        | Name            | Codepoint |\n| ------------- | --------------- | --------- |\n| Grave         | `grave`         | <code>&DiacriticalGrave;</code> |\n| Acute         | `acute`         | `´`       |\n| Circumflex    | `hat`           | `^`       |\n| Tilde         | `tilde`         | `~`       |\n| Macron        | `macron`        | `¯`       |\n| Dash          | `dash`          | `‾`       |\n| Breve         | `breve`         | `˘`       |\n| Dot           | `dot`           | `.`       |\n| Double dot, Diaeresis | `dot.double`, `diaer` | `¨` |\n| Triple dot    | `dot.triple`    | <code>&tdot;</code> |\n| Quadruple dot | `dot.quad`      | <code>&DotDot;</code> |\n| Circle        | `circle`        | `∘`       |\n| Double acute  | `acute.double`  | `˝`       |\n| Caron         | `caron`         | `ˇ`       |\n| Right arrow   | `arrow`, `->`   | `→`       |\n| Left arrow    | `arrow.l`, `<-` | `←`       |\n| Left/Right arrow | `arrow.l.r`  | `↔`       |\n| Right harpoon | `harpoon`       | `⇀`       |\n| Left harpoon  | `harpoon.lt`    | `↼`       |"
zh = "要应用到基上的重音。\n\n支持的重音包括：\n\n| 重音        | 名称            | 编码点 |\n| ------------- | --------------- | --------- |\n| Grave         | `grave`         | <code>&DiacriticalGrave;</code> |\n| Acute         | `acute`         | `´`       |\n| Circumflex    | `hat`           | `^`       |\n| Tilde         | `tilde`         | `~`       |\n| Macron        | `macron`        | `¯`       |\n| Dash          | `dash`          | `‾`       |\n| Breve         | `breve`         | `˘`       |\n| Dot           | `dot`           | `.`       |\n| Double dot, Diaeresis | `dot.double`, `diaer` | `¨` |\n| Triple dot    | `dot.triple`    | <code>&tdot;</code> |\n| Quadruple dot | `dot.quad`      | <code>&DotDot;</code> |\n| Circle        | `circle`        | `∘`       |\n| Double acute  | `acute.double`  | `˝`       |\n| Caron         | `caron`         | `ˇ`       |\n| Right arrow   | `arrow`, `->`   | `→`       |\n| Left arrow    | `arrow.l`, `<-` | `←`       |\n| Left/Right arrow | `arrow.l.r`  | `↔`       |\n| Right harpoon | `harpoon`       | `⇀`       |\n| Left harpoon  | `harpoon.lt`    | `↼`       |"

[reference.math.accent.accent.base.details]
en = "The base to which the accent is applied.\nMay consist of multiple letters.\n\n"
zh = "要应用重音的基。可能由多个字母组成。\n\n"

[reference.math.accent.accent.details]
en = "Attaches an accent to a base.\n\n# Example\n```example\n$grave(a) = accent(a, `)$ \\\n$arrow(a) = accent(a, arrow)$ \\\n$tilde(a) = accent(a, \\u{0303})$\n```"
zh = "将一个重音附加到一个基上。\n\n# 示例\n```example\n$grave(a) = accent(a, `)$ \\\n$arrow(a) = accent(a, arrow)$ \\\n$tilde(a) = accent(a, \\u{0303})$\n```"

[reference.math.accent.accent.oneliner]
en = "Attaches an accent to a base."
zh = "将一个重音附加到一个基上。"

[reference.math.accent.accent.size.details]
en = "The size of the accent, relative to the width of the base."
zh = "重音的大小，相对于基的宽度。"

[reference.math.accent.accent.title]
en = "Accent"
zh = "变音"

[reference.math.accent.description]
en = "Documentation for the `accent` function."
zh = "`accent` 函数的文档。"

[reference.math.accent.oneliner]
en = "Attaches an accent to a base."
zh = "将一个变音符号附加到一个基上。"

[reference.math.accent.title]
en = "Accent"
zh = "变音"

[reference.math.attach.attach.attach.b.details]
en = "The bottom attachment, smartly positioned at the bottom-right or below\nthe base.\n\nYou can wrap the base in `{limits()}` or `{scripts()}` to override the\nsmart positioning."
zh = "底部附件，智能地定位在底部右侧或下方基的下方。\n\n您可以将基包裹在 `{limits()}` 或 `{scripts()}` 中以覆盖智能定位。"

[reference.math.attach.attach.attach.base.details]
en = "The base to which things are attached."
zh = "要附加的东西的基。"

[reference.math.attach.attach.attach.bl.details]
en = "The bottom-left attachment (before base)."
zh = "底部左侧附件（在基之前）。"

[reference.math.attach.attach.attach.br.details]
en = "The bottom-right attachment (after the base)."
zh = "底部右侧附件（在基之后）。"

[reference.math.attach.attach.attach.details]
en = "A base with optional attachments.\n\n"
zh = "一个带有可选附件的基。\n\n"

[reference.math.attach.attach.attach.oneliner]
en = "A base with optional attachments."
zh = "一个带有可选附件的基。"

[reference.math.attach.attach.attach.t.details]
en = "The top attachment, smartly positioned at top-right or above the base.\n\nYou can wrap the base in `{limits()}` or `{scripts()}` to override the\nsmart positioning."
zh = "顶部附件，智能地定位在顶部右侧或上方基的上方。\n\n您可以将基包裹在 `{limits()}` 或 `{scripts()}` 中以覆盖智能定位。"

[reference.math.attach.attach.attach.title]
en = "Attach"
zh = "附件"

[reference.math.attach.attach.attach.tl.details]
en = "The top-left attachment (before the base)."
zh = "顶部左侧附件（在基之前）。"

[reference.math.attach.attach.attach.tr.details]
en = "The top-right attachment (after the base)."
zh = "顶部右侧附件（在基之后）。"

[reference.math.attach.attach.details]
en = "Subscript, superscripts, and limits.\n\nAttachments can be displayed either as sub/superscripts, or limits. Typst\nautomatically decides which is more suitable depending on the base, but you\ncan also control this manually with the `scripts` and `limits` functions.\n\nIf you want the base to stretch to fit long top and bottom attachments (for\nexample, an arrow with text above it), use the [`stretch`]($math.stretch)\nfunction.\n\n# Example\n```example\n$ sum_(i=0)^n a_i = 2^(1+i) $\n```\n\n# Syntax\nThis function also has dedicated syntax for attachments after the base: Use\nthe underscore (`_`) to indicate a subscript i.e. bottom attachment and the\nhat (`^`) to indicate a superscript i.e. top attachment.\n"
zh = "下标、上标和限制。\n\n附件可以显示为下标/上标或限制。Typst 自动决定哪个更合适，但您也可以使用 `scripts` 和 `limits` 函数手动控制。\n\n如果您希望基拉伸以适应长顶部和底部附件（例如，带有文本的箭头），请使用 [`stretch`]($math.stretch) 函数。\n\n# 示例\n```example\n$ sum_(i=0)^n a_i = 2^(1+i) $\n```\n\n# 语法\n此函数还具有用于基后附件的专用语法：使用下划线 (`_`) 表示下标（即底部附件），使用帽子 (`^`) 表示上标（即顶部附件）。"

[reference.math.attach.attach.limits.body.details]
en = "The base to attach the limits to."
zh = "要附加限制的基。"

[reference.math.attach.attach.limits.details]
en = "Forces a base to display attachments as limits.\n\n"
zh = "强制一个基显示为限制。\n\n"

[reference.math.attach.attach.limits.inline.details]
en = "Whether to also force limits in inline equations.\n\nWhen applying limits globally (e.g., through a show rule), it is\ntypically a good idea to disable this."
zh = "是否也强制内联方程中的限制。\n\n当全局应用限制时（例如，通过显示规则），通常最好禁用此功能。"

[reference.math.attach.attach.limits.oneliner]
en = "Forces a base to display attachments as limits."
zh = "强制一个基显示为限制。"

[reference.math.attach.attach.limits.title]
en = "Limits"
zh = "限制"

[reference.math.attach.attach.scripts.body.details]
en = "The base to attach the scripts to."
zh = "要附加脚本的基。"

[reference.math.attach.attach.scripts.details]
en = "Forces a base to display attachments as scripts.\n\n"
zh = "强制一个基显示为脚本。\n\n"

[reference.math.attach.attach.scripts.oneliner]
en = "Forces a base to display attachments as scripts."
zh = "强制一个基显示为脚本。"

[reference.math.attach.attach.scripts.title]
en = "Scripts"
zh = "脚本"

[reference.math.attach.attach.title]
en = "Attach"
zh = "附件"

[reference.math.attach.description]
en = "Documentation for the attach functions."
zh = "附件函数的文档。"

[reference.math.attach.oneliner]
en = "Subscript, superscripts, and limits."
zh = "下标、上标和限制。"

[reference.math.attach.title]
en = "Attach"
zh = "附件"

[reference.math.binom.binom.details]
en = "A binomial expression.\n\n# Example\n```example\n$ binom(n, k) $\n$ binom(n, k_1, k_2, k_3, ..., k_m) $\n```"
zh = "二项式表达式。\n\n# 示例\n```example\n$ binom(n, k) $\n$ binom(n, k_1, k_2, k_3, ..., k_m) $\n```"

[reference.math.binom.binom.lower.details]
en = "The binomial's lower index."
zh = "二项式的下标。"

[reference.math.binom.binom.oneliner]
en = "A binomial expression."
zh = "二项式表达式。"

[reference.math.binom.binom.title]
en = "Binomial"
zh = "二项式"

[reference.math.binom.binom.upper.details]
en = "The binomial's upper index."
zh = "二项式的上标。"

[reference.math.binom.description]
en = "Documentation for the `binom` function."
zh = "`binom` 函数的文档。"

[reference.math.binom.oneliner]
en = "A binomial expression."
zh = "二项式表达式。"

[reference.math.binom.title]
en = "Binomial"
zh = "二项式"

[reference.math.cancel.cancel.angle.details]
en = "How much to rotate the cancel line.\n\n- If given an angle, the line is rotated by that angle clockwise with\n  respect to the y-axis.\n- If `{auto}`, the line assumes the default angle; that is, along the\n  rising diagonal of the content box.\n- If given a function `angle => angle`, the line is rotated, with\n  respect to the y-axis, by the angle returned by that function. The\n  function receives the default angle as its input.\n\n"
zh = "取消线的旋转量。\n\n- 如果给定一个角度，线会按顺时针方向相对于 y 轴旋转该角度。\n- 如果 `{auto}`，线会采用默认角度；即沿着内容框的上升对角线。\n- 如果给定一个函数 `angle => angle`，线会相对于 y 轴旋转，旋转角度由该函数返回。该函数接收默认角度作为输入。\n\n"

[reference.math.cancel.cancel.body.details]
en = "The content over which the line should be placed."
zh = "要放置线条的内容。"

[reference.math.cancel.cancel.cross.details]
en = "Whether two opposing cancel lines should be drawn, forming a cross over\nthe element. Overrides `inverted`.\n\n"
zh = "是否绘制两条相反的取消线，形成一个交叉。覆盖 `inverted`。\n\n"

[reference.math.cancel.cancel.details]
en = "Displays a diagonal line over a part of an equation.\n\nThis is commonly used to show the elimination of a term.\n\n# Example\n```example\n>>> #set page(width: 140pt)\nHere, we can simplify:\n$ (a dot b dot cancel(x)) /\n    cancel(x) $\n```"
zh = "在方程的一部分上显示一条对角线。\n\n这通常用于显示项的消除。\n\n# 示例\n```example\n>>> #set page(width: 140pt)\nHere, we can simplify:\n$ (a dot b dot cancel(x)) /\n    cancel(x) $\n```"

[reference.math.cancel.cancel.inverted.details]
en = "Whether the cancel line should be inverted (flipped along the y-axis).\nFor the default angle setting, inverted means the cancel line\npoints to the top left instead of top right.\n\n"
zh = "是否将取消线反转（沿 y 轴翻转）。对于默认角度设置，反转意味着取消线指向左上角而不是右上角。\n\n"

[reference.math.cancel.cancel.length.details]
en = "The length of the line, relative to the length of the diagonal spanning\nthe whole element being \"cancelled\". A value of `{100%}` would then have\nthe line span precisely the element's diagonal.\n\n"
zh = "线条的长度，相对于跨越整个被“取消”元素的对角线的长度。值为 `{100%}` 时，线条精确地跨越元素的对角线。\n\n"

[reference.math.cancel.cancel.oneliner]
en = "Displays a diagonal line over a part of an equation."
zh = "在方程的一部分上显示一条对角线。"

[reference.math.cancel.cancel.stroke.details]
en = "How to [stroke]($stroke) the cancel line.\n\n"
zh = "如何 [stroke]($stroke) 取消线。\n\n"

[reference.math.cancel.cancel.title]
en = "Cancel"
zh = "取消"

[reference.math.cancel.description]
en = "Documentation for the `cancel` function."
zh = "`cancel` 函数的文档。"

[reference.math.cancel.oneliner]
en = "Displays a diagonal line over a part of an equation."
zh = "在方程的一部分上显示一条对角线。"

[reference.math.cancel.title]
en = "Cancel"
zh = "取消"

[reference.math.cases.cases.children.details]
en = "The branches of the case distinction."
zh = "情况区分的分支。"

[reference.math.cases.cases.delim.details]
en = "The delimiter to use.\n\nCan be a single character specifying the left delimiter, in which case\nthe right delimiter is inferred. Otherwise, can be an array containing a\nleft and a right delimiter.\n\n"
zh = "要使用的「分隔符」（[delimiter](#x-term-delimiter)）。\n\n可以是单个字符，指定「左分隔符」（#x-term-delimiter），在这种情况下，右分隔符是推断的。否则，可以是包含左和右分隔符的数组。\n\n"

[reference.math.cases.cases.details]
en = "A case distinction.\n\nContent across different branches can be aligned with the `&` symbol.\n\n# Example\n```example\n$ f(x, y) := cases(\n  1 \"if\" (x dot y)/2 <= 0,\n  2 \"if\" x \"is even\",\n  3 \"if\" x in NN,\n  4 \"else\",\n) $\n```"
zh = "一个情况区分。\n\n不同分支的内容可以与 `&` 符号对齐。\n\n# 示例\n```example\n$ f(x, y) := cases(\n  1 \"if\" (x dot y)/2 <= 0,\n  2 \"if\" x \"is even\",\n  3 \"if\" x in NN,\n  4 \"else\",\n) $\n```"

[reference.math.cases.cases.gap.details]
en = "The gap between branches.\n\n"
zh = "分支之间的间距。\n\n"

[reference.math.cases.cases.oneliner]
en = "A case distinction."
zh = "一个情况区分。"

[reference.math.cases.cases.reverse.details]
en = "Whether the direction of cases should be reversed.\n\n"
zh = "是否应反转情况的方向。\n\n"

[reference.math.cases.cases.title]
en = "Cases"
zh = "情况"

[reference.math.cases.description]
en = "Documentation for the `cases` function."
zh = "`cases` 函数的文档。"

[reference.math.cases.oneliner]
en = "A case distinction."
zh = "一个情况区分。"

[reference.math.cases.title]
en = "Cases"
zh = "情况"

[reference.math.class.class.body.details]
en = "The content to which the class is applied."
zh = "要应用类的内容。"

[reference.math.class.class.class.details]
en = "The class to apply to the content."
zh = "要应用的类。"

[reference.math.class.class.details]
en = "Forced use of a certain math class.\n\nThis is useful to treat certain symbols as if they were of a different\nclass, e.g. to make a symbol behave like a relation. The class of a symbol\ndefines the way it is laid out, including spacing around it, and how its\nscripts are attached by default. Note that the latter can always be\noverridden using [`{limits}`](math.limits) and [`{scripts}`](math.scripts).\n\n# Example\n```example\n#let loves = math.class(\n  \"relation\",\n  sym.suit.heart,\n)\n\n$x loves y and y loves 5$\n```"
zh = "强制使用特定的数学类。\n\n这有助于将某些符号视为不同的类，例如使符号表现得像关系。符号的类定义了它的布局方式，包括周围的间距，以及默认的脚本附件方式。请注意，后者总是可以通过 [`{limits}`](math.limits) 和 [`{scripts}`](math.scripts) 覆盖。\n\n# 示例\n```example\n#let loves = math.class(\n  \"relation\",\n  sym.suit.heart,\n)\n\n$x loves y and y loves 5$\n```"

[reference.math.class.class.oneliner]
en = "Forced use of a certain math class."
zh = "强制使用特定的数学类。"

[reference.math.class.class.title]
en = "Class"
zh = "类"

[reference.math.class.description]
en = "Documentation for the `class` function."
zh = "`class` 函数的文档。"

[reference.math.class.oneliner]
en = "Forced use of a certain math class."
zh = "强制使用特定的数学类。"

[reference.math.class.title]
en = "Class"
zh = "类"

[reference.math.description]
en = "Documentation for functions related to Math in Typst."
zh = "Typst 中与数学相关的函数的文档。"

[reference.math.equation.description]
en = "Documentation for the `equation` function."
zh = "`equation` 函数的文档。"

[reference.math.equation.equation.block.details]
en = "Whether the equation is displayed as a separate block."
zh = "是否将方程显示为单独的块。"

[reference.math.equation.equation.body.details]
en = "The contents of the equation."
zh = "方程的内容。"

[reference.math.equation.equation.details]
en = "{{typst-docs/reference.math.equation.equation.details.toml}}"

[reference.math.equation.equation.number-align.details]
en = "The alignment of the equation numbering.\n\nBy default, the alignment is `{end + horizon}`. For the horizontal\ncomponent, you can use `{right}`, `{left}`, or `{start}` and `{end}`\nof the text direction; for the vertical component, you can use\n`{top}`, `{horizon}`, or `{bottom}`.\n\n"
zh = "方程编号的排列方式。\n\n默认情况下，排列方式为 `{end + horizon}`。对于水平排列，可以使用文本方向的 `{right}`、`{left}` 或 `{start}` 和 `{end}`；对于垂直排列，可以使用 `{top}`、`{horizon}` 或 `{bottom}`。\n\n"

[reference.math.equation.equation.numbering.details]
en = "How to [number]($numbering) block-level equations.\n\n"
zh = "如何 [number]($numbering) 块级方程。\n\n"

[reference.math.equation.equation.oneliner]
en = "A mathematical equation."
zh = "一个数学方程。"

[reference.math.equation.equation.supplement.details]
en = "A supplement for the equation.\n\nFor references to equations, this is added before the referenced number.\n\nIf a function is specified, it is passed the referenced equation and\nshould return content.\n\n"
zh = "方程的补充。\n\n对于方程的引用，这会在引用编号之前添加。\n\n如果指定了一个函数，它会被传递引用的方程，并应返回内容。\n\n"

[reference.math.equation.equation.title]
en = "Equation"
zh = "方程"

[reference.math.equation.oneliner]
en = "A mathematical equation."
zh = "一个数学方程。"

[reference.math.equation.title]
en = "Equation"
zh = "方程"

[reference.math.frac.description]
en = "Documentation for the `frac` function."
zh = "`frac` 函数的文档。"

[reference.math.frac.frac.denom.details]
en = "The fraction's denominator."
zh = "分数的分母。"

[reference.math.frac.frac.details]
en = "A mathematical fraction.\n\n# Example\n```example\n$ 1/2 < (x+1)/2 $\n$ ((x+1)) / 2 = frac(a, b) $\n```\n\n# Syntax\nThis function also has dedicated syntax: Use a slash to turn neighbouring\nexpressions into a fraction. Multiple atoms can be grouped into a single\nexpression using round grouping parenthesis. Such parentheses are removed\nfrom the output, but you can nest multiple to force them."
zh = "一个数学分数。\n\n# 示例\n```example\n$ 1/2 < (x+1)/2 $\n$ ((x+1)) / 2 = frac(a, b) $\n```\n\n# 语法\n这个函数也有专门的语法：使用斜杠将相邻的表达式转换为分数。可以使用圆括号将多个原子分组为一个表达式。这些括号会被从输出中移除，但你可以嵌套多个括号来强制它们。"

[reference.math.frac.frac.num.details]
en = "The fraction's numerator."
zh = "分数的分子。"

[reference.math.frac.frac.oneliner]
en = "A mathematical fraction."
zh = "一个数学分数。"

[reference.math.frac.frac.title]
en = "Fraction"
zh = "分数"

[reference.math.frac.oneliner]
en = "A mathematical fraction."
zh = "一个数学分数。"

[reference.math.frac.title]
en = "Fraction"
zh = "分数"

[reference.math.lr.description]
en = "Documentation for the lr functions."
zh = "`lr` 函数的文档。"

[reference.math.lr.lr.abs.body.details]
en = "The expression to take the absolute value of."
zh = "要取绝对值的表达式。"

[reference.math.lr.lr.abs.details]
en = "Takes the absolute value of an expression.\n\n"
zh = "取表达式的绝对值。\n\n"

[reference.math.lr.lr.abs.oneliner]
en = "Takes the absolute value of an expression."
zh = "取表达式的绝对值。"

[reference.math.lr.lr.abs.size.details]
en = "The size of the brackets, relative to the height of the wrapped content."
zh = "括号的大小，相对于包裹内容的高度。"

[reference.math.lr.lr.abs.title]
en = "Abs"
zh = "绝对值"

[reference.math.lr.lr.ceil.body.details]
en = "The expression to ceil."
zh = "要取上整的表达式。"

[reference.math.lr.lr.ceil.details]
en = "Ceils an expression.\n\n"
zh = "取上整的表达式。\n\n"

[reference.math.lr.lr.ceil.oneliner]
en = "Ceils an expression."
zh = "取上整的表达式。"

[reference.math.lr.lr.ceil.size.details]
en = "The size of the brackets, relative to the height of the wrapped content."
zh = "括号的大小，相对于包裹内容的高度。"

[reference.math.lr.lr.ceil.title]
en = "Ceil"
zh = "上整"

[reference.math.lr.lr.details]
en = "Delimiter matching.\n\nThe `lr` function allows you to match two delimiters and scale them with the\ncontent they contain. While this also happens automatically for delimiters\nthat match syntactically, `lr` allows you to match two arbitrary delimiters\nand control their size exactly. Apart from the `lr` function, Typst provides\na few more functions that create delimiter pairings for absolute, ceiled,\nand floored values as well as norms.\n\n# Example\n```example\n$ [a, b/2] $\n$ lr(]sum_(x=1)^n], size: #50%) x $\n$ abs((x + y) / 2) $\n```\n"
zh = "「分隔符」（[delimiter](#x-term-delimiter)）匹配。\n\n`lr` 函数允许你匹配两个分隔符，并根据它们包含的内容缩放它们。虽然这也会自动为语法匹配的分隔符发生，但 `lr` 允许你匹配两个任意分隔符，并精确控制它们的大小。除了 `lr` 函数，Typst 还提供了几个其他函数，用于创建绝对值、上整和下整值以及范数的分隔符配对。\n\n# 示例\n```example\n$ [a, b/2] $\n$ lr(]sum_(x=1)^n], size: #50%) x $\n$ abs((x + y) / 2) $\n```\n"

[reference.math.lr.lr.floor.body.details]
en = "The expression to floor."
zh = "要取下整的表达式。"

[reference.math.lr.lr.floor.details]
en = "Floors an expression.\n\n"
zh = "取下整的表达式。\n\n"

[reference.math.lr.lr.floor.oneliner]
en = "Floors an expression."
zh = "取下整的表达式。"

[reference.math.lr.lr.floor.size.details]
en = "The size of the brackets, relative to the height of the wrapped content."
zh = "括号的大小，相对于包裹内容的高度。"

[reference.math.lr.lr.floor.title]
en = "Floor"
zh = "下整"

[reference.math.lr.lr.lr.body.details]
en = "The delimited content, including the delimiters."
zh = "包含「分隔符」（[delimiter](#x-term-delimiter)）的内容。"

[reference.math.lr.lr.lr.details]
en = "Scales delimiters.\n\nWhile matched delimiters scale by default, this can be used to scale\nunmatched delimiters and to control the delimiter scaling more precisely."
zh = "缩放「分隔符」（[delimiter](#x-term-delimiter)）。\n\n虽然匹配的分隔符默认会缩放，但可以用于缩放未匹配的分隔符，并更精确地控制分隔符的缩放。"

[reference.math.lr.lr.lr.oneliner]
en = "Scales delimiters."
zh = "缩放「分隔符」（[delimiter](#x-term-delimiter)）。"

[reference.math.lr.lr.lr.size.details]
en = "The size of the brackets, relative to the height of the wrapped content."
zh = "括号的大小，相对于包裹内容的高度。"

[reference.math.lr.lr.lr.title]
en = "Left/Right"
zh = "左/右"

[reference.math.lr.lr.mid.body.details]
en = "The content to be scaled."
zh = "要缩放的内容。"

[reference.math.lr.lr.mid.details]
en = "Scales delimiters vertically to the nearest surrounding `{lr()}` group.\n\n"
zh = "垂直缩放「分隔符」（[delimiter](#x-term-delimiter)）到最近的 `{lr()}` 组。\n\n"

[reference.math.lr.lr.mid.oneliner]
en = "Scales delimiters vertically to the nearest surrounding `{lr()}` group."
zh = "垂直缩放「分隔符」（[delimiter](#x-term-delimiter)）到最近的 `{lr()}` 组。"

[reference.math.lr.lr.mid.title]
en = "Mid"
zh = "中"

[reference.math.lr.lr.norm.body.details]
en = "The expression to take the norm of."
zh = "要取范数的表达式。"

[reference.math.lr.lr.norm.details]
en = "Takes the norm of an expression.\n\n"
zh = "取表达式的范数。\n\n"

[reference.math.lr.lr.norm.oneliner]
en = "Takes the norm of an expression."
zh = "取表达式的范数。"

[reference.math.lr.lr.norm.size.details]
en = "The size of the brackets, relative to the height of the wrapped content."
zh = "括号的大小，相对于包裹内容的高度。"

[reference.math.lr.lr.norm.title]
en = "Norm"
zh = "范数"

[reference.math.lr.lr.round.body.details]
en = "The expression to round."
zh = "要取整的表达式。"

[reference.math.lr.lr.round.details]
en = "Rounds an expression.\n\n"
zh = "取整的表达式。\n\n"

[reference.math.lr.lr.round.oneliner]
en = "Rounds an expression."
zh = "取整的表达式。"

[reference.math.lr.lr.round.size.details]
en = "The size of the brackets, relative to the height of the wrapped content."
zh = "括号的大小，相对于包裹内容的高度。"

[reference.math.lr.lr.round.title]
en = "Round"
zh = "取整"

[reference.math.lr.lr.title]
en = "Left/Right"
zh = "左/右"

[reference.math.lr.oneliner]
en = "Delimiter matching."
zh = "「分隔符」（[delimiter](#x-term-delimiter)）匹配。"

[reference.math.lr.title]
en = "Left/Right"
zh = "左/右"

[reference.math.mat.description]
en = "Documentation for the `mat` function."
zh = "`mat` 函数的文档。"

[reference.math.mat.mat.align.details]
en = "The horizontal alignment that each cell should have.\n\n"
zh = "每个单元格的水平对齐方式。\n\n"

[reference.math.mat.mat.augment.details]
en = "Draws augmentation lines in a matrix.\n\n- `{none}`: No lines are drawn.\n- A single number: A vertical augmentation line is drawn\n  after the specified column number. Negative numbers start from the end.\n- A dictionary: With a dictionary, multiple augmentation lines can be\n  drawn both horizontally and vertically. Additionally, the style of the\n  lines can be set. The dictionary can contain the following keys:\n  - `hline`: The offsets at which horizontal lines should be drawn.\n    For example, an offset of `2` would result in a horizontal line\n    being drawn after the second row of the matrix. Accepts either an\n    integer for a single line, or an array of integers\n    for multiple lines. Like for a single number, negative numbers start from the end.\n  - `vline`: The offsets at which vertical lines should be drawn.\n    For example, an offset of `2` would result in a vertical line being\n    drawn after the second column of the matrix. Accepts either an\n    integer for a single line, or an array of integers\n    for multiple lines. Like for a single number, negative numbers start from the end.\n  - `stroke`: How to [stroke]($stroke) the line. If set to `{auto}`,\n    takes on a thickness of 0.05em and square line caps.\n\n"
zh = "在矩阵中绘制增广线。\n\n- `{none}`: 不绘制线。\n- 单个数字: 在指定的列号之后绘制垂直增广线。负数从末尾开始。\n- 「字典」（[dictionary](#x-term-dictionary)）: 使用字典，可以同时绘制水平和垂直的增广线。此外，还可以设置线的样式。字典可以包含以下键:\n  - `hline`: 水平线应该绘制的偏移量。例如，偏移量为 `2` 将导致在矩阵的第二行之后绘制一条水平线。接受单个整数或整数数组。与单个数字一样，负数从末尾开始。\n  - `vline`: 垂直线应该绘制的偏移量。例如，偏移量为 `2` 将导致在矩阵的第二列之后绘制一条垂直线。接受单个整数或整数数组。与单个数字一样，负数从末尾开始。\n  - `stroke`: 如何 [stroke]($stroke) 线。如果设置为 `{auto}`，则采用 0.05em 的厚度并使用方形线帽。\n\n"

[reference.math.mat.mat.column-gap.details]
en = "The gap between columns.\n\n"
zh = "列之间的间距。\n\n"

[reference.math.mat.mat.delim.details]
en = "The delimiter to use.\n\nCan be a single character specifying the left delimiter, in which case\nthe right delimiter is inferred. Otherwise, can be an array containing a\nleft and a right delimiter.\n\n"
zh = "要使用的「分隔符」（[delimiter](#x-term-delimiter)）。\n\n可以是一个指定「左分隔符」（#x-term-delimiter）的单个字符，在这种情况下，右分隔符会被推断出来。否则，可以是一个包含左和右分隔符的数组。\n\n"

[reference.math.mat.mat.details]
en = "A matrix.\n\nThe elements of a row should be separated by commas, while the rows\nthemselves should be separated by semicolons. The semicolon syntax merges\npreceding arguments separated by commas into an array. You can also use this\nspecial syntax of math function calls to define custom functions that take\n2D data.\n\nContent in cells can be aligned with the [`align`]($math.mat.align)\nparameter, or content in cells that are in the same row can be aligned with\nthe `&` symbol.\n\n# Example\n```example\n$ mat(\n  1, 2, ..., 10;\n  2, 2, ..., 10;\n  dots.v, dots.v, dots.down, dots.v;\n  10, 10, ..., 10;\n) $\n```"
zh = "一个矩阵。\n\n行中的元素应该用逗号分隔，而行本身应该用分号分隔。分号语法将逗号分隔的先前「参数」（[argument](#x-term-argument)）合并为一个数组。你还可以使用这种特殊的数学函数调用语法来定义自定义函数，这些函数接受二维数据。\n\n单元格中的内容可以使用 [`align`]($math.mat.align) 「参数」（[parameter](#x-term-parameter)）进行对齐，或者同一行中的单元格内容可以使用 `&` 符号进行对齐。\n\n# 示例\n```example\n$ mat(\n  1, 2, ..., 10;\n  2, 2, ..., 10;\n  dots.v, dots.v, dots.down, dots.v;\n  10, 10, ..., 10;\n) $\n```"

[reference.math.mat.mat.gap.details]
en = "The gap between rows and columns.\n\nThis is a shorthand to set `row-gap` and `column-gap` to the same value.\n\n"
zh = "行和列之间的间距。\n\n这是一个简写，用于将 `row-gap` 和 `column-gap` 设置为相同的值。\n\n"

[reference.math.mat.mat.oneliner]
en = "A matrix."
zh = "一个矩阵。"

[reference.math.mat.mat.row-gap.details]
en = "The gap between rows.\n\n"
zh = "行之间的间距。\n\n"

[reference.math.mat.mat.rows.details]
en = "An array of arrays with the rows of the matrix.\n\n"
zh = "一个包含矩阵行的数组。\n\n"

[reference.math.mat.mat.title]
en = "Matrix"
zh = "矩阵"

[reference.math.mat.oneliner]
en = "A matrix."
zh = "一个矩阵。"

[reference.math.mat.title]
en = "Matrix"
zh = "矩阵"

[reference.math.math.details]
en = "{{typst-docs/reference.math.math.details.toml}}"

[reference.math.math.title]
en = "Math"
zh = "数学"

[reference.math.op.description]
en = "Documentation for the `op` function."
zh = "`op` 函数的文档。"

[reference.math.op.oneliner]
en = "A text operator in an equation."
zh = "一个方程中的文本操作符。"

[reference.math.op.op.details]
en = "A text operator in an equation.\n\n# Example\n```example\n$ tan x = (sin x)/(cos x) $\n$ op(\"custom\",\n     limits: #true)_(n->oo) n $\n```\n\n# Predefined Operators { #predefined }\nTypst predefines the operators `arccos`, `arcsin`, `arctan`, `arg`, `cos`,\n`cosh`, `cot`, `coth`, `csc`, `csch`, `ctg`, `deg`, `det`, `dim`, `exp`,\n`gcd`, `lcm`, `hom`, `id`, `im`, `inf`, `ker`, `lg`, `lim`, `liminf`,\n`limsup`, `ln`, `log`, `max`, `min`, `mod`, `Pr`, `sec`, `sech`, `sin`,\n`sinc`, `sinh`, `sup`, `tan`, `tanh`, `tg` and `tr`."
zh = "一个方程中的文本操作符。\n\n# 示例\n```example\n$ tan x = (sin x)/(cos x) $\n$ op(\"custom\",\n     limits: #true)_(n->oo) n $\n```\n\n# 预定义操作符 { #predefined }\nTypst 预定义了操作符 `arccos`, `arcsin`, `arctan`, `arg`, `cos`,\n`cosh`, `cot`, `coth`, `csc`, `csch`, `ctg`, `deg`, `det`, `dim`, `exp`,\n`gcd`, `lcm`, `hom`, `id`, `im`, `inf`, `ker`, `lg`, `lim`, `liminf`,\n`limsup`, `ln`, `log`, `max`, `min`, `mod`, `Pr`, `sec`, `sech`, `sin`,\n`sinc`, `sinh`, `sup`, `tan`, `tanh`, `tg` 和 `tr`。"

[reference.math.op.op.limits.details]
en = "Whether the operator should show attachments as limits in display mode."
zh = "是否在显示模式下显示附件作为限制。"

[reference.math.op.op.oneliner]
en = "A text operator in an equation."
zh = "一个方程中的文本操作符。"

[reference.math.op.op.text.details]
en = "The operator's text."
zh = "操作符的文本。"

[reference.math.op.op.title]
en = "Text Operator"
zh = "文本操作符"

[reference.math.op.title]
en = "Text Operator"
zh = "文本操作符"

[reference.math.primes.description]
en = "Documentation for the `primes` function."
zh = "`primes` 函数的文档。"

[reference.math.primes.oneliner]
en = "Grouped primes."
zh = "分组质数。"

[reference.math.primes.primes.count.details]
en = "The number of grouped primes."
zh = "分组质数的数量。"

[reference.math.primes.primes.details]
en = "Grouped primes.\n\n```example\n$ a'''_b = a^'''_b $\n```\n\n# Syntax\nThis function has dedicated syntax: use apostrophes instead of primes. They\nwill automatically attach to the previous element, moving superscripts to\nthe next level."
zh = "分组质数。\n\n```example\n$ a'''_b = a^'''_b $\n```\n\n# 语法\n这个函数有专门的语法: 使用撇号而不是质数。它们会自动附加到前一个元素上，将上标移动到下一个级别。"

[reference.math.primes.primes.oneliner]
en = "Grouped primes."
zh = "分组质数。"

[reference.math.primes.primes.title]
en = "Primes"
zh = "质数"

[reference.math.primes.title]
en = "Primes"
zh = "质数"

[reference.math.roots.description]
en = "Documentation for the roots functions."
zh = "`roots` 函数的文档。"

[reference.math.roots.oneliner]
en = "Square and non-square roots."
zh = "平方和非平方根。"

[reference.math.roots.roots.details]
en = "Square and non-square roots.\n\n# Example\n```example\n$ sqrt(3 - 2 sqrt(2)) = sqrt(2) - 1 $\n$ root(3, x) $\n```\n"
zh = "平方和非平方根。\n\n# 示例\n```example\n$ sqrt(3 - 2 sqrt(2)) = sqrt(2) - 1 $\n$ root(3, x) $\n```\n"

[reference.math.roots.roots.root.details]
en = "A general root.\n\n"
zh = "一个一般的根。\n\n"

[reference.math.roots.roots.root.index.details]
en = "Which root of the radicand to take."
zh = "要取哪个根。"

[reference.math.roots.roots.root.oneliner]
en = "A general root."
zh = "一个一般的根。"

[reference.math.roots.roots.root.radicand.details]
en = "The expression to take the root of."
zh = "要取根的表达式。"

[reference.math.roots.roots.root.title]
en = "Root"
zh = "根"

[reference.math.roots.roots.sqrt.details]
en = "A square root.\n\n"
zh = "一个平方根。\n\n"

[reference.math.roots.roots.sqrt.oneliner]
en = "A square root."
zh = "一个平方根。"

[reference.math.roots.roots.sqrt.radicand.details]
en = "The expression to take the square root of."
zh = "要取平方根的表达式。"

[reference.math.roots.roots.sqrt.title]
en = "Square Root"
zh = "平方根"

[reference.math.roots.roots.title]
en = "Roots"
zh = "根"

[reference.math.roots.title]
en = "Roots"
zh = "根"

[reference.math.sizes.description]
en = "Documentation for the sizes functions."
zh = "`sizes` 函数的文档。"

[reference.math.sizes.oneliner]
en = "Forced size styles for expressions within formulas."
zh = "强制大小样式用于公式中的表达式。"

[reference.math.sizes.sizes.details]
en = "Forced size styles for expressions within formulas.\n\nThese functions allow manual configuration of the size of equation elements\nto make them look as in a display/inline equation or as if used in a root or\nsub/superscripts.\n"
zh = "强制大小样式用于公式中的表达式。\n\n这些函数允许手动配置方程元素的大小，以使其看起来像一个显示/内联方程，或者像一个根或子/上标。\n"

[reference.math.sizes.sizes.display.body.details]
en = "The content to size."
zh = "要调整大小的内容。"

[reference.math.sizes.sizes.display.cramped.details]
en = "Whether to impose a height restriction for exponents, like regular sub-\nand superscripts do."
zh = "是否对指数施加高度限制，就像常规的子/上标一样。"

[reference.math.sizes.sizes.display.details]
en = "Forced display style in math.\n\nThis is the normal size for block equations.\n\n"
zh = "强制显示样式在数学中。\n\n这是块方程的正常大小。\n\n"

[reference.math.sizes.sizes.display.oneliner]
en = "Forced display style in math."
zh = "强制显示样式在数学中。"

[reference.math.sizes.sizes.display.title]
en = "Display Size"
zh = "显示大小"

[reference.math.sizes.sizes.inline.body.details]
en = "The content to size."
zh = "要调整大小的内容。"

[reference.math.sizes.sizes.inline.cramped.details]
en = "Whether to impose a height restriction for exponents, like regular sub-\nand superscripts do."
zh = "是否对指数施加高度限制，就像常规的子/上标一样。"

[reference.math.sizes.sizes.inline.details]
en = "Forced inline (text) style in math.\n\nThis is the normal size for inline equations.\n\n"
zh = "强制内联（文本）样式在数学中。\n\n这是内联方程的正常大小。\n\n"

[reference.math.sizes.sizes.inline.oneliner]
en = "Forced inline (text) style in math."
zh = "强制内联（文本）样式在数学中。"

[reference.math.sizes.sizes.inline.title]
en = "Inline Size"
zh = "内联大小"

[reference.math.sizes.sizes.script.body.details]
en = "The content to size."
zh = "要调整大小的内容。"

[reference.math.sizes.sizes.script.cramped.details]
en = "Whether to impose a height restriction for exponents, like regular sub-\nand superscripts do."
zh = "是否对指数施加高度限制，就像常规的子/上标一样。"

[reference.math.sizes.sizes.script.details]
en = "Forced script style in math.\n\nThis is the smaller size used in powers or sub- or superscripts.\n\n"
zh = "强制脚本样式在数学中。\n\n这是在幂或子/上标中使用的小尺寸。\n\n"

[reference.math.sizes.sizes.script.oneliner]
en = "Forced script style in math."
zh = "强制脚本样式在数学中。"

[reference.math.sizes.sizes.script.title]
en = "Script Size"
zh = "脚本大小"

[reference.math.sizes.sizes.sscript.body.details]
en = "The content to size."
zh = "要调整大小的内容。"

[reference.math.sizes.sizes.sscript.cramped.details]
en = "Whether to impose a height restriction for exponents, like regular sub-\nand superscripts do."
zh = "是否对指数施加高度限制，就像常规的子/上标一样。"

[reference.math.sizes.sizes.sscript.details]
en = "Forced second script style in math.\n\nThis is the smallest size, used in second-level sub- and superscripts\n(script of the script).\n\n"
zh = "强制第二脚本样式在数学中。\n\n这是最小的尺寸，用于第二级子/上标（脚本的脚本）。\n\n"

[reference.math.sizes.sizes.sscript.oneliner]
en = "Forced second script style in math."
zh = "强制第二脚本样式在数学中。"

[reference.math.sizes.sizes.sscript.title]
en = "Script-Script Size"
zh = "脚本-脚本大小"

[reference.math.sizes.sizes.title]
en = "Sizes"
zh = "大小"

[reference.math.sizes.title]
en = "Sizes"
zh = "大小"

[reference.math.stretch.description]
en = "Documentation for the `stretch` function."
zh = "`stretch` 函数的文档。"

[reference.math.stretch.oneliner]
en = "Stretches a glyph."
zh = "拉伸一个字形。"

[reference.math.stretch.stretch.body.details]
en = "The glyph to stretch."
zh = "要拉伸的字形。"

[reference.math.stretch.stretch.details]
en = "Stretches a glyph.\n\nThis function can also be used to automatically stretch the base of an\nattachment, so that it fits the top and bottom attachments.\n\nNote that only some glyphs can be stretched, and which ones can depend on\nthe math font being used. However, most math fonts are the same in this\nregard.\n\n```example\n$ H stretch(=)^\"define\" U + p V $\n$ f : X stretch(->>, size: #150%)_\"surjective\" Y $\n$ x stretch(harpoons.ltrb, size: #3em) y\n    stretch(\\[, size: #150%) z $\n```"
zh = "拉伸一个字形。\n\n这个函数还可以用于自动拉伸附件的基础，使其适合顶部和底部的附件。\n\n注意，只有一些字形可以拉伸，并且哪些字形可以拉伸取决于使用的数学字体。然而，大多数数学字体在这方面是相同的。\n\n```example\n$ H stretch(=)^\"define\" U + p V $\n$ f : X stretch(->>, size: #150%)_\"surjective\" Y $\n$ x stretch(harpoons.ltrb, size: #3em) y\n    stretch(\\[, size: #150%) z $\n```"

[reference.math.stretch.stretch.oneliner]
en = "Stretches a glyph."
zh = "拉伸一个字形。"

[reference.math.stretch.stretch.size.details]
en = "The size to stretch to, relative to the maximum size of the glyph and\nits attachments."
zh = "要拉伸到的尺寸，相对于字形和附件的最大尺寸。"

[reference.math.stretch.stretch.title]
en = "Stretch"
zh = "拉伸"

[reference.math.stretch.title]
en = "Stretch"
zh = "拉伸"

[reference.math.styles.description]
en = "Documentation for the styles functions."
zh = "`styles` 函数的文档。"

[reference.math.styles.oneliner]
en = "Alternate letterforms within formulas."
zh = "公式中的替代字母形式。"

[reference.math.styles.styles.bold.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.styles.styles.bold.details]
en = "Bold font style in math.\n\n"
zh = "加粗数学环境中的字体样式。\n\n"

[reference.math.styles.styles.bold.oneliner]
en = "Bold font style in math."
zh = "加粗数学环境中的字体样式。"

[reference.math.styles.styles.bold.title]
en = "Bold"
zh = "加粗"

[reference.math.styles.styles.details]
en = "Alternate letterforms within formulas.\n\nThese functions are distinct from the [`text`] function because math fonts\ncontain multiple variants of each letter.\n"
zh = "公式中的替代字母形式。\n\n这些函数与 [`text`] 函数不同，因为数学字体包含每个字母的多个变体。\n"

[reference.math.styles.styles.italic.body.details]
en = "The content to style."
zh = "要添加样式的内容。"

[reference.math.styles.styles.italic.details]
en = "Italic font style in math.\n\nFor roman letters and greek lowercase letters, this is already the default."
zh = "斜体数学环境中的字体样式。\n\n对于罗马字母和小写希腊字母，这已经是默认的样式。"

[reference.math.styles.styles.italic.oneliner]
en = "Italic font style in math."
zh = "斜体数学环境中的字体样式。"

[reference.math.styles.styles.italic.title]
en = "Italic"
zh = "倾斜"

[reference.math.styles.styles.title]
en = "Styles"
zh = "样式"

[reference.math.styles.styles.upright.body.details]
en = "The content to style."
zh = "要添加样式的内容。"

[reference.math.styles.styles.upright.details]
en = "Upright (non-italic) font style in math.\n\n"
zh = "直立（非斜体）数学环境中的字体样式。\n\n"

[reference.math.styles.styles.upright.oneliner]
en = "Upright (non-italic) font style in math."
zh = "直立（非斜体）数学环境中的字体样式。"

[reference.math.styles.styles.upright.title]
en = "Upright"
zh = "直立"

[reference.math.styles.title]
en = "Styles"
zh = "样式"

[reference.math.title]
en = "Math"
zh = "数学"

[reference.math.underover.description]
en = "Documentation for the underover functions."
zh = "`underover` 函数的文档。"

[reference.math.underover.oneliner]
en = "Delimiters above or below parts of an equation."
zh = "方程部分上方或下方的「分隔符」（[delimiter](#x-term-delimiter)）。"

[reference.math.underover.title]
en = "Under/Over"
zh = "下/上"

[reference.math.underover.underover.details]
en = "Delimiters above or below parts of an equation.\n\nThe braces and brackets further allow you to add an optional annotation\nbelow or above themselves.\n"
zh = "方程部分上方或下方的「分隔符」（[delimiter](#x-term-delimiter)）。\n\n括号和方括号进一步允许您添加一个可选的注释，位于它们下方或上方。\n"

[reference.math.underover.underover.overbrace.annotation.details]
en = "The optional content above the brace."
zh = "括号上方可选的内容。"

[reference.math.underover.underover.overbrace.body.details]
en = "The content below the brace."
zh = "括号下方可选的内容。"

[reference.math.underover.underover.overbrace.details]
en = "A horizontal brace over content, with an optional annotation above.\n\n"
zh = "一个水平括号覆盖内容，上方可选注释。\n\n"

[reference.math.underover.underover.overbrace.oneliner]
en = "A horizontal brace over content, with an optional annotation above."
zh = "一个水平括号覆盖内容，上方可选注释。"

[reference.math.underover.underover.overbrace.title]
en = "Overbrace"
zh = "上括号"

[reference.math.underover.underover.overbracket.annotation.details]
en = "The optional content above the bracket."
zh = "括号上方可选的内容。"

[reference.math.underover.underover.overbracket.body.details]
en = "The content below the bracket."
zh = "括号下方可选的内容。"

[reference.math.underover.underover.overbracket.details]
en = "A horizontal bracket over content, with an optional annotation above.\n\n"
zh = "一个水平括号覆盖内容，上方可选注释。\n\n"

[reference.math.underover.underover.overbracket.oneliner]
en = "A horizontal bracket over content, with an optional annotation above."
zh = "一个水平括号覆盖内容，上方可选注释。"

[reference.math.underover.underover.overbracket.title]
en = "Overbracket"
zh = "上括号"

[reference.math.underover.underover.overline.body.details]
en = "The content below the line."
zh = "线下方可选的内容。"

[reference.math.underover.underover.overline.details]
en = "A horizontal line over content.\n\n"
zh = "一个水平线覆盖内容。\n\n"

[reference.math.underover.underover.overline.oneliner]
en = "A horizontal line over content."
zh = "一个水平线覆盖内容。"

[reference.math.underover.underover.overline.title]
en = "Overline"
zh = "上划线"

[reference.math.underover.underover.overparen.annotation.details]
en = "The optional content above the parenthesis."
zh = "括号上方可选的内容。"

[reference.math.underover.underover.overparen.body.details]
en = "The content below the parenthesis."
zh = "括号下方可选的内容。"

[reference.math.underover.underover.overparen.details]
en = "A horizontal parenthesis over content, with an optional annotation above.\n\n"
zh = "一个水平括号覆盖内容，上方可选注释。\n\n"

[reference.math.underover.underover.overparen.oneliner]
en = "A horizontal parenthesis over content, with an optional annotation above."
zh = "一个水平括号覆盖内容，上方可选注释。"

[reference.math.underover.underover.overparen.title]
en = "Overparen"
zh = "上括号"

[reference.math.underover.underover.overshell.annotation.details]
en = "The optional content above the tortoise shell bracket."
zh = "乌龟壳括号上方可选的内容。"

[reference.math.underover.underover.overshell.body.details]
en = "The content below the tortoise shell bracket."
zh = "乌龟壳括号下方可选的内容。"

[reference.math.underover.underover.overshell.details]
en = "A horizontal tortoise shell bracket over content, with an optional\nannotation above.\n\n"
zh = "一个水平乌龟壳括号覆盖内容，上方可选注释。\n\n"

[reference.math.underover.underover.overshell.oneliner]
en = "A horizontal tortoise shell bracket over content, with an optional"
zh = "一个水平乌龟壳括号覆盖内容，上方可选"

[reference.math.underover.underover.overshell.title]
en = "Overshell"
zh = "上乌龟壳"

[reference.math.underover.underover.title]
en = "Under/Over"
zh = "下/上"

[reference.math.underover.underover.underbrace.annotation.details]
en = "The optional content below the brace."
zh = "括号下方可选的内容。"

[reference.math.underover.underover.underbrace.body.details]
en = "The content above the brace."
zh = "括号上方可选的内容。"

[reference.math.underover.underover.underbrace.details]
en = "A horizontal brace under content, with an optional annotation below.\n\n"
zh = "一个水平括号覆盖内容，下方可选注释。\n\n"

[reference.math.underover.underover.underbrace.oneliner]
en = "A horizontal brace under content, with an optional annotation below."
zh = "一个水平括号覆盖内容，下方可选注释。"

[reference.math.underover.underover.underbrace.title]
en = "Underbrace"
zh = "下括号"

[reference.math.underover.underover.underbracket.annotation.details]
en = "The optional content below the bracket."
zh = "括号下方可选的内容。"

[reference.math.underover.underover.underbracket.body.details]
en = "The content above the bracket."
zh = "括号上方的内容。"

[reference.math.underover.underover.underbracket.details]
en = "A horizontal bracket under content, with an optional annotation below.\n\n"
zh = "一个水平括号覆盖内容，下方可选注释。\n\n"

[reference.math.underover.underover.underbracket.oneliner]
en = "A horizontal bracket under content, with an optional annotation below."
zh = "一个水平括号覆盖内容，下方可选注释。"

[reference.math.underover.underover.underbracket.title]
en = "Underbracket"
zh = "下括号"

[reference.math.underover.underover.underline.body.details]
en = "The content above the line."
zh = "线上方可选的内容。"

[reference.math.underover.underover.underline.details]
en = "A horizontal line under content.\n\n"
zh = "一个水平线覆盖内容。\n\n"

[reference.math.underover.underover.underline.oneliner]
en = "A horizontal line under content."
zh = "一个水平线覆盖内容。"

[reference.math.underover.underover.underline.title]
en = "Underline"
zh = "下划线"

[reference.math.underover.underover.underparen.annotation.details]
en = "The optional content below the parenthesis."
zh = "括号下方可选的内容。"

[reference.math.underover.underover.underparen.body.details]
en = "The content above the parenthesis."
zh = "括号上方可选的内容。"

[reference.math.underover.underover.underparen.details]
en = "A horizontal parenthesis under content, with an optional annotation below.\n\n"
zh = "一个水平括号覆盖内容，下方可选注释。\n\n"

[reference.math.underover.underover.underparen.oneliner]
en = "A horizontal parenthesis under content, with an optional annotation below."
zh = "一个水平括号覆盖内容，下方可选注释。"

[reference.math.underover.underover.underparen.title]
en = "Underparen"
zh = "下括号"

[reference.math.underover.underover.undershell.annotation.details]
en = "The optional content below the tortoise shell bracket."
zh = "乌龟壳括号下方可选的内容。"

[reference.math.underover.underover.undershell.body.details]
en = "The content above the tortoise shell bracket."
zh = "乌龟壳括号上方可选的内容。"

[reference.math.underover.underover.undershell.details]
en = "A horizontal tortoise shell bracket under content, with an optional\nannotation below.\n\n"
zh = "一个水平乌龟壳括号覆盖内容，下方可选注释。\n\n"

[reference.math.underover.underover.undershell.oneliner]
en = "A horizontal tortoise shell bracket under content, with an optional"
zh = "一个水平乌龟壳括号覆盖内容，下方可选"

[reference.math.underover.underover.undershell.title]
en = "Undershell"
zh = "下乌龟壳"

[reference.math.variants.description]
en = "Documentation for the variants functions."
zh = "`variants` 函数的文档。"

[reference.math.variants.oneliner]
en = "Alternate typefaces within formulas."
zh = "公式中的替代字体。"

[reference.math.variants.title]
en = "Variants"
zh = "变体"

[reference.math.variants.variants.bb.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.variants.variants.bb.details]
en = "Blackboard bold (double-struck) font style in math.\n\nFor uppercase latin letters, blackboard bold is additionally available\nthrough [symbols]($category/symbols/sym) of the form `NN` and `RR`.\n\n"
zh = "黑板粗体（双划线）数学环境中的字体样式。\n\n对于大写字母，黑板粗体还可以通过 [符号]($category/symbols/sym) 的形式 `NN` 和 `RR` 获得。\n\n"

[reference.math.variants.variants.bb.oneliner]
en = "Blackboard bold (double-struck) font style in math."
zh = "黑板粗体（双划线）数学环境中的字体样式。"

[reference.math.variants.variants.bb.title]
en = "Blackboard Bold"
zh = "黑板粗体"

[reference.math.variants.variants.cal.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.variants.variants.cal.details]
en = "Calligraphic font style in math.\n\n"
zh = "手写体数学环境中的字体样式。\n\n"

[reference.math.variants.variants.cal.oneliner]
en = "Calligraphic font style in math."
zh = "手写体数学环境中的字体样式。"

[reference.math.variants.variants.cal.title]
en = "Calligraphic"
zh = "手写体"

[reference.math.variants.variants.details]
en = "Alternate typefaces within formulas.\n\nThese functions are distinct from the [`text`] function because math fonts\ncontain multiple variants of each letter.\n"
zh = "公式中的替代字体。\n\n这些函数与 [`text`] 函数不同，因为数学字体包含每个字母的多个变体。\n"

[reference.math.variants.variants.frak.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.variants.variants.frak.details]
en = "Fraktur font style in math.\n\n"
zh = "哥特体数学环境中的字体样式。\n\n"

[reference.math.variants.variants.frak.oneliner]
en = "Fraktur font style in math."
zh = "哥特体数学环境中的字体样式。"

[reference.math.variants.variants.frak.title]
en = "Fraktur"
zh = "哥特体"

[reference.math.variants.variants.mono.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.variants.variants.mono.details]
en = "Monospace font style in math.\n\n"
zh = "等宽字体数学环境中的字体样式。\n\n"

[reference.math.variants.variants.mono.oneliner]
en = "Monospace font style in math."
zh = "等宽字体数学环境中的字体样式。"

[reference.math.variants.variants.mono.title]
en = "Monospace"
zh = "等宽字体"

[reference.math.variants.variants.sans.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.variants.variants.sans.details]
en = "Sans-serif font style in math.\n\n"
zh = "无衬线字体数学环境中的字体样式。\n\n"

[reference.math.variants.variants.sans.oneliner]
en = "Sans-serif font style in math."
zh = "无衬线字体数学环境中的字体样式。"

[reference.math.variants.variants.sans.title]
en = "Sans Serif"
zh = "无衬线字体"

[reference.math.variants.variants.serif.body.details]
en = "The content to style."
zh = "要样式的内容。"

[reference.math.variants.variants.serif.details]
en = "Serif (roman) font style in math.\n\nThis is already the default."
zh = "衬线字体（罗马体）数学环境中的字体样式。\n\n这已经是默认字体。"

[reference.math.variants.variants.serif.oneliner]
en = "Serif (roman) font style in math."
zh = "衬线字体（罗马体）数学环境中的字体样式。"

[reference.math.variants.variants.serif.title]
en = "Serif"
zh = "衬线字体"

[reference.math.variants.variants.title]
en = "Variants"
zh = "变体"

[reference.math.vec.description]
en = "Documentation for the `vec` function."
zh = "`vec` 函数的文档。"

[reference.math.vec.oneliner]
en = "A column vector."
zh = "一个列向量。"

[reference.math.vec.title]
en = "Vector"
zh = "向量"

[reference.math.vec.vec.align.details]
en = "The horizontal alignment that each element should have.\n\n"
zh = "每个元素的水平对齐方式。\n\n"

[reference.math.vec.vec.children.details]
en = "The elements of the vector."
zh = "向量的元素。"

[reference.math.vec.vec.delim.details]
en = "The delimiter to use.\n\nCan be a single character specifying the left delimiter, in which case\nthe right delimiter is inferred. Otherwise, can be an array containing a\nleft and a right delimiter.\n\n"
zh = "使用的「分隔符」（[delimiter](#x-term-delimiter)）。\n\n可以是一个指定「左分隔符」（#x-term-delimiter）的单个字符，在这种情况下，右分隔符被推断。否则，可以是一个包含左和右分隔符的数组。\n\n"

[reference.math.vec.vec.details]
en = "A column vector.\n\nContent in the vector's elements can be aligned with the\n[`align`]($math.vec.align) parameter, or the `&` symbol.\n\n# Example\n```example\n$ vec(a, b, c) dot vec(1, 2, 3)\n    = a + 2b + 3c $\n```"
zh = "一个列向量。\n\n向量元素中的内容可以通过 [`align`]($math.vec.align) 参数或 `&` 符号进行水平对齐。\n\n# 示例\n```example\n$ vec(a, b, c) dot vec(1, 2, 3)\n    = a + 2b + 3c $\n```"

[reference.math.vec.vec.gap.details]
en = "The gap between elements.\n\n"
zh = "元素之间的间距。\n\n"

[reference.math.vec.vec.oneliner]
en = "A column vector."
zh = "一个列向量。"

[reference.math.vec.vec.title]
en = "Vector"
zh = "向量"

[reference.model.bibliography.bibliography.details]
en = "{{typst-docs/reference.model.bibliography.bibliography.details.toml}}"

[reference.model.bibliography.bibliography.full.details]
en = "Whether to include all works from the given bibliography files, even\nthose that weren't cited in the document.\n\nTo selectively add individual cited works without showing them, you can\nalso use the `cite` function with [`form`]($cite.form) set to `{none}`."
zh = "是否包含给定参考文献文件中的所有工作，即使这些工作在文档中未被引用。\n\n要选择性地添加单独的引用工作而不显示它们，您还可以使用 [`form`]($cite.form) 设置为 `{none}` 的 `cite` 函数。"

[reference.model.bibliography.bibliography.oneliner]
en = "A bibliography / reference listing."
zh = "参考文献 / 引用列表。"

[reference.model.bibliography.bibliography.sources.details]
en = "One or multiple paths to or raw bytes for Hayagriva `.yml` and/or\nBibLaTeX `.bib` files.\n\nThis can be a:\n- A path string to load a bibliography file from the given path. For\n  more details about paths, see the [Paths section]($syntax/#paths).\n- Raw bytes from which the bibliography should be decoded.\n- An array where each item is one the above."
zh = "一个或多个 Hayagriva `.yml` 和/或 BibLaTeX `.bib` 文件的路径或原始字节。\n\n这可以是：\n- 一个路径字符串，用于从给定路径加载参考文献文件。有关路径的更多详细信息，请参阅 [路径部分]($syntax/#paths)。\n- 原始字节，用于解码参考文献。\n- 一个数组，其中每个项目是上述之一。"

[reference.model.bibliography.bibliography.style.details]
en = "The bibliography style.\n\nThis can be:\n- A string with the name of one of the built-in styles (see below). Some\n  of the styles listed below appear twice, once with their full name and\n  once with a short alias.\n- A path string to a [CSL file](https://citationstyles.org/). For more\n  details about paths, see the [Paths section]($syntax/#paths).\n- Raw bytes from which a CSL style should be decoded."
zh = "参考文献样式。\n\n这可以是：\n- 一个包含内置样式名称的字符串（见下文）。一些列出的样式会出现两次，一次是全名，一次是缩写。\n- 一个路径字符串到 [CSL 文件](https://citationstyles.org/)。有关路径的更多详细信息，请参阅 [路径部分]($syntax/#paths)。\n- 原始字节，用于解码 CSL 样式。"

[reference.model.bibliography.bibliography.title]
en = "Bibliography"
zh = "参考文献"

[reference.model.bibliography.bibliography.title.details]
en = "The title of the bibliography.\n\n- When set to `{auto}`, an appropriate title for the\n  [text language]($text.lang) will be used. This is the default.\n- When set to `{none}`, the bibliography will not have a title.\n- A custom title can be set by passing content.\n\nThe bibliography's heading will not be numbered by default, but you can\nforce it to be with a show-set rule:\n`{show bibliography: set heading(numbering: \"1.\")}`"
zh = "参考文献的标题。\n\n- 当设置为 `{auto}` 时，将使用适合 [文本语言]($text.lang) 的适当标题。这是默认值。\n- 当设置为 `{none}` 时，参考文献将没有标题。\n- 可以通过传递内容设置自定义标题。\n\n参考文献的标题将默认不编号，但您可以使用 show-set 规则强制它编号：\n`{show bibliography: set heading(numbering: \"1.\")}`"

[reference.model.bibliography.description]
en = "Documentation for the `bibliography` function."
zh = "`bibliography` 函数的文档。"

[reference.model.bibliography.oneliner]
en = "A bibliography / reference listing."
zh = "参考文献 / 引用列表。"

[reference.model.bibliography.title]
en = "Bibliography"
zh = "参考文献"

[reference.model.cite.cite.details]
en = "{{typst-docs/reference.model.cite.cite.details.toml}}"

[reference.model.cite.cite.form.details]
en = "The kind of citation to produce. Different forms are useful in different\nscenarios: A normal citation is useful as a source at the end of a\nsentence, while a \"prose\" citation is more suitable for inclusion in the\nflow of text.\n\nIf set to `{none}`, the cited work is included in the bibliography, but\nnothing will be displayed.\n\n"
zh = "要产生的引用类型。不同形式在不同场景下有用：普通引用对于句子结尾的来源很有用，而 \"散文\" 引用更适合包含在文本流中。\n\n如果设置为 `{none}`，则引用的工作被包含在参考文献中，但不会显示任何内容。\n\n"

[reference.model.cite.cite.key.details]
en = "The citation key that identifies the entry in the bibliography that\nshall be cited, as a label.\n\n"
zh = "用于标识参考文献中要引用的条目，作为标签的引用键。\n\n"

[reference.model.cite.cite.oneliner]
en = "Cite a work from the bibliography."
zh = "从参考文献中引用工作。"

[reference.model.cite.cite.style.details]
en = "The citation style.\n\nThis can be:\n- `{auto}` to automatically use the\n  [bibliography's style]($bibliography.style) for citations.\n- A string with the name of one of the built-in styles (see below). Some\n  of the styles listed below appear twice, once with their full name and\n  once with a short alias.\n- A path string to a [CSL file](https://citationstyles.org/). For more\n  details about paths, see the [Paths section]($syntax/#paths).\n- Raw bytes from which a CSL style should be decoded."
zh = "引用样式。\n\n这可以是：\n- `{auto}` 自动使用 [参考文献样式]($bibliography.style) 进行引用。\n- 一个包含内置样式名称的字符串（见下文）。一些列出的样式会出现两次，一次是全名，一次是缩写。\n- 一个路径字符串到 [CSL 文件](https://citationstyles.org/)。有关路径的更多详细信息，请参阅 [路径部分]($syntax/#paths)。\n- 原始字节，用于解码 CSL 样式。"

[reference.model.cite.cite.supplement.details]
en = "A supplement for the citation such as page or chapter number.\n\nIn reference syntax, the supplement can be added in square brackets:\n\n"
zh = "引用补充，如页码或章节编号。\n\n在引用语法中，补充可以在方括号中添加：\n\n"

[reference.model.cite.cite.title]
en = "Cite"
zh = "引用"

[reference.model.cite.description]
en = "Documentation for the `cite` function."
zh = "`cite` 函数的文档。"

[reference.model.cite.oneliner]
en = "Cite a work from the bibliography."
zh = "从参考文献中引用工作。"

[reference.model.cite.title]
en = "Cite"
zh = "引用"

[reference.model.description]
en = "Documentation for functions related to Model in Typst."
zh = "Typst 中与 Model 相关的函数的文档。"

[reference.model.document.description]
en = "Documentation for the `document` function."
zh = "`document` 函数的文档。"

[reference.model.document.document.author.details]
en = "The document's authors."
zh = "文档的作者。"

[reference.model.document.document.date.details]
en = "The document's creation date.\n\nIf this is `{auto}` (default), Typst uses the current date and time.\nSetting it to `{none}` prevents Typst from embedding any creation date\ninto the PDF metadata.\n\nThe year component must be at least zero in order to be embedded into a\nPDF.\n\nIf you want to create byte-by-byte reproducible PDFs, set this to\nsomething other than `{auto}`."
zh = "文档的创建日期。\n\n如果设置为 `{auto}`（默认），Typst 使用当前日期和时间。设置为 `{none}` 会阻止 Typst 将任何创建日期嵌入到 PDF 元数据中。\n\n年份组件必须至少为零才能嵌入到 PDF 中。\n\n如果您想创建字节对字节的可重复 PDF，请将其设置为 `{auto}` 以外的值。"

[reference.model.document.document.description.details]
en = "The document's description."
zh = "文档的描述。"

[reference.model.document.document.details]
en = "The root element of a document and its metadata.\n\nAll documents are automatically wrapped in a `document` element. You cannot\ncreate a document element yourself. This function is only used with\n[set rules]($styling/#set-rules) to specify document metadata. Such a set\nrule must not occur inside of any layout container.\n\n```example\n#set document(title: [Hello])\n\nThis has no visible output, but\nembeds metadata into the PDF!\n```\n\nNote that metadata set with this function is not rendered within the\ndocument. Instead, it is embedded in the compiled PDF file."
zh = "文档的根元素及其元数据。\n\n所有文档都会自动包装在一个 `document` 元素中。您不能自己创建一个 `document` 元素。这个函数只与 [设置规则]($styling/#set-rules) 一起使用，用于指定文档元数据。这样的设置规则不能出现在任何布局容器中。\n\n```example\n#set document(title: [Hello])\n\nThis has no visible output, but\nembeds metadata into the PDF!\n```\n\n请注意，使用此函数设置的元数据不会在文档中渲染。相反，它被嵌入到编译后的 PDF 文件中。"

[reference.model.document.document.keywords.details]
en = "The document's keywords."
zh = "文档的关键词。"

[reference.model.document.document.oneliner]
en = "The root element of a document and its metadata."
zh = "文档的根元素及其元数据。"

[reference.model.document.document.title]
en = "Document"
zh = "文档"

[reference.model.document.document.title.details]
en = "The document's title. This is often rendered as the title of the\nPDF viewer window.\n\nWhile this can be arbitrary content, PDF viewers only support plain text\ntitles, so the conversion might be lossy."
zh = "文档的标题。这通常作为 PDF 查看器窗口的标题。\n\n虽然这可以是任意内容，但 PDF 查看器只支持纯文本标题，因此转换可能会有损失。"

[reference.model.document.oneliner]
en = "The root element of a document and its metadata."
zh = "文档的根元素及其元数据。"

[reference.model.document.title]
en = "Document"
zh = "文档"

[reference.model.emph.description]
en = "Documentation for the `emph` function."
zh = "`emph` 函数的文档。"

[reference.model.emph.emph.body.details]
en = "The content to emphasize."
zh = "要强调的内容。"

[reference.model.emph.emph.details]
en = "{{typst-docs/reference.model.emph.emph.details.toml}}"

[reference.model.emph.emph.oneliner]
en = "Emphasizes content by toggling italics."
zh = "通过切换斜体来强调内容。"

[reference.model.emph.emph.title]
en = "Emphasis"
zh = "强调"

[reference.model.emph.oneliner]
en = "Emphasizes content by toggling italics."
zh = "通过切换斜体来强调内容。"

[reference.model.emph.title]
en = "Emphasis"
zh = "强调"

[reference.model.enum.description]
en = "Documentation for the `enum` function."
zh = "`enum` 函数的文档。"

[reference.model.enum.enum.body-indent.details]
en = "The space between the numbering and the body of each item."
zh = "每个项目编号和内容之间的间距。"

[reference.model.enum.enum.children.details]
en = "The numbered list's items.\n\nWhen using the enum syntax, adjacent items are automatically collected\ninto enumerations, even through constructs like for loops.\n\n"
zh = "编号列表的项目。\n\n当使用枚举语法时，相邻的项目会自动收集到枚举中，即使通过 for 循环等构造也是如此。\n\n"

[reference.model.enum.enum.details]
en = "{{typst-docs/reference.model.enum.enum.details.toml}}"

[reference.model.enum.enum.full.details]
en = "Whether to display the full numbering, including the numbers of\nall parent enumerations.\n\n\n"
zh = "是否显示完整的编号，包括所有父枚举的编号。\n\n\n"

[reference.model.enum.enum.indent.details]
en = "The indentation of each item."
zh = "每个项目的缩进。"

[reference.model.enum.enum.item.body.details]
en = "The item's body."
zh = "项目的内容。"

[reference.model.enum.enum.item.details]
en = "An enumeration item."
zh = "一个枚举项。"

[reference.model.enum.enum.item.number.details]
en = "The item's number."
zh = "项编号。"

[reference.model.enum.enum.item.oneliner]
en = "An enumeration item."
zh = "一个枚举项。"

[reference.model.enum.enum.item.title]
en = "Numbered List Item"
zh = "编号列表项"

[reference.model.enum.enum.number-align.details]
en = "The alignment that enum numbers should have.\n\nBy default, this is set to `{end + top}`, which aligns enum numbers\ntowards end of the current text direction (in left-to-right script,\nfor example, this is the same as `{right}`) and at the top of the line.\nThe choice of `{end}` for horizontal alignment of enum numbers is\nusually preferred over `{start}`, as numbers then grow away from the\ntext instead of towards it, avoiding certain visual issues. This option\nlets you override this behaviour, however. (Also to note is that the\n[unordered list]($list) uses a different method for this, by giving the\n`marker` content an alignment directly.).\n\n"
zh = "枚举编号的对齐方式。\n\n默认情况下，这设置为 `{end + top}`，将枚举编号对齐到当前文本方向的末端（例如，在左到右脚本中，这等同于 `{right}`）和行顶端。选择 `{end}` 作为枚举编号的水平对齐通常优于 `{start}`，因为数字会远离文本而不是靠近它，避免某些视觉问题。这个选项允许您覆盖这种行为。（另外需要注意的是，[无序列表]($list) 使用不同的方法，通过直接给 `marker` 内容一个对齐方式。）\n\n"

[reference.model.enum.enum.numbering.details]
en = "How to number the enumeration. Accepts a\n[numbering pattern or function]($numbering).\n\nIf the numbering pattern contains multiple counting symbols, they apply\nto nested enums. If given a function, the function receives one argument\nif `full` is `{false}` and multiple arguments if `full` is `{true}`.\n\n"
zh = "如何编号枚举。接受一个 [编号模式或函数]($numbering)。\n\n如果编号模式包含多个计数符号，它们适用于嵌套的枚举。如果给定一个函数，当 `full` 为 `{false}` 时，函数接收一个参数；当 `full` 为 `{true}` 时，函数接收多个参数。\n\n"

[reference.model.enum.enum.oneliner]
en = "A numbered list."
zh = "一个编号列表。"

[reference.model.enum.enum.reversed.details]
en = "Whether to reverse the numbering for this enumeration.\n\n"
zh = "是否反转此枚举的编号。\n\n"

[reference.model.enum.enum.spacing.details]
en = "The spacing between the items of the enumeration.\n\nIf set to `{auto}`, uses paragraph [`leading`]($par.leading) for tight\nenumerations and paragraph [`spacing`]($par.spacing) for wide\n(non-tight) enumerations."
zh = "枚举项之间的间距。\n\n如果设置为 `{auto}`，则使用段落 [`leading`]($par.leading) 紧凑的枚举和段落 [`spacing`]($par.spacing) 宽的（非紧凑）枚举。"

[reference.model.enum.enum.start.details]
en = "Which number to start the enumeration with.\n\n"
zh = "从哪个数字开始编号枚举。\n\n"

[reference.model.enum.enum.tight.details]
en = "Defines the default [spacing]($enum.spacing) of the enumeration. If it\nis `{false}`, the items are spaced apart with\n[paragraph spacing]($par.spacing). If it is `{true}`, they use\n[paragraph leading]($par.leading) instead. This makes the list more\ncompact, which can look better if the items are short.\n\nIn markup mode, the value of this parameter is determined based on\nwhether items are separated with a blank line. If items directly follow\neach other, this is set to `{true}`; if items are separated by a blank\nline, this is set to `{false}`. The markup-defined tightness cannot be\noverridden with set rules.\n\n"
zh = "定义枚举的默认 [间距]($enum.spacing)。如果为 `{false}`，则项之间使用 [段落间距]($par.spacing)。如果为 `{true}`，则使用 [段落行距]($par.leading)。这使得列表更紧凑，如果项较短，看起来会更好。\n\n在标记模式下，此参数的值取决于项之间是否用空行分隔。如果项直接相邻，则设置为 `{true}`；如果项之间用空行分隔，则设置为 `{false}`。标记定义的紧凑性不能通过设置规则覆盖。\n\n"

[reference.model.enum.enum.title]
en = "Numbered List"
zh = "编号列表"

[reference.model.enum.oneliner]
en = "A numbered list."
zh = "一个编号列表。"

[reference.model.enum.title]
en = "Numbered List"
zh = "编号列表"

[reference.model.figure.description]
en = "Documentation for the `figure` function."
zh = "`figure` 函数的文档。"

[reference.model.figure.figure.body.details]
en = "The content of the figure. Often, an [image]."
zh = "图的内容。通常是一个 [图像]。"

[reference.model.figure.figure.caption.body.details]
en = "The caption's body.\n\nCan be used alongside `kind`, `supplement`, `counter`, `numbering`, and\n`location` to completely customize the caption.\n\n"
zh = "标题的内容。\n\n可以与 `kind`、`supplement`、`counter`、`numbering` 和 `location` 一起使用，完全自定义标题。\n\n"

[reference.model.figure.figure.caption.details]
en = "The caption of a figure. This element can be used in set and show rules to\ncustomize the appearance of captions for all figures or figures of a\nspecific kind.\n\nIn addition to its `pos` and `body`, the `caption` also provides the\nfigure's `kind`, `supplement`, `counter`, and `numbering` as fields. These\nparts can be used in [`where`]($function.where) selectors and show rules to\nbuild a completely custom caption.\n\n"
zh = "图的标题。这个元素可以在 set 和 show 规则中使用，以自定义所有图或特定类型的图的标题的外观。\n\n除了它的 `pos` 和 `body`，`caption` 还提供了图的 `kind`、`supplement`、`counter` 和 `numbering` 作为字段。这些部分可以在 [`where`]($function.where) 选择器和 show 规则中使用，以构建一个完全自定义的标题。\n\n"

[reference.model.figure.figure.caption.oneliner]
en = "The caption of a figure. This element can be used in set and show rules to"
zh = "图的标题。这个元素可以在 set 和 show 规则中使用，以自定义所有图或特定类型的图的标题的外观。"

[reference.model.figure.figure.caption.position.details]
en = "The caption's position in the figure. Either `{top}` or `{bottom}`.\n\n"
zh = "标题在图中的位置。`{top}` 或 `{bottom}`。\n\n"

[reference.model.figure.figure.caption.separator.details]
en = "The separator which will appear between the number and body.\n\nIf set to `{auto}`, the separator will be adapted to the current\n[language]($text.lang) and [region]($text.region).\n\n"
zh = "出现在编号和内容之间的分隔符。\n\n如果设置为 `{auto}`，则「分隔符」（[separator](#x-term-separator)）将适应当前的 [语言]($text.lang) 和 [区域]($text.region)。\n\n"

[reference.model.figure.figure.caption.title]
en = "Caption"
zh = "标题"

[reference.model.figure.figure.details]
en = "{{typst-docs/reference.model.figure.figure.details.toml}}"

[reference.model.figure.figure.gap.details]
en = "The vertical gap between the body and caption."
zh = "标题和内容之间的垂直间距。"

[reference.model.figure.figure.kind.details]
en = "{{typst-docs/reference.model.figure.figure.kind.details.toml}}"

[reference.model.figure.figure.numbering.details]
en = "How to number the figure. Accepts a\n[numbering pattern or function]($numbering)."
zh = "如何编号图。接受一个 [编号模式或函数]($numbering)。"

[reference.model.figure.figure.oneliner]
en = "A figure with an optional caption."
zh = "一个带有可选标题的图。"

[reference.model.figure.figure.outlined.details]
en = "Whether the figure should appear in an [`outline`] of figures."
zh = "图是否应该出现在图的 [`outline`] 中。"

[reference.model.figure.figure.placement.details]
en = "The figure's placement on the page.\n\n- `{none}`: The figure stays in-flow exactly where it was specified\n  like other content.\n- `{auto}`: The figure picks `{top}` or `{bottom}` depending on which\n  is closer.\n- `{top}`: The figure floats to the top of the page.\n- `{bottom}`: The figure floats to the bottom of the page.\n\nThe gap between the main flow content and the floating figure is\ncontrolled by the [`clearance`]($place.clearance) argument on the\n`place` function.\n\n"
zh = "图在页面上的放置位置。\n\n- `{none}`: 图保持其在流中的确切位置，与其他内容相同。\n- `{auto}`: 图根据哪个更靠近选择 `{top}` 或 `{bottom}`。\n- `{top}`: 图浮动到页面顶部。\n- `{bottom}`: 图浮动到页面底部。\n\n主流内容和浮动图之间的间距由 `place` 函数的 [`clearance`]($place.clearance) 参数控制。\n\n"

[reference.model.figure.figure.scope.details]
en = "Relative to which containing scope the figure is placed.\n\nSet this to `{\"parent\"}` to create a full-width figure in a two-column\ndocument.\n\nHas no effect if `placement` is `{none}`.\n\n"
zh = "相对于哪个包含范围放置图。\n\n设置为 `{\"parent\"}` 以在两列文档中创建全宽图。\n\n如果 `placement` 为 `{none}`，则没有效果。\n\n"

[reference.model.figure.figure.supplement.details]
en = "The figure's supplement.\n\nIf set to `{auto}`, the figure will try to automatically determine the\ncorrect supplement based on the `kind` and the active\n[text language]($text.lang). If you are using a custom figure type, you\nwill need to manually specify the supplement.\n\nIf a function is specified, it is passed the first descendant of the\nspecified `kind` (typically, the figure's body) and should return\ncontent.\n\n"
zh = "图的补充。\n\n如果设置为 `{auto}`，图将尝试根据 `kind` 和活动 [文本语言]($text.lang) 自动确定正确的补充。如果您使用自定义图类型，则需要手动指定补充。\n\n如果指定了一个函数，它将传递指定 `kind` 的第一个后代（通常是图的内容）并应返回内容。\n\n"

[reference.model.figure.figure.title]
en = "Figure"
zh = "图"

[reference.model.figure.oneliner]
en = "A figure with an optional caption."
zh = "一个带有可选标题的图。"

[reference.model.figure.title]
en = "Figure"
zh = "图"

[reference.model.footnote.description]
en = "Documentation for the `footnote` function."
zh = "`footnote` 函数的文档。"

[reference.model.footnote.footnote.body.details]
en = "The content to put into the footnote. Can also be the label of another\nfootnote this one should point to."
zh = "要放入脚注的内容。也可以是另一个脚注的标签，这个脚注应该指向它。"

[reference.model.footnote.footnote.details]
en = "{{typst-docs/reference.model.footnote.footnote.details.toml}}"

[reference.model.footnote.footnote.entry.clearance.details]
en = "The amount of clearance between the document body and the separator.\n\n"
zh = "文档主体和「分隔符」（[separator](#x-term-separator)）之间的间距。\n\n"

[reference.model.footnote.footnote.entry.details]
en = "An entry in a footnote list.\n\nThis function is not intended to be called directly. Instead, it is used in\nset and show rules to customize footnote listings.\n\n"
zh = "一个脚注列表中的条目。\n\n这个函数不是直接调用的。相反，它用于 set 和 show 规则来自定义脚注列表。\n\n"

[reference.model.footnote.footnote.entry.gap.details]
en = "The gap between footnote entries.\n\n"
zh = "脚注条目之间的间距。\n\n"

[reference.model.footnote.footnote.entry.indent.details]
en = "The indent of each footnote entry.\n\n"
zh = "每个脚注条目的缩进。\n\n"

[reference.model.footnote.footnote.entry.note.details]
en = "The footnote for this entry. Its location can be used to determine\nthe footnote counter state.\n\n"
zh = "这个条目的脚注。它的位置可以用来确定脚注计数器的状态。\n\n"

[reference.model.footnote.footnote.entry.oneliner]
en = "An entry in a footnote list."
zh = "一个脚注列表中的条目。"

[reference.model.footnote.footnote.entry.separator.details]
en = "The separator between the document body and the footnote listing.\n\n"
zh = "文档主体和脚注列表之间的「分隔符」（[separator](#x-term-separator)）。\n\n"

[reference.model.footnote.footnote.entry.title]
en = "Footnote Entry"
zh = "脚注条目"

[reference.model.footnote.footnote.numbering.details]
en = "How to number footnotes.\n\nBy default, the footnote numbering continues throughout your document.\nIf you prefer per-page footnote numbering, you can reset the footnote\n[counter] in the page [header]($page.header). In the future, there might\nbe a simpler way to achieve this.\n\n"
zh = "如何编号脚注。\n\n默认情况下，脚注编号在整个文档中继续。如果您更喜欢每页脚注编号，您可以在页 [头]($page.header) 中重置脚注 [计数器]。将来，可能会有更简单的方法来实现这一点。\n\n"

[reference.model.footnote.footnote.oneliner]
en = "A footnote."
zh = "一个脚注。"

[reference.model.footnote.footnote.title]
en = "Footnote"
zh = "脚注"

[reference.model.footnote.oneliner]
en = "A footnote."
zh = "一个脚注。"

[reference.model.footnote.title]
en = "Footnote"
zh = "脚注"

[reference.model.heading.description]
en = "Documentation for the `heading` function."
zh = "`heading` 函数的文档。"

[reference.model.heading.heading.body.details]
en = "The heading's title."
zh = "标题的内容。"

[reference.model.heading.heading.bookmarked.details]
en = "Whether the heading should appear as a bookmark in the exported PDF's\noutline. Doesn't affect other export formats, such as PNG.\n\nThe default value of `{auto}` indicates that the heading will only\nappear in the exported PDF's outline if its `outlined` property is set\nto `{true}`, that is, if it would also be listed in Typst's [outline].\nSetting this property to either `{true}` (bookmark) or `{false}` (don't\nbookmark) bypasses that behavior.\n\n"
zh = "标题是否应该出现在导出的 PDF 的 [大纲] 中。不影响其他导出格式，如 PNG。\n\n默认值 `{auto}` 表示标题只有在 `outlined` 属性设置为 `{true}` 时才会出现在导出的 PDF 的大纲中，即如果它也会出现在 Typst 的 [大纲] 中。将此属性设置为 `{true}`（书签）或 `{false}`（不书签）会绕过该行为。\n\n"

[reference.model.heading.heading.depth.details]
en = "The relative nesting depth of the heading, starting from one. This is\ncombined with `{offset}` to compute the actual `{level}`.\n\nThis is set by the heading syntax, such that `[== Heading]` creates a\nheading with logical depth of 2, but actual level `{offset + 2}`. If you\nconstruct a heading manually, you should typically prefer this over\nsetting the absolute level."
zh = "标题的相对嵌套深度，从一开始。这与 `{offset}` 结合使用来计算实际的 `{level}`。\n\n这是由标题语法设置的，因此 `[== 标题]` 创建一个逻辑深度为 2 的标题，但实际级别为 `{offset + 2}`。如果您手动构造标题，您应该通常更喜欢这个而不是设置绝对级别。"

[reference.model.heading.heading.details]
en = "{{typst-docs/reference.model.heading.heading.details.toml}}"

[reference.model.heading.heading.hanging-indent.details]
en = "The indent all but the first line of a heading should have.\n\nThe default value of `{auto}` indicates that the subsequent heading\nlines will be indented based on the width of the numbering.\n\n"
zh = "标题中除第一行外所有行应具有的缩进。\n\n默认值 `{auto}` 表示后续标题行将根据编号的宽度进行缩进。\n\n"

[reference.model.heading.heading.level.details]
en = "The absolute nesting depth of the heading, starting from one. If set\nto `{auto}`, it is computed from `{offset + depth}`.\n\nThis is primarily useful for usage in [show rules]($styling/#show-rules)\n(either with [`where`]($function.where) selectors or by accessing the\nlevel directly on a shown heading).\n\n"
zh = "标题的绝对嵌套深度，从一开始。如果设置为 `{auto}`，则从 `{offset + depth}` 计算。\n\n这在 [显示规则]($styling/#show-rules) 中主要用于使用 [`where`]($function.where) 选择器或直接访问显示标题的级别。\n\n"

[reference.model.heading.heading.numbering.details]
en = "How to number the heading. Accepts a\n[numbering pattern or function]($numbering).\n\n"
zh = "如何编号标题。接受一个 [编号模式或函数]($numbering)。\n\n"

[reference.model.heading.heading.offset.details]
en = "The starting offset of each heading's `{level}`, used to turn its\nrelative `{depth}` into its absolute `{level}`.\n\n"
zh = "每个标题的 `{level}` 的起始偏移量，用于将其相对的 `{depth}` 转换为其绝对的 `{level}`。\n\n"

[reference.model.heading.heading.oneliner]
en = "A section heading."
zh = "一个节标题。"

[reference.model.heading.heading.outlined.details]
en = "Whether the heading should appear in the [outline].\n\nNote that this property, if set to `{true}`, ensures the heading is also\nshown as a bookmark in the exported PDF's outline (when exporting to\nPDF). To change that behavior, use the `bookmarked` property.\n\n"
zh = "标题是否应该出现在 [大纲] 中。\n\n请注意，如果设置为 `{true}`，则确保标题也作为书签出现在导出的 PDF 大纲中（当导出为 PDF 时）。要改变该行为，请使用 `bookmarked` 属性。\n\n"

[reference.model.heading.heading.supplement.details]
en = "A supplement for the heading.\n\nFor references to headings, this is added before the referenced number.\n\nIf a function is specified, it is passed the referenced heading and\nshould return content.\n\n"
zh = "标题的补充。\n\n对于标题的引用，这会在引用编号之前添加。\n\n如果指定了一个函数，它将传递引用的标题并应返回内容。\n\n"

[reference.model.heading.heading.title]
en = "Heading"
zh = "标题"

[reference.model.heading.oneliner]
en = "A section heading."
zh = "一个节标题。"

[reference.model.heading.title]
en = "Heading"
zh = "标题"

[reference.model.link.description]
en = "Documentation for the `link` function."
zh = "`link` 函数的文档。"

[reference.model.link.link.body.details]
en = "The content that should become a link.\n\nIf `dest` is an URL string, the parameter can be omitted. In this case,\nthe URL will be shown as the link."
zh = "应该成为链接的内容。\n\n如果 `dest` 是一个 URL 字符串，则「参数」（[parameter](#x-term-parameter)）可以省略。在这种情况下，URL 将显示为链接。"

[reference.model.link.link.dest.details]
en = "{{typst-docs/reference.model.link.link.dest.details.toml}}"

[reference.model.link.link.details]
en = "{{typst-docs/reference.model.link.link.details.toml}}"

[reference.model.link.link.oneliner]
en = "Links to a URL or a location in the document."
zh = "链接到一个 URL 或文档中的一个位置。"

[reference.model.link.link.title]
en = "Link"
zh = "链接"

[reference.model.link.oneliner]
en = "Links to a URL or a location in the document."
zh = "链接到一个 URL 或文档中的一个位置。"

[reference.model.link.title]
en = "Link"
zh = "链接"

[reference.model.list.description]
en = "Documentation for the `list` function."
zh = "`list` 函数的文档。"

[reference.model.list.list.body-indent.details]
en = "The spacing between the marker and the body of each item."
zh = "每个项目中标记和内容之间的间距。"

[reference.model.list.list.children.details]
en = "The bullet list's children.\n\nWhen using the list syntax, adjacent items are automatically collected\ninto lists, even through constructs like for loops.\n\n"
zh = "无序列表的子项。\n\n当使用列表语法时，相邻的项目会自动收集到列表中，即使通过 for 循环等构造也是如此。\n\n"

[reference.model.list.list.details]
en = "{{typst-docs/reference.model.list.list.details.toml}}"

[reference.model.list.list.indent.details]
en = "The indent of each item."
zh = "每个项目的缩进。"

[reference.model.list.list.item.body.details]
en = "The item's body."
zh = "项目的正文。"

[reference.model.list.list.item.details]
en = "A bullet list item."
zh = "一个无序列表项。"

[reference.model.list.list.item.oneliner]
en = "A bullet list item."
zh = "一个无序列表项。"

[reference.model.list.list.item.title]
en = "Bullet List Item"
zh = "无序列表项"

[reference.model.list.list.marker.details]
en = "The marker which introduces each item.\n\nInstead of plain content, you can also pass an array with multiple\nmarkers that should be used for nested lists. If the list nesting depth\nexceeds the number of markers, the markers are cycled. For total\ncontrol, you may pass a function that maps the list's nesting depth\n(starting from `{0}`) to a desired marker.\n\n"
zh = "每个项目中引入的标记。\n\n除了普通内容外，您还可以传递一个包含多个标记的数组，这些标记应该用于嵌套列表。如果列表嵌套深度超过标记的数量，则标记会循环。为了完全控制，您可以传递一个函数，将列表的嵌套深度（从 `{0}` 开始）映射到所需的标记。\n\n"

[reference.model.list.list.oneliner]
en = "A bullet list."
zh = "一个无序列表。"

[reference.model.list.list.spacing.details]
en = "The spacing between the items of the list.\n\nIf set to `{auto}`, uses paragraph [`leading`]($par.leading) for tight\nlists and paragraph [`spacing`]($par.spacing) for wide (non-tight)\nlists."
zh = "列表中项目之间的间距。\n\n如果设置为 `{auto}`，则使用段落 [`leading`]($par.leading) 紧凑列表和段落 [`spacing`]($par.spacing) 宽（非紧凑）列表。"

[reference.model.list.list.tight.details]
en = "Defines the default [spacing]($list.spacing) of the list. If it is\n`{false}`, the items are spaced apart with\n[paragraph spacing]($par.spacing). If it is `{true}`, they use\n[paragraph leading]($par.leading) instead. This makes the list more\ncompact, which can look better if the items are short.\n\nIn markup mode, the value of this parameter is determined based on\nwhether items are separated with a blank line. If items directly follow\neach other, this is set to `{true}`; if items are separated by a blank\nline, this is set to `{false}`. The markup-defined tightness cannot be\noverridden with set rules.\n\n"
zh = "定义列表的默认 [间距]($list.spacing)。如果为 `{false}`，则项目之间使用 [段落间距]($par.spacing)。如果为 `{true}`，则使用 [段落行距]($par.leading)。这使列表更紧凑，如果项目较短，看起来会更好。\n\n在标记模式下，此参数的值基于项目是否用空行分隔。如果项目直接相邻，则设置为 `{true}`；如果项目用空行分隔，则设置为 `{false}`。标记定义的紧凑性不能通过 set 规则覆盖。\n\n"

[reference.model.list.list.title]
en = "Bullet List"
zh = "无序列表"

[reference.model.list.oneliner]
en = "A bullet list."
zh = "一个无序列表。"

[reference.model.list.title]
en = "Bullet List"
zh = "无序列表"

[reference.model.model.details]
en = "Document structuring.\n\nHere, you can find functions to structure your document and interact with that\nstructure. This includes section headings, figures, bibliography management,\ncross-referencing and more.\n"
zh = "文档结构。\n\n在这里，您可以找到用于结构化文档和与该结构交互的函数。这包括节标题、图表、参考文献管理、交叉引用等。\n"

[reference.model.model.title]
en = "Model"
zh = "模型"

[reference.model.numbering.description]
en = "Documentation for the `numbering` function."
zh = "`numbering` 函数的文档。"

[reference.model.numbering.numbering.details]
en = "{{typst-docs/reference.model.numbering.numbering.details.toml}}"

[reference.model.numbering.numbering.numbering.details]
en = "{{typst-docs/reference.model.numbering.numbering.numbering.details.toml}}"

[reference.model.numbering.numbering.numbers.details]
en = "The numbers to apply the numbering to. Must be positive.\n\nIf `numbering` is a pattern and more numbers than counting symbols are\ngiven, the last counting symbol with its prefix is repeated."
zh = "要应用编号的数字。必须为正数。\n\n如果 `numbering` 是一个模式，并且给出的数字比计数符号多，则最后一个计数符号及其前缀会被重复。"

[reference.model.numbering.numbering.oneliner]
en = "Applies a numbering to a sequence of numbers."
zh = "应用一个编号到一系列数字。"

[reference.model.numbering.numbering.title]
en = "Numbering"
zh = "编号"

[reference.model.numbering.oneliner]
en = "Applies a numbering to a sequence of numbers."
zh = "应用一个编号到一系列数字。"

[reference.model.numbering.title]
en = "Numbering"
zh = "编号"

[reference.model.outline.description]
en = "Documentation for the `outline` function."
zh = "`outline` 函数的文档。"

[reference.model.outline.oneliner]
en = "A table of contents, figures, or other elements."
zh = "一个目录、图表或其他元素。"

[reference.model.outline.outline.depth.details]
en = "The maximum level up to which elements are included in the outline. When\nthis argument is `{none}`, all elements are included.\n\n"
zh = "大纲中包含的元素的最大级别。当此参数为 `{none}` 时，所有元素都包含在内。\n\n"

[reference.model.outline.outline.details]
en = "{{typst-docs/reference.model.outline.outline.details.toml}}"

[reference.model.outline.outline.entry.body.details]
en = "The content which is displayed in place of the referred element at its\nentry in the outline. For a heading, this is its\n[`body`]($heading.body); for a figure a caption and for equations, it is\nempty."
zh = "在目录中显示的被引用元素的替代内容。对于标题，这是它的 [`body`]($heading.body)；对于图表，这是它的标题；对于方程式，它是空的。"

[reference.model.outline.outline.entry.body.oneliner]
en = "The content which is displayed in place of the referred element at its"
zh = "在目录中显示的被引用元素的替代内容。"

[reference.model.outline.outline.entry.body.title]
en = "Body"
zh = "正文"

[reference.model.outline.outline.entry.details]
en = "Represents an entry line in an outline.\n\nWith show-set and show rules on outline entries, you can richly customize\nthe outline's appearance. See the\n[section on styling the outline]($outline/#styling-the-outline) for details."
zh = "表示目录中的一个条目。\n\n通过在目录条目上使用 show-set 和 show 规则，您可以丰富地定制目录的外观。有关详细信息，请参阅 [关于样式化目录]($outline/#styling-the-outline) 部分。"

[reference.model.outline.outline.entry.element.details]
en = "The element this entry refers to. Its location will be available\nthrough the [`location`]($content.location) method on the content\nand can be [linked]($link) to."
zh = "此条目引用的元素。它的位置将通过内容上的 [`location`]($content.location) 方法获得，并且可以 [链接]($link) 到。"

[reference.model.outline.outline.entry.fill.details]
en = "Content to fill the space between the title and the page number. Can be\nset to `{none}` to disable filling.\n\nThe `fill` will be placed into a fractionally sized box that spans the\nspace between the entry's body and the page number. When using show\nrules to override outline entries, it is thus recommended to wrap the\nfill in a [`box`] with fractional width, i.e.\n`{box(width: 1fr, it.fill}`.\n\nWhen using [`repeat`], the [`gap`]($repeat.gap) property can be useful\nto tweak the visual weight of the fill.\n\n"
zh = "填充标题和页码之间空间的填充内容。可以设置为 `{none}` 以禁用填充。\n\n`fill` 将被放置在一个按比例缩放的框中，该框跨越条目正文和页码之间的空间。当使用 show 规则覆盖目录条目时，因此建议将 `fill` 包装在 [`box`] 中，其宽度为按比例缩放，即 `{box(width: 1fr, it.fill}`。\n\n当使用 [`repeat`] 时，[`gap`]($repeat.gap) 属性可以用于微调填充的视觉权重。\n\n"

[reference.model.outline.outline.entry.indented.details]
en = "A helper function for producing an indented entry layout: Lays out a\nprefix and the rest of the entry in an indent-aware way.\n\nIf the parent outline's [`indent`]($outline.indent) is `{auto}`, the\ninner content of all entries at level `N` is aligned with the prefix of\nall entries at level `N + 1`, leaving at least `gap` space between the\nprefix and inner parts. Furthermore, the `inner` contents of all entries\nat the same level are aligned.\n\nIf the outline's indent is a fixed value or a function, the prefixes are\nindented, but the inner contents are simply inset from the prefix by the\nspecified `gap`, rather than aligning outline-wide."
zh = "一个用于产生缩进条目布局的帮助函数：将前缀和其余条目以缩进感知的方式布局。\n\n如果父目录的 [`indent`]($outline.indent) 为 `{auto}`，则所有级别为 `N` 的条目的内部内容与所有级别为 `N + 1` 的条目的前缀对齐，在前后部分之间至少留出 `gap` 空间。此外，相同级别的条目的 `inner` 内容也对其进行对齐。\n\n如果目录的缩进是一个固定值或一个函数，则前缀被缩进，但内部内容只是从前缀按指定的 `gap` 内缩，而不是与目录对齐。"

[reference.model.outline.outline.entry.indented.gap.details]
en = "The gap between the prefix and the inner content."
zh = "前缀和内部内容之间的间距。"

[reference.model.outline.outline.entry.indented.inner.details]
en = "The formatted inner content of the entry.\n\nIn the default show rule, this is just `it.inner()`, but it can be\nfreely customized."
zh = "条目的格式化内部内容。\n\n在默认的 show 规则中，这仅仅是 `it.inner()`，但可以自由定制。"

[reference.model.outline.outline.entry.indented.oneliner]
en = "A helper function for producing an indented entry layout: Lays out a"
zh = "一个用于产生缩进条目布局的帮助函数：将前缀和其余条目以缩进感知的方式布局。"

[reference.model.outline.outline.entry.indented.prefix.details]
en = "The `prefix` is aligned with the `inner` content of entries that\nhave level one less.\n\nIn the default show rule, this is just `it.prefix()`, but it can be\nfreely customized."
zh = "`prefix` 与级别比它少一级的条目的 `inner` 内容对齐。\n\n在默认的 show 规则中，这仅仅是 `it.prefix()`，但可以自由定制。"

[reference.model.outline.outline.entry.indented.title]
en = "Indented"
zh = "缩进"

[reference.model.outline.outline.entry.inner.details]
en = "Creates the default inner content of the entry.\n\nThis includes the body, the fill, and page number."
zh = "创建条目的默认内部内容。\n\n这包括正文、填充和页码。"

[reference.model.outline.outline.entry.inner.oneliner]
en = "Creates the default inner content of the entry."
zh = "创建条目的默认内部内容。"

[reference.model.outline.outline.entry.inner.title]
en = "Inner"
zh = "内部"

[reference.model.outline.outline.entry.level.details]
en = "The nesting level of this outline entry. Starts at `{1}` for top-level\nentries."
zh = "此大纲条目的嵌套级别。从顶级条目开始，级别为 `{1}`。"

[reference.model.outline.outline.entry.oneliner]
en = "Represents an entry line in an outline."
zh = "表示大纲中的一个条目。"

[reference.model.outline.outline.entry.page.details]
en = "The page number of this entry's element, formatted with the numbering\nset for the referenced page."
zh = "此条目元素的页码，使用为引用页设置的编号格式化。"

[reference.model.outline.outline.entry.page.oneliner]
en = "The page number of this entry's element, formatted with the numbering"
zh = "此条目元素的页码，使用为引用页设置的编号格式化。"

[reference.model.outline.outline.entry.page.title]
en = "Page"
zh = "页码"

[reference.model.outline.outline.entry.prefix.details]
en = "Formats the element's numbering (if any).\n\nThis also appends the element's supplement in case of figures or\nequations. For instance, it would output `1.1` for a heading, but\n`Figure 1` for a figure, as is usual for outlines."
zh = "格式化元素的编号（如果有的话）。\n\n这也追加了元素的补充，例如在图表或方程式的情况下。例如，它将为标题输出 `1.1`，但为图表输出 `Figure 1`，这是大纲通常的格式。"

[reference.model.outline.outline.entry.prefix.oneliner]
en = "Formats the element's numbering (if any)."
zh = "格式化元素的编号（如果有的话）。"

[reference.model.outline.outline.entry.prefix.title]
en = "Prefix"
zh = "前缀"

[reference.model.outline.outline.entry.title]
en = "Outline Entry"
zh = "大纲条目"

[reference.model.outline.outline.indent.details]
en = "How to indent the outline's entries.\n\n- `{auto}`: Indents the numbering/prefix of a nested entry with the\n  title of its parent entry. If the entries are not numbered (e.g., via\n  [heading numbering]($heading.numbering)), this instead simply inserts\n  a fixed amount of `{1.2em}` indent per level.\n\n- [Relative length]($relative): Indents the entry by the specified\n  length per nesting level. Specifying `{2em}`, for instance, would\n  indent top-level headings by `{0em}` (not nested), second level\n  headings by `{2em}` (nested once), third-level headings by `{4em}`\n  (nested twice) and so on.\n\n- [Function]($function): You can further customize this setting with a\n  function. That function receives the nesting level as a parameter\n  (starting at 0 for top-level headings/elements) and should return a\n  (relative) length. For example, `{n => n * 2em}` would be equivalent\n  to just specifying `{2em}`.\n\n"
zh = "如何缩进大纲的条目。\n\n- `{auto}`: 缩进嵌套条目的编号/前缀，使用其父条目的标题。如果条目未编号（例如通过 [标题编号]($heading.numbering)），则简单地在每个级别插入一个固定的 `{1.2em}` 缩进。\n\n- [相对长度]($relative): 根据嵌套级别缩进条目，指定 `{2em}` 将使顶级标题缩进 `{0em}`（未嵌套），二级标题缩进 `{2em}`（嵌套一次），三级标题缩进 `{4em}`（嵌套两次）等等。\n\n- [函数]($function): 您可以进一步自定义此设置，使用一个函数。该函数接收嵌套级别作为参数（从顶级标题/元素开始，从 0 开始），并应返回一个相对长度。例如，`{n => n * 2em}` 等同于只指定 `{2em}`。\n\n"

[reference.model.outline.outline.oneliner]
en = "A table of contents, figures, or other elements."
zh = "一个目录、图表或其他元素。"

[reference.model.outline.outline.target.details]
en = "The type of element to include in the outline.\n\nTo list figures containing a specific kind of element, like an image or\na table, you can specify the desired kind in a [`where`]($function.where)\nselector. See the section on [alternative outlines]($outline/#alternative-outlines)\nfor more details.\n\n"
zh = "要包含在大纲中的元素类型。\n\n要列出包含特定类型元素的图表，例如图像或表格，您可以在 [`where`]($function.where) 选择器中指定所需的类型。有关更多详细信息，请参阅 [替代大纲]($outline/#alternative-outlines) 部分。\n\n"

[reference.model.outline.outline.title]
en = "Outline"
zh = "大纲"

[reference.model.outline.outline.title.details]
en = "The title of the outline.\n\n- When set to `{auto}`, an appropriate title for the\n  [text language]($text.lang) will be used.\n- When set to `{none}`, the outline will not have a title.\n- A custom title can be set by passing content.\n\nThe outline's heading will not be numbered by default, but you can\nforce it to be with a show-set rule:\n`{show outline: set heading(numbering: \"1.\")}`"
zh = "大纲的标题。\n\n- 当设置为 `{auto}` 时，将使用适合 [文本语言]($text.lang) 的适当标题。\n- 当设置为 `{none}` 时，大纲将没有标题。\n- 可以通过传递内容设置自定义标题。\n\n大纲的标题默认不会编号，但您可以使用 show-set 规则强制其编号：\n`{show outline: set heading(numbering: \"1.\")}`"

[reference.model.outline.title]
en = "Outline"
zh = "大纲"

[reference.model.par.description]
en = "Documentation for the `par` function."
zh = "`par` 函数的文档。"

[reference.model.par.oneliner]
en = "A logical subdivison of textual content."
zh = "文本内容的逻辑细分。"

[reference.model.par.par.body.details]
en = "The contents of the paragraph."
zh = "段落的正文。"

[reference.model.par.par.details]
en = "{{typst-docs/reference.model.par.par.details.toml}}"

[reference.model.par.par.first-line-indent.details]
en = "The indent the first line of a paragraph should have.\n\nBy default, only the first line of a consecutive paragraph will be\nindented (not the first one in the document or container, and not\nparagraphs immediately following other block-level elements).\n\nIf you want to indent all paragraphs instead, you can pass a dictionary\ncontaining the `amount` of indent as a length and the pair\n`{all: true}`. When `all` is omitted from the dictionary, it defaults to\n`{false}`.\n\nBy typographic convention, paragraph breaks are indicated either by some\nspace between paragraphs or by indented first lines. Consider\n- reducing the [paragraph `spacing`]($par.spacing) to the\n  [`leading`]($par.leading) using `{set par(spacing: 0.65em)}`\n- increasing the [block `spacing`]($block.spacing) (which inherits the\n  paragraph spacing by default) to the original paragraph spacing using\n  `{set block(spacing: 1.2em)}`\n\n"
zh = "段落第一行应该缩进的量。\n\n默认情况下，只有连续段落的第一个行会被缩进（不是文档或容器中的第一个行，也不是紧跟其他块级元素的段落）。\n\n如果您想缩进所有段落，您可以传递一个包含缩进量（作为长度）和 `{all: true}` 的词典。当词典中没有 `all` 时，默认为 `{false}`。\n\n根据排版惯例，段落换行要么通过段落之间的间距表示，要么通过缩进的第一行表示。考虑\n- 使用 `{set par(spacing: 0.65em)}` 将 [段落间距]($par.spacing) 减少到 [`行距]($par.leading) 使用 `{set par(spacing: 0.65em)}`\n- 使用 `{set block(spacing: 1.2em)}` 将 [块间距]($block.spacing)（默认继承段落间距）增加到原始段落间距"

[reference.model.par.par.hanging-indent.details]
en = "The indent that all but the first line of a paragraph should have.\n\n"
zh = "段落除了第一行之外的所有行应该缩进的量。\n\n"

[reference.model.par.par.justify.details]
en = "Whether to justify text in its line.\n\nHyphenation will be enabled for justified paragraphs if the\n[text function's `hyphenate` property]($text.hyphenate) is set to\n`{auto}` and the current language is known.\n\nNote that the current [alignment]($align.alignment) still has an effect\non the placement of the last line except if it ends with a\n[justified line break]($linebreak.justify)."
zh = "是否在行中对齐文本。\n\n如果 [文本函数 `hyphenate` 属性]($text.hyphenate) 设置为 `{auto}` 并且当前语言已知，则启用连字符的段落会自动对齐。\n\n请注意，当前 [对齐]($align.alignment) 仍然对最后一行的位置有影响，除非它以 [换行对齐]($linebreak.justify) 结束。"

[reference.model.par.par.leading.details]
en = "The spacing between lines.\n\nLeading defines the spacing between the [bottom edge]($text.bottom-edge)\nof one line and the [top edge]($text.top-edge) of the following line. By\ndefault, these two properties are up to the font, but they can also be\nconfigured manually with a text set rule.\n\nBy setting top edge, bottom edge, and leading, you can also configure a\nconsistent baseline-to-baseline distance. You could, for instance, set\nthe leading to `{1em}`, the top-edge to `{0.8em}`, and the bottom-edge\nto `{-0.2em}` to get a baseline gap of exactly `{2em}`. The exact\ndistribution of the top- and bottom-edge values affects the bounds of\nthe first and last line."
zh = "行之间的间距。\n\n行距定义了 [底部边缘]($text.bottom-edge) 和 [顶部边缘]($text.top-edge) 之间的一行和下一行之间的间距。默认情况下，这些属性由字体决定，但也可以通过文本设置规则手动配置。\n\n通过设置顶部边缘、底部边缘和行距，您还可以配置一致的基线到基线距离。例如，将行距设置为 `{1em}`，顶部边缘设置为 `{0.8em}`，底部边缘设置为 `{-0.2em}` 以获得精确的基线间距 `{2em}`。顶部和底部边缘值的确切分布会影响第一行和最后一行的边界。"

[reference.model.par.par.line.details]
en = "A paragraph line.\n\nThis element is exclusively used for line number configuration through set\nrules and cannot be placed.\n\nThe [`numbering`]($par.line.numbering) option is used to enable line\nnumbers by specifying a numbering format.\n\n"
zh = "一个段落行。\n\n这个元素仅用于通过设置规则配置行号，不能放置。\n\n[`numbering`]($par.line.numbering) 选项用于通过指定编号格式启用行号。\n\n"

[reference.model.par.par.line.number-align.details]
en = "The alignment of line numbers associated with each line.\n\nThe default of `{auto}` indicates a smart default where numbers grow\nhorizontally away from the text, considering the margin they're in and\nthe current text direction.\n\n"
zh = "与每行关联的行号的排列方式。\n\n默认的 `{auto}` 表示一个智能默认，其中数字水平地从文本向外增长，考虑到它们所在的边距和当前文本方向。\n\n"

[reference.model.par.par.line.number-clearance.details]
en = "The distance between line numbers and text.\n\nThe default value of `{auto}` results in a clearance that is adaptive to\nthe page width and yields reasonable results in most cases.\n\n"
zh = "行号和文本之间的距离。\n\n默认值 `{auto}` 产生一个适应页面宽度的间距，在大多数情况下都能产生合理的结果。\n\n"

[reference.model.par.par.line.number-margin.details]
en = "The margin at which line numbers appear.\n\n_Note:_ In a multi-column document, the line numbers for paragraphs\ninside the last column will always appear on the `{end}` margin (right\nmargin for left-to-right text and left margin for right-to-left),\nregardless of this configuration. That behavior cannot be changed at\nthis moment.\n\n"
zh = "行号出现的边距。\n\n_注意:_ 在多列文档中，最后一列中的段落的行号总是出现在 `{end}` 边距（左到右文本的右边距，右到左文本的左边距），无论此配置如何。目前无法更改此行为。\n\n"

[reference.model.par.par.line.numbering-scope.details]
en = "Controls when to reset line numbering.\n\n_Note:_ The line numbering scope must be uniform across each page run (a\npage run is a sequence of pages without an explicit pagebreak in\nbetween). For this reason, set rules for it should be defined before any\npage content, typically at the very start of the document.\n\n"
zh = "控制何时重置行号。\n\n_注意:_ 行号范围必须在每个页面运行中保持一致（页面运行是一系列没有显式页面换行的页面）。因此，设置规则应该在任何页面内容之前定义，通常在文档的开头。\n\n"

[reference.model.par.par.line.numbering.details]
en = "How to number each line. Accepts a\n[numbering pattern or function]($numbering).\n\n"
zh = "如何编号每行。接受一个 [编号模式或函数]($numbering)。\n\n"

[reference.model.par.par.line.oneliner]
en = "A paragraph line."
zh = "段落的一行。"

[reference.model.par.par.line.title]
en = "Paragraph Line"
zh = "段落行"

[reference.model.par.par.linebreaks.details]
en = "How to determine line breaks.\n\nWhen this property is set to `{auto}`, its default value, optimized line\nbreaks will be used for justified paragraphs. Enabling optimized line\nbreaks for ragged paragraphs may also be worthwhile to improve the\nappearance of the text.\n\n"
zh = "如何确定换行。\n\n当此属性设置为 `{auto}` 时，将使用优化的换行方式。对于整齐的段落，启用优化的换行可能有助于改善文本的外观。\n\n"

[reference.model.par.par.oneliner]
en = "A logical subdivison of textual content."
zh = "文本内容的逻辑细分。"

[reference.model.par.par.spacing.details]
en = "The spacing between paragraphs.\n\nJust like leading, this defines the spacing between the bottom edge of a\nparagraph's last line and the top edge of the next paragraph's first\nline.\n\nWhen a paragraph is adjacent to a [`block`] that is not a paragraph,\nthat block's [`above`]($block.above) or [`below`]($block.below) property\ntakes precedence over the paragraph spacing. Headings, for instance,\nreduce the spacing below them by default for a better look."
zh = "段落之间的间距。\n\n就像行距一样，这定义了段落的最后一行底部边缘和下一个段落第一行顶部边缘之间的间距。\n\n当段落与一个不是段落的 [`块]($block) 相邻时，该块的 [`above`]($block.above) 或 [`below`]($block.below) 属性优先于段落间距。例如，标题默认会减少它们下面的间距，以获得更好的外观。\n\n"

[reference.model.par.par.title]
en = "Paragraph"
zh = "段落"

[reference.model.par.title]
en = "Paragraph"
zh = "段落"

[reference.model.parbreak.description]
en = "Documentation for the `parbreak` function."
zh = "`parbreak` 函数的文档。"

[reference.model.parbreak.oneliner]
en = "A paragraph break."
zh = "段落换行。"

[reference.model.parbreak.parbreak.details]
en = "A paragraph break.\n\nThis starts a new paragraph. Especially useful when used within code like\n[for loops]($scripting/#loops). Multiple consecutive\nparagraph breaks collapse into a single one.\n\n# Example\n```example\n#for i in range(3) {\n  [Blind text #i: ]\n  lorem(5)\n  parbreak()\n}\n```\n\n# Syntax\nInstead of calling this function, you can insert a blank line into your\nmarkup to create a paragraph break."
zh = "段落换行。\n\n这会开始一个新的段落。特别适用于在代码中使用，例如 [for 循环]($scripting/#loops)。多个连续的段落换行会合并为一个。\n\n# 示例\n```example\n#for i in range(3) {\n  [盲文 #i: ]\n  lorem(5)\n  parbreak()\n}\n```\n\n# 语法\n除了调用这个函数，您还可以在标记中插入一个空行来创建段落换行。"

[reference.model.parbreak.parbreak.oneliner]
en = "A paragraph break."
zh = "段落换行。"

[reference.model.parbreak.parbreak.title]
en = "Paragraph Break"
zh = "段落换行"

[reference.model.parbreak.title]
en = "Paragraph Break"
zh = "段落换行"

[reference.model.quote.description]
en = "Documentation for the `quote` function."
zh = "`quote` 函数的文档。"

[reference.model.quote.oneliner]
en = "Displays a quote alongside an optional attribution."
zh = "显示一个引用，并可选地显示引用来源。"

[reference.model.quote.quote.attribution.details]
en = "The attribution of this quote, usually the author or source. Can be a\nlabel pointing to a bibliography entry or any content. By default only\ndisplayed for block quotes, but can be changed using a `{show}` rule.\n\n"
zh = "引用的来源，通常是作者或来源。可以是一个指向参考文献条目的标签，或任何内容。默认情况下只显示块引用，但可以使用 `{show}` 规则更改。\n\n"

[reference.model.quote.quote.block.details]
en = "Whether this is a block quote.\n\n"
zh = "是否是块引用。\n\n"

[reference.model.quote.quote.body.details]
en = "The quote."
zh = "引用。"

[reference.model.quote.quote.details]
en = "{{typst-docs/reference.model.quote.quote.details.toml}}"

[reference.model.quote.quote.oneliner]
en = "Displays a quote alongside an optional attribution."
zh = "显示一个引用，并可选地显示引用来源。"

[reference.model.quote.quote.quotes.details]
en = "Whether double quotes should be added around this quote.\n\nThe double quotes used are inferred from the `quotes` property on\n[smartquote], which is affected by the `lang` property on [text].\n\n- `{true}`: Wrap this quote in double quotes.\n- `{false}`: Do not wrap this quote in double quotes.\n- `{auto}`: Infer whether to wrap this quote in double quotes based on\n  the `block` property. If `block` is `{false}`, double quotes are\n  automatically added.\n\n"
zh = "是否在引用周围添加双引号。\n\n使用的双引号是从 [smartquote] 的 `quotes` 属性推断的，受 [text] 的 `lang` 属性影响。\n\n- `{true}`: 在引用周围添加双引号。\n- `{false}`: 不在引用周围添加双引号。\n- `{auto}`: 根据 `block` 属性推断是否在引用周围添加双引号。如果 `block` 为 `{false}`，则自动添加双引号。\n\n"

[reference.model.quote.quote.title]
en = "Quote"
zh = "引用"

[reference.model.quote.title]
en = "Quote"
zh = "引用"

[reference.model.ref.description]
en = "Documentation for the `ref` function."
zh = "`ref` 函数的文档。"

[reference.model.ref.oneliner]
en = "A reference to a label or bibliography."
zh = "一个指向标签或参考文献的引用。"

[reference.model.ref.ref.details]
en = "{{typst-docs/reference.model.ref.ref.details.toml}}"

[reference.model.ref.ref.form.details]
en = "The kind of reference to produce.\n\n"
zh = "要生成的引用类型。\n\n"

[reference.model.ref.ref.oneliner]
en = "A reference to a label or bibliography."
zh = "一个指向标签或参考文献的引用。"

[reference.model.ref.ref.supplement.details]
en = "A supplement for the reference.\n\nIf the [`form`]($ref.form) is set to `{\"normal\"}`:\n- For references to headings or figures, this is added before the\n  referenced number.\n- For citations, this can be used to add a page number.\n\nIf the [`form`]($ref.form) is set to `{\"page\"}`, then this is added\nbefore the page number of the label referenced.\n\nIf a function is specified, it is passed the referenced element and\nshould return content.\n\n"
zh = "参考文献的补充。\n\n如果 [`form`]($ref.form) 设置为 `{\"normal\"}`:\n- 对于指向标题或图表的引用，这会在引用编号之前添加。\n- 对于引用，这可以用于添加页码。\n\n如果 [`form`]($ref.form) 设置为 `{\"page\"}`，则这会在引用标签的页码之前添加。\n\n如果指定了一个函数，它会被传递给引用的元素，并应返回内容。\n\n"

[reference.model.ref.ref.target.details]
en = "The target label that should be referenced.\n\nCan be a label that is defined in the document or, if the\n[`form`]($ref.form) is set to `[\"normal\"]`, an entry from the\n[`bibliography`]."
zh = "要引用的目标标签。\n\n可以是文档中定义的标签，或者如果 [`form`]($ref.form) 设置为 `[\"normal\"]`，则是一个来自 [`bibliography`] 的条目。"

[reference.model.ref.ref.title]
en = "Reference"
zh = "引用"

[reference.model.ref.title]
en = "Reference"
zh = "引用"

[reference.model.strong.description]
en = "Documentation for the `strong` function."
zh = "`strong` 函数的文档。"

[reference.model.strong.oneliner]
en = "Strongly emphasizes content by increasing the font weight."
zh = "通过增加字体粗细来强调内容。"

[reference.model.strong.strong.body.details]
en = "The content to strongly emphasize."
zh = "要强调的内容。"

[reference.model.strong.strong.delta.details]
en = "The delta to apply on the font weight.\n\n"
zh = "应用在字体粗细上的增量。\n\n"

[reference.model.strong.strong.details]
en = "Strongly emphasizes content by increasing the font weight.\n\nIncreases the current font weight by a given `delta`.\n\n# Example\n```example\nThis is *strong.* \\\nThis is #strong[too.] \\\n\n#show strong: set text(red)\nAnd this is *evermore.*\n```\n\n# Syntax\nThis function also has dedicated syntax: To strongly emphasize content,\nsimply enclose it in stars/asterisks (`*`). Note that this only works at\nword boundaries. To strongly emphasize part of a word, you have to use the\nfunction."
zh = "通过增加字体粗细来强调内容。\n\n增加当前字体粗细的给定 `delta`。\n\n# 示例\n```example\nThis is *strong.* \\\nThis is #strong[too.] \\\n\n#show strong: set text(red)\nAnd this is *evermore.*\n```\n\n# 语法\n这个函数也有专门的语法：要强烈地强调内容，只需用星号/星号 (`*`) 包围它。注意，这只能在单词边界上工作。要强烈地强调单词的一部分，你必须使用这个函数。"

[reference.model.strong.strong.oneliner]
en = "Strongly emphasizes content by increasing the font weight."
zh = "通过增加字体粗细来强调内容。"

[reference.model.strong.strong.title]
en = "Strong"
zh = "强调"

[reference.model.strong.title]
en = "Strong Emphasis"
zh = "强调"

[reference.model.table.description]
en = "Documentation for the `table` function."
zh = "`table` 函数的文档。"

[reference.model.table.oneliner]
en = "A table of items."
zh = "一个项目的表格。"

[reference.model.table.table.align.details]
en = "How to align the cells' content.\n\nThis can either be a single alignment, an array of alignments\n(corresponding to each column) or a function that returns an alignment.\nThe function receives the cells' column and row indices, starting from\nzero. If set to `{auto}`, the outer alignment is used.\n\n"
zh = "如何对齐单元格的内容。\n\n这可以是单个对齐方式，也可以是对应每个列的对齐方式数组，或者返回对齐方式的函数。函数接收单元格的列和行索引，从零开始。如果设置为 `{auto}`，则使用外部对齐方式。\n\n"

[reference.model.table.table.cell.align.details]
en = "The cell's [alignment]($table.align) override."
zh = "单元格的 [对齐方式]($table.align) 覆盖。"

[reference.model.table.table.cell.body.details]
en = "The cell's body."
zh = "单元格的内容。"

[reference.model.table.table.cell.breakable.details]
en = "Whether rows spanned by this cell can be placed in different pages.\nWhen equal to `{auto}`, a cell spanning only fixed-size rows is\nunbreakable, while a cell spanning at least one `{auto}`-sized row is\nbreakable."
zh = "是否可以将此单元格跨越的行放置在不同的页面上。当等于 `{auto}` 时，跨越仅固定大小的行是不可拆分的，而跨越至少一个 `{auto}` 大小的行是可拆分的。"

[reference.model.table.table.cell.colspan.details]
en = "The amount of columns spanned by this cell."
zh = "此单元格跨越的列数。"

[reference.model.table.table.cell.details]
en = "A cell in the table. Use this to position a cell manually or to apply\nstyling. To do the latter, you can either use the function to override the\nproperties for a particular cell, or use it in show rules to apply certain\nstyles to multiple cells at once.\n\nPerhaps the most important use case of `{table.cell}` is to make a cell span\nmultiple columns and/or rows with the `colspan` and `rowspan` fields.\n\n"
zh = "表格中的一个单元格。使用这个函数来手动定位单元格或应用样式。要应用样式，您可以使用函数来覆盖特定单元格的属性，或者在 show 规则中使用它来同时应用某些样式到多个单元格。\n\n`{table.cell}` 最常见的用例之一是使用 `colspan` 和 `rowspan` 字段使单元格跨越多个列和/或行。\n\n"

[reference.model.table.table.cell.fill.details]
en = "The cell's [fill]($table.fill) override."
zh = "单元格的 [填充]($table.fill) 覆盖。"

[reference.model.table.table.cell.inset.details]
en = "The cell's [inset]($table.inset) override."
zh = "单元格的 [内边距]($table.inset) 覆盖。"

[reference.model.table.table.cell.oneliner]
en = "A cell in the table. Use this to position a cell manually or to apply"
zh = "表格中的一个单元格。使用这个函数来手动定位单元格或应用"

[reference.model.table.table.cell.rowspan.details]
en = "The amount of rows spanned by this cell."
zh = "此单元格跨越的行数。"

[reference.model.table.table.cell.stroke.details]
en = "The cell's [stroke]($table.stroke) override."
zh = "单元格的 [描边]($table.stroke) 覆盖。"

[reference.model.table.table.cell.title]
en = "Table Cell"
zh = "表格单元格"

[reference.model.table.table.cell.x.details]
en = "The cell's column (zero-indexed).\nFunctions identically to the `x` field in [`grid.cell`]($grid.cell)."
zh = "单元格的列（零索引）。\n功能与 [`grid.cell`]($grid.cell) 中的 `x` 字段相同。"

[reference.model.table.table.cell.y.details]
en = "The cell's row (zero-indexed).\nFunctions identically to the `y` field in [`grid.cell`]($grid.cell)."
zh = "单元格的行（零索引）。\n功能与 [`grid.cell`]($grid.cell) 中的 `y` 字段相同。"

[reference.model.table.table.children.details]
en = "The contents of the table cells, plus any extra table lines specified\nwith the [`table.hline`]($table.hline) and\n[`table.vline`]($table.vline) elements."
zh = "表格单元格的内容，以及通过 [`table.hline`]($table.hline) 和 [`table.vline`]($table.vline) 元素指定的任何额外表格行。"

[reference.model.table.table.column-gutter.details]
en = "The gaps between columns. Takes precedence over `gutter`. See the\n[grid documentation]($grid) for more information on gutters."
zh = "列之间的间距。优先于 `gutter`。有关 gutters 的更多信息，请参阅 [grid 文档]($grid)。"

[reference.model.table.table.columns.details]
en = "The column sizes. See the [grid documentation]($grid) for more\ninformation on track sizing."
zh = "列的大小。有关轨道大小的更多信息，请参阅 [grid 文档]($grid)。"

[reference.model.table.table.details]
en = "{{typst-docs/reference.model.table.table.details.toml}}"

[reference.model.table.table.fill.details]
en = "How to fill the cells.\n\nThis can be a color or a function that returns a color. The function\nreceives the cells' column and row indices, starting from zero. This can\nbe used to implement striped tables.\n\n"
zh = "如何填充单元格。\n\n这可以是颜色或返回颜色的函数。函数接收单元格的列和行索引，从零开始。这可以用于实现条纹表格。\n\n"

[reference.model.table.table.footer.children.details]
en = "The cells and lines within the footer."
zh = "表格页脚中的单元格和行。"

[reference.model.table.table.footer.details]
en = "A repeatable table footer.\n\nJust like the [`table.header`]($table.header) element, the footer can repeat\nitself on every page of the table. This is useful for improving legibility\nby adding the column labels in both the header and footer of a large table,\ntotals, or other information that should be visible on every page.\n\nNo other table cells may be placed after the footer."
zh = "可重复的表格页脚。\n\n与 [`table.header`]($table.header) 元素类似，页脚可以在表格的每一页上重复。这对于通过在大型表格的页眉和页脚中添加列标签、总计或其他应在每一页上可见的信息来提高可读性非常有用。\n\n在页脚之后不能放置其他表格单元格。"

[reference.model.table.table.footer.oneliner]
en = "A repeatable table footer."
zh = "可重复的表格页脚。"

[reference.model.table.table.footer.repeat.details]
en = "Whether this footer should be repeated across pages."
zh = "是否应在所有页面上重复此页脚。"

[reference.model.table.table.footer.title]
en = "Table Footer"
zh = "表格页脚"

[reference.model.table.table.gutter.details]
en = "The gaps between rows and columns. This is a shorthand for setting\n`column-gutter` and `row-gutter` to the same value. See the [grid\ndocumentation]($grid) for more information on gutters."
zh = "行和列之间的间距。这是一个简写，用于将 `column-gutter` 和 `row-gutter` 设置为相同的值。有关 gutters 的更多信息，请参阅 [grid 文档]($grid)。"

[reference.model.table.table.header.children.details]
en = "The cells and lines within the header."
zh = "表格页眉中的单元格和行。"

[reference.model.table.table.header.details]
en = "A repeatable table header.\n\nYou should wrap your tables' heading rows in this function even if you do not\nplan to wrap your table across pages because Typst will use this function to\nattach accessibility metadata to tables in the future and ensure universal\naccess to your document.\n\nYou can use the `repeat` parameter to control whether your table's header\nwill be repeated across pages.\n\n"
zh = "可重复的表格页眉。\n\n即使您不打算跨页包装表格，也应将表格的标题行包装在这个函数中，因为 Typst 将来会使用这个函数将辅助功能元数据附加到表格上，并确保对您的文档的普遍访问。\n\n您可以使用 `repeat` 参数来控制表格的页眉是否会在所有页面上重复。\n\n"

[reference.model.table.table.header.oneliner]
en = "A repeatable table header."
zh = "可重复的表格页眉。"

[reference.model.table.table.header.repeat.details]
en = "Whether this header should be repeated across pages."
zh = "是否应在所有页面上重复此页眉。"

[reference.model.table.table.header.title]
en = "Table Header"
zh = "表格页眉"

[reference.model.table.table.hline.details]
en = "A horizontal line in the table.\n\nOverrides any per-cell stroke, including stroke specified through the\ntable's `stroke` field. Can cross spacing between cells created through the\ntable's [`column-gutter`]($table.column-gutter) option.\n\nUse this function instead of the table's `stroke` field if you want to\nmanually place a horizontal line at a specific position in a single table.\nConsider using [table's `stroke`]($table.stroke) field or [`table.cell`'s\n`stroke`]($table.cell.stroke) field instead if the line you want to place is\npart of all your tables' designs.\n\n"
zh = "表格中的水平线。\n\n覆盖任何单元格描边，包括通过表格的 `stroke` 字段指定的描边。可以跨越通过表格的 [`column-gutter`]($table.column-gutter) 选项创建的单元格之间的间距。\n\n如果您想在单个表格中手动放置水平线，请使用此函数而不是表格的 `stroke` 字段。如果您想要放置的线条是所有表格设计的一部分，请考虑使用表格的 `stroke` 字段或 [`table.cell`]($table.cell.stroke) 字段。\n\n"

[reference.model.table.table.hline.end.details]
en = "The column before which the horizontal line ends (zero-indexed,\nexclusive)."
zh = "水平线结束的列（零索引，不包括）。"

[reference.model.table.table.hline.oneliner]
en = "A horizontal line in the table."
zh = "表格中的水平线。"

[reference.model.table.table.hline.position.details]
en = "The position at which the line is placed, given its row (`y`) - either\n`{top}` to draw above it or `{bottom}` to draw below it.\n\nThis setting is only relevant when row gutter is enabled (and\nshouldn't be used otherwise - prefer just increasing the `y` field by\none instead), since then the position below a row becomes different\nfrom the position above the next row due to the spacing between both."
zh = "线条放置的位置，给定其行 (`y`) - 要么是 `{top}` 在它上方绘制，要么是 `{bottom}` 在它下方绘制。\n\n当行间距启用时，这个设置才相关（否则不应该使用 - 最好只是增加 `y` 字段），因为这样在行下方和上方之间会有不同的位置，因为两者之间有间距。"

[reference.model.table.table.hline.start.details]
en = "The column at which the horizontal line starts (zero-indexed, inclusive)."
zh = "水平线开始的列（零索引，包括）。"

[reference.model.table.table.hline.stroke.details]
en = "The line's stroke.\n\nSpecifying `{none}` removes any lines previously placed across this\nline's range, including hlines or per-cell stroke below it."
zh = "线条的描边。\n\n指定 `{none}` 会删除此线条范围内之前放置的任何线条，包括水平线或其下方的单元格描边。"

[reference.model.table.table.hline.title]
en = "Table Horizontal Line"
zh = "表格水平线"

[reference.model.table.table.hline.y.details]
en = "The row above which the horizontal line is placed (zero-indexed).\nFunctions identically to the `y` field in [`grid.hline`]($grid.hline.y)."
zh = "水平线放置的行（零索引）。\n功能与 [`grid.hline`]($grid.hline.y) 中的 `y` 字段相同。"

[reference.model.table.table.inset.details]
en = "How much to pad the cells' content.\n\n"
zh = "要填充单元格内容的量。\n\n"

[reference.model.table.table.oneliner]
en = "A table of items."
zh = "一个项目的表格。"

[reference.model.table.table.row-gutter.details]
en = "The gaps between rows. Takes precedence over `gutter`. See the\n[grid documentation]($grid) for more information on gutters."
zh = "行之间的间距。优先于 `gutter`。有关 gutters 的更多信息，请参阅 [grid 文档]($grid)。"

[reference.model.table.table.rows.details]
en = "The row sizes. See the [grid documentation]($grid) for more information\non track sizing."
zh = "行的大小。有关轨道大小的更多信息，请参阅 [grid 文档]($grid)。"

[reference.model.table.table.stroke.details]
en = "How to [stroke] the cells.\n\nStrokes can be disabled by setting this to `{none}`.\n\nIf it is necessary to place lines which can cross spacing between cells\nproduced by the `gutter` option, or to override the stroke between\nmultiple specific cells, consider specifying one or more of\n[`table.hline`]($table.hline) and [`table.vline`]($table.vline)\nalongside your table cells.\n\nSee the [grid documentation]($grid.stroke) for more information on\nstrokes."
zh = "如何 [描边] 单元格。\n\n通过将此设置为 `{none}` 可以禁用描边。\n\n如果需要放置可以跨越由 `gutter` 选项产生的单元格间距的线条，或者要覆盖多个特定单元格之间的描边，请考虑在表格单元格旁边指定一个或多个 [`table.hline`]($table.hline) 和 [`table.vline`]($table.vline)。\n\n有关描边的更多信息，请参阅 [grid 文档]($grid.stroke)。"

[reference.model.table.table.title]
en = "Table"
zh = "表格"

[reference.model.table.table.vline.details]
en = "A vertical line in the table. See the docs for [`grid.vline`]($grid.vline)\nfor more information regarding how to use this element's fields.\n\nOverrides any per-cell stroke, including stroke specified through the\ntable's `stroke` field. Can cross spacing between cells created through the\ntable's [`row-gutter`]($table.row-gutter) option.\n\nSimilar to [`table.hline`]($table.hline), use this function if you want to\nmanually place a vertical line at a specific position in a single table and\nuse the [table's `stroke`]($table.stroke) field or [`table.cell`'s\n`stroke`]($table.cell.stroke) field instead if the line you want to place is\npart of all your tables' designs."
zh = "表格中的垂直线。有关如何使用此元素字段的更多信息，请参阅 [`grid.vline`]($grid.vline) 的文档。\n\n覆盖任何单元格描边，包括通过表格的 `stroke` 字段指定的描边。可以跨越通过表格的 [`row-gutter`]($table.row-gutter) 选项创建的单元格之间的间距。\n\n类似于 [`table.hline`]($table.hline)，如果您想在单个表格中手动放置垂直线，请使用此函数，并使用表格的 `stroke` 字段或 [`table.cell`]($table.cell.stroke) 字段。"

[reference.model.table.table.vline.end.details]
en = "The row on top of which the vertical line ends (zero-indexed,\nexclusive)."
zh = "垂直线结束的行（零索引，不包括）。"

[reference.model.table.table.vline.oneliner]
en = "A vertical line in the table. See the docs for [`grid.vline`]($grid.vline)"
zh = "表格中的垂直线。有关如何使用此元素字段的更多信息，请参阅 [`grid.vline`]($grid.vline) 的文档。"

[reference.model.table.table.vline.position.details]
en = "The position at which the line is placed, given its column (`x`) -\neither `{start}` to draw before it or `{end}` to draw after it.\n\nThe values `{left}` and `{right}` are also accepted, but discouraged as\nthey cause your table to be inconsistent between left-to-right and\nright-to-left documents.\n\nThis setting is only relevant when column gutter is enabled (and\nshouldn't be used otherwise - prefer just increasing the `x` field by\none instead), since then the position after a column becomes different\nfrom the position before the next column due to the spacing between\nboth."
zh = "线条放置的位置，给定其列 (`x`) - 要么是 `{start}` 在它之前绘制，要么是 `{end}` 在它之后绘制。\n\n值 `{left}` 和 `{right}` 也可以接受，但被弃用，因为它们会导致您的表格在从左到右和从右到左的文档中不一致。\n\n当列间距启用时，这个设置才相关（否则不应该使用 - 最好只是增加 `x` 字段），因为这样在列之后和之前会有不同的位置，因为两者之间有间距。"

[reference.model.table.table.vline.start.details]
en = "The row at which the vertical line starts (zero-indexed, inclusive)."
zh = "垂直线开始的行（零索引，包括）。"

[reference.model.table.table.vline.stroke.details]
en = "The line's stroke.\n\nSpecifying `{none}` removes any lines previously placed across this\nline's range, including vlines or per-cell stroke below it."
zh = "线条的描边。\n\n指定 `{none}` 会删除此线条范围内之前放置的任何线条，包括垂直线或其下方的单元格描边。"

[reference.model.table.table.vline.title]
en = "Table Vertical Line"
zh = "表格垂直线"

[reference.model.table.table.vline.x.details]
en = "The column before which the horizontal line is placed (zero-indexed).\nFunctions identically to the `x` field in [`grid.vline`]($grid.vline)."
zh = "水平线放置的列（零索引）。\n功能与 [`grid.vline`]($grid.vline) 中的 `x` 字段相同。"

[reference.model.table.title]
en = "Table"
zh = "表格"

[reference.model.terms.description]
en = "Documentation for the `terms` function."
zh = "`terms` 函数的文档。"

[reference.model.terms.oneliner]
en = "A list of terms and their descriptions."
zh = "一个术语列表及其描述。"

[reference.model.terms.terms.children.details]
en = "The term list's children.\n\nWhen using the term list syntax, adjacent items are automatically\ncollected into term lists, even through constructs like for loops.\n\n"
zh = "术语列表的子元素。\n\n当使用术语列表语法时，相邻的项会自动收集到术语列表中，即使通过诸如 for 循环之类的构造也是如此。\n\n"

[reference.model.terms.terms.details]
en = "A list of terms and their descriptions.\n\nDisplays a sequence of terms and their descriptions vertically. When the\ndescriptions span over multiple lines, they use hanging indent to\ncommunicate the visual hierarchy.\n\n# Example\n```example\n/ Ligature: A merged glyph.\n/ Kerning: A spacing adjustment\n  between two adjacent letters.\n```\n\n# Syntax\nThis function also has dedicated syntax: Starting a line with a slash,\nfollowed by a term, a colon and a description creates a term list item."
zh = "一个术语列表及其描述。\n\n垂直显示一系列术语及其描述。当描述跨越多行时，它们使用悬挂缩进以传达视觉层次结构。\n\n# 示例\n```example\n/ 连字：合并的字形。\n/ 字距：两个相邻字母之间的间距调整。\n```\n\n# 语法\n此函数还具有专门的语法：以斜杠开头，后跟术语、冒号和描述，创建一个术语列表项。"

[reference.model.terms.terms.hanging-indent.details]
en = "The hanging indent of the description.\n\nThis is in addition to the whole item's `indent`.\n\n"
zh = "描述的悬挂缩进。\n\n这是整个项目的 `indent` 之外的。\n\n"

[reference.model.terms.terms.indent.details]
en = "The indentation of each item."
zh = "每个项目的缩进。"

[reference.model.terms.terms.item.description.details]
en = "The description of the term."
zh = "术语的描述。"

[reference.model.terms.terms.item.details]
en = "A term list item."
zh = "一个术语列表项。"

[reference.model.terms.terms.item.oneliner]
en = "A term list item."
zh = "一个术语列表项。"

[reference.model.terms.terms.item.term.details]
en = "The term described by the list item."
zh = "列表项描述的术语。"

[reference.model.terms.terms.item.title]
en = "Term List Item"
zh = "术语列表项"

[reference.model.terms.terms.oneliner]
en = "A list of terms and their descriptions."
zh = "一个术语列表及其描述。"

[reference.model.terms.terms.separator.details]
en = "The separator between the item and the description.\n\nIf you want to just separate them with a certain amount of space, use\n`{h(2cm, weak: true)}` as the separator and replace `{2cm}` with your\ndesired amount of space.\n\n"
zh = "术语和描述之间的「分隔符」（[separator](#x-term-separator)）。\n\n如果您只想用一定的间距分开它们，请使用 `{h(2cm, weak: true)}` 作为分隔符，并替换 `{2cm}` 为您想要的间距量。\n\n"

[reference.model.terms.terms.spacing.details]
en = "The spacing between the items of the term list.\n\nIf set to `{auto}`, uses paragraph [`leading`]($par.leading) for tight\nterm lists and paragraph [`spacing`]($par.spacing) for wide\n(non-tight) term lists."
zh = "术语列表中项之间的间距。\n\n如果设置为 `{auto}`，则使用段落 [`leading`]($par.leading) 紧凑的术语列表和段落 [`spacing`]($par.spacing) 宽的（非紧凑）术语列表。"

[reference.model.terms.terms.tight.details]
en = "Defines the default [spacing]($terms.spacing) of the term list. If it is\n`{false}`, the items are spaced apart with\n[paragraph spacing]($par.spacing). If it is `{true}`, they use\n[paragraph leading]($par.leading) instead. This makes the list more\ncompact, which can look better if the items are short.\n\nIn markup mode, the value of this parameter is determined based on\nwhether items are separated with a blank line. If items directly follow\neach other, this is set to `{true}`; if items are separated by a blank\nline, this is set to `{false}`. The markup-defined tightness cannot be\noverridden with set rules.\n\n"
zh = "定义术语列表的默认 [间距]($terms.spacing)。如果为 `{false}`，则项之间使用 [段落间距]($par.spacing)。如果为 `{true}`，则使用 [段落行距]($par.leading)。这使得列表更紧凑，如果项较短，看起来会更好。\n\n在标记模式下，此参数的值基于项是否用空行分隔。如果项直接跟随，则设置为 `{true}`；如果项用空行分隔，则设置为 `{false}`。标记定义的紧凑性不能通过设置规则覆盖。\n\n"

[reference.model.terms.terms.title]
en = "Term List"
zh = "术语列表"

[reference.model.terms.title]
en = "Term List"
zh = "术语列表"

[reference.model.title]
en = "Model"
zh = "模型"

[reference.pdf.description]
en = "Documentation for functions related to PDF in Typst."
zh = "与 Typst 中的 PDF 相关的函数的文档。"

[reference.pdf.embed.description]
en = "Documentation for the `embed` function."
zh = "`embed` 函数的文档。"

[reference.pdf.embed.embed.data.details]
en = "Raw file data, optionally.\n\nIf omitted, the data is read from the specified path."
zh = "原始文件数据，可选。\n\n如果省略，则从指定的路径读取数据。"

[reference.pdf.embed.embed.description.details]
en = "A description for the embedded file."
zh = "嵌入文件的描述。"

[reference.pdf.embed.embed.details]
en = "A file that will be embedded into the output PDF.\n\nThis can be used to distribute additional files that are related to the PDF\nwithin it. PDF readers will display the files in a file listing.\n\nSome international standards use this mechanism to embed machine-readable\ndata (e.g., ZUGFeRD/Factur-X for invoices) that mirrors the visual content\nof the PDF.\n\n# Example\n```typ\n#pdf.embed(\n  \"experiment.csv\",\n  relationship: \"supplement\",\n  mime-type: \"text/csv\",\n  description: \"Raw Oxygen readings from the Arctic experiment\",\n)\n```\n\n# Notes\n- This element is ignored if exporting to a format other than PDF.\n- File embeddings are not currently supported for PDF/A-2, even if the\n  embedded file conforms to PDF/A-1 or PDF/A-2."
zh = "一个将嵌入到输出 PDF 中的文件。\n\n这可以用于分发与 PDF 相关的附加文件。PDF 阅读器将在文件列表中显示这些文件。\n\n一些国际标准使用此机制嵌入机器可读的数据（例如，ZUGFeRD/Factur-X 用于发票），这些数据与 PDF 的视觉内容相匹配。\n\n# 示例\n```typ\n#pdf.embed(\n  \"experiment.csv\",\n  relationship: \"supplement\",\n  mime-type: \"text/csv\",\n  description: \"Raw Oxygen readings from the Arctic experiment\",\n)\n```\n\n# 注意\n- 如果导出到除 PDF 以外的格式，则忽略此元素。\n- 文件嵌入目前不支持 PDF/A-2，即使嵌入的文件符合 PDF/A-1 或 PDF/A-2。"

[reference.pdf.embed.embed.mime-type.details]
en = "The MIME type of the embedded file."
zh = "嵌入文件的 MIME 类型。"

[reference.pdf.embed.embed.oneliner]
en = "A file that will be embedded into the output PDF."
zh = "一个将嵌入到输出 PDF 中的文件。"

[reference.pdf.embed.embed.path.details]
en = "The [path]($syntax/#paths) of the file to be embedded.\n\nMust always be specified, but is only read from if no data is provided\nin the following argument."
zh = "要嵌入的文件的 [路径]($syntax/#paths)。\n\n必须始终指定，但如果以下参数中没有提供数据，则只从该参数中读取。"

[reference.pdf.embed.embed.relationship.details]
en = "The relationship of the embedded file to the document.\n\nIgnored if export doesn't target PDF/A-3."
zh = "嵌入文件与文档的关系。\n\n如果导出不针对 PDF/A-3，则忽略。"

[reference.pdf.embed.embed.title]
en = "Embed"
zh = "嵌入"

[reference.pdf.embed.oneliner]
en = "A file that will be embedded into the output PDF."
zh = "一个将嵌入到输出 PDF 中的文件。"

[reference.pdf.embed.title]
en = "Embed"
zh = "嵌入"

[reference.pdf.pdf.details]
en = "{{typst-docs/reference.pdf.pdf.details.toml}}"

[reference.pdf.pdf.title]
en = "PDF"
zh = "PDF"

[reference.pdf.title]
en = "PDF"
zh = "PDF"

[reference.png.description]
en = "Documentation for functions related to PNG in Typst."
zh = "与 Typst 中的 PNG 相关的函数的文档。"

[reference.png.png.details]
en = "{{typst-docs/reference.png.png.details.toml}}"

[reference.png.png.title]
en = "PNG"
zh = "PNG"

[reference.png.title]
en = "PNG"
zh = "PNG"

[reference.scripting.body]
en = "{{typst-docs/reference.scripting.body.toml}}"

[reference.scripting.description]
en = "Automate your document with Typst's scripting capabilities."
zh = "使用 Typst 的脚本功能自动化您的文档。"

[reference.scripting.title]
en = "Scripting"
zh = "脚本"

[reference.styling.body]
en = "{{typst-docs/reference.styling.body.toml}}"

[reference.styling.description]
en = "All concepts needed to style your document with Typst."
zh = "使用 Typst 样式化文档所需的所有概念。"

[reference.styling.title]
en = "Styling"
zh = "样式"

[reference.svg.description]
en = "Documentation for functions related to SVG in Typst."
zh = "与 Typst 中的 SVG 相关的函数的文档。"

[reference.svg.svg.details]
en = "{{typst-docs/reference.svg.svg.details.toml}}"

[reference.svg.svg.title]
en = "SVG"
zh = "SVG"

[reference.svg.title]
en = "SVG"
zh = "SVG"

[reference.symbols.description]
en = "Documentation for functions related to Symbols in Typst."
zh = "与 Typst 中的符号相关的函数的文档。"

[reference.symbols.emoji.description]
en = "Documentation for the `emoji` module."
zh = "`emoji` 模块的文档。"

[reference.symbols.emoji.emoji.details]
en = "Named emoji.\n\nFor example, `#emoji.face` produces the 😀 emoji. If you frequently use\ncertain emojis, you can also import them from the `emoji` module (`[#import\nemoji: face]`) to use them without the `#emoji.` prefix.\n"
zh = "命名的表情符号。\n\n例如，`#emoji.face` 产生 😀 表情符号。如果您经常使用某些表情符号，您还可以从 `emoji` 模块导入它们（[#import emoji: face]），这样您就可以使用它们而无需 `#emoji.` 前缀。\n"

[reference.symbols.emoji.emoji.title]
en = "Emoji"
zh = "表情符号"

[reference.symbols.emoji.oneliner]
en = "These two modules give names to symbols and emoji to make them easy to insert"
zh = "这两个模块为符号和表情符号提供名称，以便轻松插入"

[reference.symbols.emoji.title]
en = "Emoji"
zh = "表情符号"

[reference.symbols.sym.description]
en = "Documentation for the `sym` module."
zh = "`sym` 模块的文档。"

[reference.symbols.sym.oneliner]
en = "These two modules give names to symbols and emoji to make them easy to insert"
zh = "这两个模块为符号和表情符号提供名称，以便轻松插入"

[reference.symbols.sym.sym.10757.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.10777.deprecation]
en = "`integral.sect` is deprecated, use `integral.inter` instead"
zh = "`integral.sect` 已弃用，请使用 `integral.inter` 代替"

[reference.symbols.sym.sym.10816.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.10820.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.10830.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.8745.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.8851.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.8898.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.8914.deprecation]
en = "`sect` is deprecated, use `inter` instead"
zh = "`sect` 已弃用，请使用 `inter` 代替"

[reference.symbols.sym.sym.details]
en = "Named general symbols.\n\nFor example, `#sym.arrow` produces the → symbol. Within\n[formulas]($category/math), these symbols can be used without the `#sym.`\nprefix.\n\nThe `d` in an integral's `dx` can be written as `[$dif x$]`.\nOutside math formulas, `dif` can be accessed as `math.dif`.\n"
zh = "命名的通用符号。\n\n例如，`#sym.arrow` 产生 → 符号。在 [公式]($category/math) 中，这些符号可以不使用 `#sym.` 前缀使用。\n\n积分中的 `dx` 中的 `d` 可以写为 `[$dif x$]`。\n在数学公式之外，`dif` 可以访问为 `math.dif`。\n"

[reference.symbols.sym.sym.title]
en = "General"
zh = "通用"

[reference.symbols.sym.title]
en = "General"
zh = "通用"

[reference.symbols.symbols.details]
en = "These two modules give names to symbols and emoji to make them easy to insert\nwith a normal keyboard. Alternatively, you can also always directly enter\nUnicode symbols into your text and formulas. In addition to the symbols listed\nbelow, math mode defines `dif` and `Dif`. These are not normal symbol values\nbecause they also affect spacing and font style.\n"
zh = "这两个模块为符号和表情符号提供名称，以便轻松插入\n使用普通键盘。或者，您也可以始终直接将 Unicode 符号输入到您的文本和公式中。除了下面列出的符号外，数学模式还定义了 `dif` 和 `Dif`。这些不是正常的符号值，因为它们也会影响间距和字体样式。\n"

[reference.symbols.symbols.title]
en = "Symbols"
zh = "符号"

[reference.symbols.title]
en = "Symbols"
zh = "符号"

[reference.syntax.body]
en = "{{typst-docs/reference.syntax.body.toml}}"

[reference.syntax.description]
en = "A compact reference for Typst's syntax. Learn more about the language within\nmarkup, math, and code mode.\n"
zh = "Typst 语法的紧凑参考。了解标记、数学和代码模式中的语言。\n"

[reference.syntax.title]
en = "Syntax"
zh = "语法"

[reference.text.description]
en = "Documentation for functions related to Text in Typst."
zh = "Typst 中与文本相关的函数文档。"

[reference.text.highlight.description]
en = "Documentation for the `highlight` function."
zh = "`highlight` 函数的文档。"

[reference.text.highlight.highlight.body.details]
en = "The content that should be highlighted."
zh = "要突出显示的内容。"

[reference.text.highlight.highlight.bottom-edge.details]
en = "The bottom end of the background rectangle.\n\n"
zh = "背景矩形的底部边缘。\n\n"

[reference.text.highlight.highlight.details]
en = "Highlights text with a background color.\n\n# Example\n```example\nThis is #highlight[important].\n```"
zh = "用背景颜色突出显示文本。\n\n# 示例\n```example\nThis is #highlight[important].\n```"

[reference.text.highlight.highlight.extent.details]
en = "The amount by which to extend the background to the sides beyond\n(or within if negative) the content.\n\n"
zh = "背景要扩展到内容之外（或如果为负数，则扩展到内容之内）的量。\n\n"

[reference.text.highlight.highlight.fill.details]
en = "The color to highlight the text with.\n\n"
zh = "突出显示文本的颜色。\n\n"

[reference.text.highlight.highlight.oneliner]
en = "Highlights text with a background color."
zh = "用背景颜色突出显示文本。"

[reference.text.highlight.highlight.radius.details]
en = "How much to round the highlight's corners. See the\n[rectangle's documentation]($rect.radius) for more details.\n\n"
zh = "突出显示的圆角程度。请参阅 [矩形文档]($rect.radius) 了解更多详细信息。\n\n"

[reference.text.highlight.highlight.stroke.details]
en = "The highlight's border color. See the\n[rectangle's documentation]($rect.stroke) for more details.\n\n"
zh = "突出显示的边框颜色。请参阅 [矩形文档]($rect.stroke) 了解更多详细信息。\n\n"

[reference.text.highlight.highlight.title]
en = "Highlight"
zh = "高亮"

[reference.text.highlight.highlight.top-edge.details]
en = "The top end of the background rectangle.\n\n"
zh = "背景矩形的上边缘。\n\n"

[reference.text.highlight.oneliner]
en = "Highlights text with a background color."
zh = "用背景颜色突出显示文本。"

[reference.text.highlight.title]
en = "Highlight"
zh = "高亮"

[reference.text.linebreak.description]
en = "Documentation for the `linebreak` function."
zh = "`linebreak` 函数的文档。"

[reference.text.linebreak.linebreak.details]
en = "Inserts a line break.\n\nAdvances the paragraph to the next line. A single trailing line break at the\nend of a paragraph is ignored, but more than one creates additional empty\nlines.\n\n# Example\n```example\n*Date:* 26.12.2022 \\\n*Topic:* Infrastructure Test \\\n*Severity:* High \\\n```\n\n# Syntax\nThis function also has dedicated syntax: To insert a line break, simply write\na backslash followed by whitespace. This always creates an unjustified\nbreak."
zh = "插入换行符。\n\n将段落推进到下一行。段落末尾的单个换行符被忽略，但多个换行符会创建额外的空行。\n\n# 示例\n```example\n*Date:* 26.12.2022 \\\n*Topic:* Infrastructure Test \\\n*Severity:* High \\\n```\n\n# 语法\n此函数还具有专门的语法：要插入换行符，只需写一个反斜杠，后跟空格。这总是创建一个不平衡的断行。"

[reference.text.linebreak.linebreak.justify.details]
en = "Whether to justify the line before the break.\n\nThis is useful if you found a better line break opportunity in your\njustified text than Typst did.\n\n"
zh = "是否在换行符前进行对齐。\n\n如果您在已对齐的文本中找到了比 Typst 更好的换行机会，这很有用。\n\n"

[reference.text.linebreak.linebreak.oneliner]
en = "Inserts a line break."
zh = "插入换行符。"

[reference.text.linebreak.linebreak.title]
en = "Line Break"
zh = "换行符"

[reference.text.linebreak.oneliner]
en = "Inserts a line break."
zh = "插入换行符。"

[reference.text.linebreak.title]
en = "Line Break"
zh = "换行符"

[reference.text.lorem.description]
en = "Documentation for the `lorem` function."
zh = "`lorem` 函数的文档。"

[reference.text.lorem.lorem.details]
en = "Creates blind text.\n\nThis function yields a Latin-like _Lorem Ipsum_ blind text with the given\nnumber of words. The sequence of words generated by the function is always\nthe same but randomly chosen. As usual for blind texts, it does not make any\nsense. Use it as a placeholder to try layouts.\n\n# Example\n```example\n= Blind Text\n#lorem(30)\n\n= More Blind Text\n#lorem(15)\n```"
zh = "创建盲文本。\n\n此函数生成一个拉丁风格的 _Lorem Ipsum_ 盲文本，具有给定的单词数。函数生成的单词序列始终相同但随机选择。与盲文本一样，它没有任何意义。将其用作布局的占位符。\n\n# 示例\n```example\n= 盲文本\n#lorem(30)\n\n= 更多盲文本\n#lorem(15)\n```"

[reference.text.lorem.lorem.oneliner]
en = "Creates blind text."
zh = "创建占位文本。"

[reference.text.lorem.lorem.title]
en = "Lorem"
zh = "Lorem"

[reference.text.lorem.lorem.words.details]
en = "The length of the blind text in words."
zh = "盲文本的单词长度。"

[reference.text.lorem.oneliner]
en = "Creates blind text."
zh = "创建占位文本。"

[reference.text.lorem.title]
en = "Lorem"
zh = "Lorem"

[reference.text.lower.description]
en = "Documentation for the `lower` function."
zh = "`lower` 函数的文档。"

[reference.text.lower.lower.details]
en = "Converts a string or content to lowercase.\n\n# Example\n```example\n#lower(\"ABC\") \\\n#lower[*My Text*] \\\n#lower[already low]\n```"
zh = "将字符串或内容转换为小写。\n\n# 示例\n```example\n#lower(\"ABC\") \\\n#lower[*My Text*] \\\n#lower[already low]\n```"

[reference.text.lower.lower.oneliner]
en = "Converts a string or content to lowercase."
zh = "将字符串或内容转换为小写。"

[reference.text.lower.lower.text.details]
en = "The text to convert to lowercase."
zh = "要转换为小写的文本。"

[reference.text.lower.lower.title]
en = "Lowercase"
zh = "小写"

[reference.text.lower.oneliner]
en = "Converts a string or content to lowercase."
zh = "将字符串或内容转换为小写。"

[reference.text.lower.title]
en = "Lowercase"
zh = "小写"

[reference.text.overline.description]
en = "Documentation for the `overline` function."
zh = "`overline` 函数的文档。"

[reference.text.overline.oneliner]
en = "Adds a line over text."
zh = "在文本上添加一条线。"

[reference.text.overline.overline.background.details]
en = "Whether the line is placed behind the content it overlines.\n\n"
zh = "线是否放置在它覆盖的内容之后。\n\n"

[reference.text.overline.overline.body.details]
en = "The content to add a line over."
zh = "要添加一条线的内容。"

[reference.text.overline.overline.details]
en = "Adds a line over text.\n\n# Example\n```example\n#overline[A line over text.]\n```"
zh = "在文本上添加一条线。\n\n# 示例\n```example\n#overline[A line over text.]\n```"

[reference.text.overline.overline.evade.details]
en = "Whether the line skips sections in which it would collide with the\nglyphs.\n\n"
zh = "线是否跳过与字形碰撞的段落。\n\n"

[reference.text.overline.overline.extent.details]
en = "The amount by which to extend the line beyond (or within if negative)\nthe content.\n\n"
zh = "线要扩展到内容之外（或如果为负数，则扩展到内容之内）的量。\n\n"

[reference.text.overline.overline.offset.details]
en = "The position of the line relative to the baseline. Read from the font\ntables if `{auto}`.\n\n"
zh = "线相对于基线的位置。如果设置为 `{auto}`，则从字体表中读取。\n\n"

[reference.text.overline.overline.oneliner]
en = "Adds a line over text."
zh = "在文本上添加一条线。"

[reference.text.overline.overline.stroke.details]
en = "How to [stroke] the line.\n\nIf set to `{auto}`, takes on the text's color and a thickness defined in\nthe current font.\n\n"
zh = "如何 [stroke] 线。\n\n如果设置为 `{auto}`，则采用文本的颜色和当前字体中定义的厚度。\n\n"

[reference.text.overline.overline.title]
en = "Overline"
zh = "上划线"

[reference.text.overline.title]
en = "Overline"
zh = "上划线"

[reference.text.raw.description]
en = "Documentation for the `raw` function."
zh = "`raw` 函数的文档。"

[reference.text.raw.oneliner]
en = "Raw text with optional syntax highlighting."
zh = "原始文本，可选的语法高亮。"

[reference.text.raw.raw.align.details]
en = "The horizontal alignment that each line in a raw block should have.\nThis option is ignored if this is not a raw block (if specified\n`block: false` or single backticks were used in markup mode).\n\nBy default, this is set to `{start}`, meaning that raw text is\naligned towards the start of the text direction inside the block\nby default, regardless of the current context's alignment (allowing\nyou to center the raw block itself without centering the text inside\nit, for example).\n\n"
zh = "每个原始块中每行应具有的水平对齐方式。如果这不是原始块（如果指定 `block: false` 或标记模式中使用了单个反斜杠），则忽略此选项。\n\n默认情况下，这设置为 `{start}`，表示原始文本默认情况下沿块内文本方向对齐，而不管当前上下文的对其方式（例如，允许您在不居中块内文本的情况下居中原始块本身）。\n\n"

[reference.text.raw.raw.block.details]
en = "Whether the raw text is displayed as a separate block.\n\nIn markup mode, using one-backtick notation makes this `{false}`.\nUsing three-backtick notation makes it `{true}` if the enclosed content\ncontains at least one line break.\n\n"
zh = "原始文本是否作为单独的块显示。\n\n在标记模式中，使用一个反斜杠表示法会使其 `{false}`。使用三个反斜杠表示法，如果封闭内容包含至少一个换行符，则使其 `{true}`。\n\n"

[reference.text.raw.raw.details]
en = "{{typst-docs/reference.text.raw.raw.details.toml}}"

[reference.text.raw.raw.lang.details]
en = "The language to syntax-highlight in.\n\nApart from typical language tags known from Markdown, this supports the\n`{\"typ\"}`, `{\"typc\"}`, and `{\"typm\"}` tags for\n[Typst markup]($reference/syntax/#markup),\n[Typst code]($reference/syntax/#code), and\n[Typst math]($reference/syntax/#math), respectively.\n\n"
zh = "要进行语法高亮的语言。\n\n除了典型的 Markdown 语言标签外，还支持 `{\"typ\"}`、`{\"typc\"}` 和 `{\"typm\"}` 标签，分别用于 [Typst 标记]($reference/syntax/#markup)、[Typst 代码]($reference/syntax/#code) 和 [Typst 数学]($reference/syntax/#math)。\n\n"

[reference.text.raw.raw.line.body.details]
en = "The highlighted raw text."
zh = "高亮的原始文本。"

[reference.text.raw.raw.line.count.details]
en = "The total number of lines in the raw block."
zh = "原始块中的总行数。"

[reference.text.raw.raw.line.details]
en = "A highlighted line of raw text.\n\nThis is a helper element that is synthesized by [`raw`] elements.\n\nIt allows you to access various properties of the line, such as the line\nnumber, the raw non-highlighted text, the highlighted text, and whether it\nis the first or last line of the raw block."
zh = "高亮的原始文本行。\n\n这是一个由 [`raw`] 元素合成的辅助元素。\n\n它允许您访问行的各种属性，例如行号、原始未高亮的文本、高亮的文本，以及它是否是原始块的第一行或最后一行。"

[reference.text.raw.raw.line.number.details]
en = "The line number of the raw line inside of the raw block, starts at 1."
zh = "原始块中原始行的行号，从 1 开始。"

[reference.text.raw.raw.line.oneliner]
en = "A highlighted line of raw text."
zh = "高亮的原始文本行。"

[reference.text.raw.raw.line.text.details]
en = "The line of raw text."
zh = "原始文本行。"

[reference.text.raw.raw.line.title]
en = "Raw Text / Code Line"
zh = "原始文本 / 代码行"

[reference.text.raw.raw.oneliner]
en = "Raw text with optional syntax highlighting."
zh = "原始文本，可选的语法高亮。"

[reference.text.raw.raw.syntaxes.details]
en = "Additional syntax definitions to load. The syntax definitions should be\nin the [`sublime-syntax` file format](https://www.sublimetext.com/docs/syntax.html).\n\nYou can pass any of the following values:\n\n- A path string to load a syntax file from the given path. For more\n  details about paths, see the [Paths section]($syntax/#paths).\n- Raw bytes from which the syntax should be decoded.\n- An array where each item is one the above.\n\n"
zh = "要加载的其他语法定义。语法定义应采用 [`sublime-syntax` 文件格式](https://www.sublimetext.com/docs/syntax.html)。\n\n您可以传递以下任何值：\n\n- 一个路径字符串，从给定路径加载一个语法文件。有关路径的更多详细信息，请参阅 [路径部分]($syntax/#paths)。\n- 原始字节，从中解码语法。\n- 一个数组，其中每个项目是上述之一。\n\n"

[reference.text.raw.raw.tab-size.details]
en = "The size for a tab stop in spaces. A tab is replaced with enough spaces to\nalign with the next multiple of the size.\n\n"
zh = "制表符停止的大小（以空格为单位）。制表符被替换为足够的空格，以与下一个倍数对齐。\n\n"

[reference.text.raw.raw.text.details]
en = "The raw text.\n\nYou can also use raw blocks creatively to create custom syntaxes for\nyour automations.\n\n"
zh = "原始文本。\n\n您还可以创意地使用原始块来为您的自动化创建自定义语法。\n\n"

[reference.text.raw.raw.theme.details]
en = "The theme to use for syntax highlighting. Themes should be in the\n[`tmTheme` file format](https://www.sublimetext.com/docs/color_schemes_tmtheme.html).\n\nYou can pass any of the following values:\n\n- `{none}`: Disables syntax highlighting.\n- `{auto}`: Highlights with Typst's default theme.\n- A path string to load a theme file from the given path. For more\n  details about paths, see the [Paths section]($syntax/#paths).\n- Raw bytes from which the theme should be decoded.\n\nApplying a theme only affects the color of specifically highlighted\ntext. It does not consider the theme's foreground and background\nproperties, so that you retain control over the color of raw text. You\ncan apply the foreground color yourself with the [`text`] function and\nthe background with a [filled block]($block.fill). You could also use\nthe [`xml`] function to extract these properties from the theme.\n\n"
zh = "用于语法高亮的主题。主题应采用 [`tmTheme` 文件格式](https://www.sublimetext.com/docs/color_schemes_tmtheme.html)。\n\n您可以传递以下任何值：\n\n- `{none}`: 禁用语法高亮。\n- `{auto}`: 使用 Typst 的默认主题。\n- 一个路径字符串，从给定路径加载一个主题文件。有关路径的更多详细信息，请参阅 [路径部分]($syntax/#paths)。\n- 原始字节，从中解码主题。\n\n应用主题只会影响特定高亮文本的颜色。它不考虑主题的前景色和背景色属性，因此您可以控制原始文本的颜色。您可以使用 [`text`] 函数自己应用前景色，并使用 [填充块]($block.fill) 应用背景色。您还可以使用 [`xml`] 函数从主题中提取这些属性。\n\n"

[reference.text.raw.raw.title]
en = "Raw Text / Code"
zh = "原始文本 / 代码"

[reference.text.raw.title]
en = "Raw Text / Code"
zh = "原始文本 / 代码"

[reference.text.smallcaps.description]
en = "Documentation for the `smallcaps` function."
zh = "`smallcaps` 函数的文档。"

[reference.text.smallcaps.oneliner]
en = "Displays text in small capitals."
zh = "显示小写大写字母。"

[reference.text.smallcaps.smallcaps.all.details]
en = "Whether to turn uppercase letters into small capitals as well.\n\nUnless overridden by a show rule, this enables the `c2sc` OpenType\nfeature.\n\n"
zh = "是否也将大写字母转换为小写大写字母。\n\n除非被显示规则覆盖，否则这会启用 `c2sc` OpenType 功能。\n\n"

[reference.text.smallcaps.smallcaps.body.details]
en = "The content to display in small capitals."
zh = "要显示的小写大写字母内容。"

[reference.text.smallcaps.smallcaps.details]
en = "{{typst-docs/reference.text.smallcaps.smallcaps.details.toml}}"

[reference.text.smallcaps.smallcaps.oneliner]
en = "Displays text in small capitals."
zh = "显示小写大写字母。"

[reference.text.smallcaps.smallcaps.title]
en = "Small Capitals"
zh = "小写大写字母"

[reference.text.smallcaps.title]
en = "Small Capitals"
zh = "小写大写字母"

[reference.text.smartquote.description]
en = "Documentation for the `smartquote` function."
zh = "`smartquote` 函数的文档。"

[reference.text.smartquote.oneliner]
en = "A language-aware quote that reacts to its context."
zh = "一种语言感知的引用，会根据其上下文做出反应。"

[reference.text.smartquote.smartquote.alternative.details]
en = "Whether to use alternative quotes.\n\nDoes nothing for languages that don't have alternative quotes, or if\nexplicit quotes were set.\n\n"
zh = "是否使用替代引号。\n\n对于没有替代引号的语言，或者如果显式设置了引号，则不起作用。\n\n"

[reference.text.smartquote.smartquote.details]
en = "{{typst-docs/reference.text.smartquote.smartquote.details.toml}}"

[reference.text.smartquote.smartquote.double.details]
en = "Whether this should be a double quote."
zh = "是否应该是一个双引号。"

[reference.text.smartquote.smartquote.enabled.details]
en = "Whether smart quotes are enabled.\n\nTo disable smartness for a single quote, you can also escape it with a\nbackslash.\n\n"
zh = "是否启用智能引号。\n\n要为单个引号禁用智能功能，您还可以使用反斜杠转义它。\n\n"

[reference.text.smartquote.smartquote.oneliner]
en = "A language-aware quote that reacts to its context."
zh = "一种语言感知的引用，会根据其上下文做出反应。"

[reference.text.smartquote.smartquote.quotes.details]
en = "The quotes to use.\n\n- When set to `{auto}`, the appropriate single quotes for the\n  [text language]($text.lang) will be used. This is the default.\n- Custom quotes can be passed as a string, array, or dictionary of either\n  - [string]($str): a string consisting of two characters containing the\n    opening and closing double quotes (characters here refer to Unicode\n    grapheme clusters)\n  - [array]: an array containing the opening and closing double quotes\n  - [dictionary]: an array containing the double and single quotes, each\n    specified as either `{auto}`, string, or array\n\n"
zh = "要使用的引号。\n\n- 当设置为 `{auto}` 时，将使用与 [文本语言]($text.lang) 相适应的单引号。这是默认值。\n- 自定义引号可以作为字符串、数组或「字典」（[dictionary](#x-term-dictionary)）传递，其中包含以下内容：\n  - [string]($str): 一个包含两个字符的字符串，分别包含开闭双引号（此处字符指的是 Unicode 字形簇）\n  - [array]: 一个包含开闭双引号的数组\n  - [dictionary]: 一个包含双引号和单引号的数组，每个引号指定为 `{auto}`、字符串或数组\n\n"

[reference.text.smartquote.smartquote.title]
en = "Smartquote"
zh = "智能引号"

[reference.text.smartquote.title]
en = "Smartquote"
zh = "智能引号"

[reference.text.strike.description]
en = "Documentation for the `strike` function."
zh = "`strike` 函数的文档。"

[reference.text.strike.oneliner]
en = "Strikes through text."
zh = "划掉文本。"

[reference.text.strike.strike.background.details]
en = "Whether the line is placed behind the content.\n\n"
zh = "线是否放置在它覆盖的内容之后。\n\n"

[reference.text.strike.strike.body.details]
en = "The content to strike through."
zh = "要划掉的文本。"

[reference.text.strike.strike.details]
en = "Strikes through text.\n\n# Example\n```example\nThis is #strike[not] relevant.\n```"
zh = "划掉文本。\n\n# 示例\n```example\nThis is #strike[not] relevant.\n```"

[reference.text.strike.strike.extent.details]
en = "The amount by which to extend the line beyond (or within if negative)\nthe content.\n\n"
zh = "线要扩展到内容之外（或如果为负数，则扩展到内容之内）的量。\n\n"

[reference.text.strike.strike.offset.details]
en = "The position of the line relative to the baseline. Read from the font\ntables if `{auto}`.\n\nThis is useful if you are unhappy with the offset your font provides.\n\n"
zh = "线相对于基线的位置。如果设置为 `{auto}`，则从字体表中读取。\n\n如果您对字体提供的偏移量不满意，这很有用。\n\n"

[reference.text.strike.strike.oneliner]
en = "Strikes through text."
zh = "划掉文本。"

[reference.text.strike.strike.stroke.details]
en = "How to [stroke] the line.\n\nIf set to `{auto}`, takes on the text's color and a thickness defined in\nthe current font.\n\n_Note:_ Please don't use this for real redaction as you can still copy\npaste the text.\n\n"
zh = "如何 [stroke] 线。\n\n如果设置为 `{auto}`，则采用文本的颜色和当前字体中定义的厚度。\n\n_注意:_ 请不要使用此功能进行真正的删除，因为您仍然可以复制粘贴文本。\n\n"

[reference.text.strike.strike.title]
en = "Strikethrough"
zh = "划掉"

[reference.text.strike.title]
en = "Strikethrough"
zh = "划掉"

[reference.text.sub.description]
en = "Documentation for the `sub` function."
zh = "`sub` 函数的文档。"

[reference.text.sub.oneliner]
en = "Renders text in subscript."
zh = "渲染文本为下标。"

[reference.text.sub.sub.baseline.details]
en = "The baseline shift for synthetic subscripts. Does not apply if\n`typographic` is true and the font has subscript codepoints for the\ngiven `body`."
zh = "合成下标的基线偏移。如果 `typographic` 为真且字体有给定 `body` 的子脚本代码点，则不适用。"

[reference.text.sub.sub.body.details]
en = "The text to display in subscript."
zh = "要显示的下标文本。"

[reference.text.sub.sub.details]
en = "Renders text in subscript.\n\nThe text is rendered smaller and its baseline is lowered.\n\n# Example\n```example\nRevenue#sub[yearly]\n```"
zh = "渲染文本为下标。\n\n文本渲染得更小，其基线降低。\n\n# 示例\n```example\nRevenue#sub[yearly]\n```"

[reference.text.sub.sub.oneliner]
en = "Renders text in subscript."
zh = "渲染文本为下标。"

[reference.text.sub.sub.size.details]
en = "The font size for synthetic subscripts. Does not apply if\n`typographic` is true and the font has subscript codepoints for the\ngiven `body`."
zh = "合成下标的字体大小。如果 `typographic` 为真且字体有给定 `body` 的子脚本代码点，则不适用。"

[reference.text.sub.sub.title]
en = "Subscript"
zh = "下标"

[reference.text.sub.sub.typographic.details]
en = "Whether to prefer the dedicated subscript characters of the font.\n\nIf this is enabled, Typst first tries to transform the text to subscript\ncodepoints. If that fails, it falls back to rendering lowered and shrunk\nnormal letters.\n\n"
zh = "是否优先使用字体的专用下标字符。\n\n如果启用，Typst 首先尝试将文本转换为子脚本代码点。如果失败，它将回退到渲染降低和缩小的正常字母。\n\n"

[reference.text.sub.title]
en = "Subscript"
zh = "下标"

[reference.text.super.description]
en = "Documentation for the `super` function."
zh = "`super` 函数的文档。"

[reference.text.super.oneliner]
en = "Renders text in superscript."
zh = "渲染文本为上标。"

[reference.text.super.super.baseline.details]
en = "The baseline shift for synthetic superscripts. Does not apply if\n`typographic` is true and the font has superscript codepoints for the\ngiven `body`."
zh = "合成上标的基线偏移。如果 `typographic` 为真且字体有给定 `body` 的上标代码点，则不适用。"

[reference.text.super.super.body.details]
en = "The text to display in superscript."
zh = "要显示的上标文本。"

[reference.text.super.super.details]
en = "Renders text in superscript.\n\nThe text is rendered smaller and its baseline is raised.\n\n# Example\n```example\n1#super[st] try!\n```"
zh = "渲染文本为上标。\n\n文本渲染得更小，其基线提高。\n\n# 示例\n```example\n1#super[st] try!\n```"

[reference.text.super.super.oneliner]
en = "Renders text in superscript."
zh = "渲染文本为上标。"

[reference.text.super.super.size.details]
en = "The font size for synthetic superscripts. Does not apply if\n`typographic` is true and the font has superscript codepoints for the\ngiven `body`."
zh = "合成上标的字体大小。如果 `typographic` 为真且字体有给定 `body` 的上标代码点，则不适用。"

[reference.text.super.super.title]
en = "Superscript"
zh = "上标"

[reference.text.super.super.typographic.details]
en = "Whether to prefer the dedicated superscript characters of the font.\n\nIf this is enabled, Typst first tries to transform the text to\nsuperscript codepoints. If that fails, it falls back to rendering\nraised and shrunk normal letters.\n\n"
zh = "是否优先使用字体的专用上标字符。\n\n如果启用，Typst 首先尝试将文本转换为上标代码点。如果失败，它将回退到渲染提高和缩小的正常字母。\n\n"

[reference.text.super.title]
en = "Superscript"
zh = "上标"

[reference.text.text.description]
en = "Documentation for the `text` function."
zh = "`text` 函数的文档。"

[reference.text.text.details]
en = "Text styling.\n\nThe [text function]($text) is of particular interest.\n"
zh = "文本样式。\n\n[text 函数]($text) 特别有趣。\n"

[reference.text.text.oneliner]
en = "Customizes the look and layout of text in a variety of ways."
zh = "以多种方式自定义文本的外观和布局。"

[reference.text.text.text.alternates.details]
en = "Whether to apply stylistic alternates.\n\nSometimes fonts contain alternative glyphs for the same codepoint.\nSetting this to `{true}` switches to these by enabling the OpenType\n`salt` font feature.\n\n"
zh = "是否应用样式替代。\n\n有时字体包含相同代码点的替代字形。将此设置为 `{true}` 通过启用 OpenType `salt` 字体功能来切换到这些。\n\n"

[reference.text.text.text.baseline.details]
en = "An amount to shift the text baseline by.\n\n"
zh = "文本基线偏移量。\n\n"

[reference.text.text.text.body.details]
en = "Content in which all text is styled according to the other arguments."
zh = "所有文本都根据其他参数进行样式的内容。"

[reference.text.text.text.bottom-edge.details]
en = "The bottom end of the conceptual frame around the text used for layout\nand positioning. This affects the size of containers that hold text.\n\n"
zh = "文本布局和定位所使用的概念框架的底部边缘。这会影响容纳文本的容器的尺寸。\n\n"

[reference.text.text.text.cjk-latin-spacing.details]
en = "Whether to automatically insert spacing between CJK and Latin characters.\n\n"
zh = "是否自动插入 CJK 和拉丁字符之间的间距。\n\n"

[reference.text.text.text.costs.details]
en = "{{typst-docs/reference.text.text.text.costs.details.toml}}"

[reference.text.text.text.details]
en = "Customizes the look and layout of text in a variety of ways.\n\nThis function is used frequently, both with set rules and directly. While\nthe set rule is often the simpler choice, calling the `text` function\ndirectly can be useful when passing text as an argument to another function.\n\n# Example\n```example\n#set text(18pt)\nWith a set rule.\n\n#emph(text(blue)[\n  With a function call.\n])\n```"
zh = "以多种方式自定义文本的外观和布局。\n\n此函数经常与设置规则一起使用，也可以直接调用。虽然设置规则通常是更简单的选择，但当将文本作为参数传递给另一个函数时，直接调用 `text` 函数可能很有用。\n\n# 示例\n```example\n#set text(18pt)\nWith a set rule.\n\n#emph(text(blue)[\n  With a function call.\n])\n```"

[reference.text.text.text.dir.details]
en = "The dominant direction for text and inline objects. Possible values are:\n\n- `{auto}`: Automatically infer the direction from the `lang` property.\n- `{ltr}`: Layout text from left to right.\n- `{rtl}`: Layout text from right to left.\n\nWhen writing in right-to-left scripts like Arabic or Hebrew, you should\nset the [text language]($text.lang) or direction. While individual runs\nof text are automatically layouted in the correct direction, setting the\ndominant direction gives the bidirectional reordering algorithm the\nnecessary information to correctly place punctuation and inline objects.\nFurthermore, setting the direction affects the alignment values `start`\nand `end`, which are equivalent to `left` and `right` in `ltr` text and\nthe other way around in `rtl` text.\n\nIf you set this to `rtl` and experience bugs or in some way bad looking\noutput, please get in touch with us through the\n[Forum](https://forum.typst.app/),\n[Discord server](https://discord.gg/2uDybryKPe),\nor our [contact form](https://typst.app/contact).\n\n"
zh = "文本和内联对象的主要方向。可能的值是：\n\n- `{auto}`: 自动从 `lang` 属性推断方向。\n- `{ltr}`: 从左到右布局文本。\n- `{rtl}`: 从右到左布局文本。\n\n当用阿拉伯语或希伯来语等从右到左的脚本写作时，您应该设置 [文本语言]($text.lang) 或方向。虽然单个文本行会自动以正确的方向布局，但设置主导方向会为双向重新排序算法提供必要的信息，以正确放置标点和内联对象。此外，设置方向会影响对齐值 `start` 和 `end`，它们在 `ltr` 文本中相当于 `left` 和 `right`，而在 `rtl` 文本中则相反。\n\n如果您将此设置为 `rtl` 并遇到错误或输出看起来不好，请通过 [论坛]($forum)、[Discord 服务器]($discord) 或 [联系表单]($contact) 与我们联系。\n\n"

[reference.text.text.text.discretionary-ligatures.details]
en = "Whether ligatures that should be used sparingly are active. Setting this\nto `{true}` enables the OpenType `dlig` font feature."
zh = "是否启用需要谨慎使用的连字。将此设置为 `{true}` 会启用 OpenType `dlig` 字体功能。"

[reference.text.text.text.fallback.details]
en = "Whether to allow last resort font fallback when the primary font list\ncontains no match. This lets Typst search through all available fonts\nfor the most similar one that has the necessary glyphs.\n\n_Note:_ Currently, there are no warnings when fallback is disabled and\nno glyphs are found. Instead, your text shows up in the form of \"tofus\":\nSmall boxes that indicate the lack of an appropriate glyph. In the\nfuture, you will be able to instruct Typst to issue warnings so you know\nsomething is up.\n\n"
zh = "是否允许在主字体列表中没有匹配时使用后备字体。这允许 Typst 搜索所有可用字体，找到最相似的一个，该字体具有必要的字形。\n\n_注意:_ 目前，当后备字体禁用且没有找到字形时，没有警告。相反，您的文本以“豆腐”的形式出现：小方框，表示缺少适当的字形。将来，您将能够指示 Typst 发出警告，以便您知道发生了什么。\n\n"

[reference.text.text.text.features.details]
en = "Raw OpenType features to apply.\n\n- If given an array of strings, sets the features identified by the\n  strings to `{1}`.\n- If given a dictionary mapping to numbers, sets the features\n  identified by the keys to the values.\n\n"
zh = "要应用的原始 OpenType 功能。\n\n- 如果给定一个字符串数组，将字符串标识的功能设置为 `{1}`。\n- 如果给定一个映射到数字的「字典」（[dictionary](#x-term-dictionary)），将字符串标识的功能设置为值。\n\n"

[reference.text.text.text.fill.details]
en = "The glyph fill paint.\n\n"
zh = "字形填充画笔。\n\n"

[reference.text.text.text.font.details]
en = "{{typst-docs/reference.text.text.text.font.details.toml}}"

[reference.text.text.text.fractions.details]
en = "Whether to turn numbers into fractions. Setting this to `{true}`\nenables the OpenType `frac` font feature.\n\nIt is not advisable to enable this property globally as it will mess\nwith all appearances of numbers after a slash (e.g., in URLs). Instead,\nenable it locally when you want a fraction.\n\n"
zh = "是否将数字转换为分数。将此设置为 `{true}` 会启用 OpenType `frac` 字体功能。\n\n不建议全局启用此属性，因为它会破坏所有带斜杠的数字（例如，在 URL 中）的外观。相反，当您想要一个分数时，在本地启用它。\n\n"

[reference.text.text.text.historical-ligatures.details]
en = "Whether historical ligatures are active. Setting this to `{true}`\nenables the OpenType `hlig` font feature."
zh = "是否启用历史连字。将此设置为 `{true}` 会启用 OpenType `hlig` 字体功能。"

[reference.text.text.text.hyphenate.details]
en = "Whether to hyphenate text to improve line breaking. When `{auto}`, text\nwill be hyphenated if and only if justification is enabled.\n\nSetting the [text language]($text.lang) ensures that the correct\nhyphenation patterns are used.\n\n"
zh = "是否断字以改善换行。当 `{auto}` 时，只有在启用换行时才会断字。\n\n设置 [文本语言]($text.lang) 确保使用正确的断字模式。\n\n"

[reference.text.text.text.kerning.details]
en = "Whether to apply kerning.\n\nWhen enabled, specific letter pairings move closer together or further\napart for a more visually pleasing result. The example below\ndemonstrates how decreasing the gap between the \"T\" and \"o\" results in a\nmore natural look. Setting this to `{false}` disables kerning by turning\noff the OpenType `kern` font feature.\n\n"
zh = "是否应用字距调整。\n\n当启用时，特定的字母对会靠近或远离，以获得更视觉上令人愉悦的结果。下面的示例演示了如何减小“T”和“o”之间的间距，以获得更自然的效果。将此设置为 `{false}` 通过关闭 OpenType `kern` 字体功能来禁用字距调整。\n\n"

[reference.text.text.text.lang.details]
en = "An [ISO 639-1/2/3 language code.](https://en.wikipedia.org/wiki/ISO_639)\n\nSetting the correct language affects various parts of Typst:\n\n- The text processing pipeline can make more informed choices.\n- Hyphenation will use the correct patterns for the language.\n- [Smart quotes]($smartquote) turns into the correct quotes for the\n  language.\n- And all other things which are language-aware.\n\n"
zh = "一个 [ISO 639-1/2/3 语言代码。](https://en.wikipedia.org/wiki/ISO_639)\n\n设置正确的语言会影响 Typst 的各个部分：\n\n- 文本处理管道可以做出更明智的选择。\n- 断字将使用正确的语言模式。\n- [智能引号]($smartquote) 变成正确的引号。\n- 以及所有其他语言感知的事物。\n\n"

[reference.text.text.text.ligatures.details]
en = "Whether standard ligatures are active.\n\nCertain letter combinations like \"fi\" are often displayed as a single\nmerged glyph called a _ligature._ Setting this to `{false}` disables\nthese ligatures by turning off the OpenType `liga` and `clig` font\nfeatures.\n\n"
zh = "是否启用标准连字。\n\n某些字母组合（如“fi”）通常显示为单个合并字形，称为 _连字。_ 将此设置为 `{false}` 通过关闭 OpenType `liga` 和 `clig` 字体功能来禁用这些连字。\n\n"

[reference.text.text.text.number-type.details]
en = "Which kind of numbers / figures to select. When set to `{auto}`, the\ndefault numbers for the font are used.\n\n"
zh = "选择哪种数字/数字。当设置为 `{auto}` 时，使用字体的默认数字。\n\n"

[reference.text.text.text.number-width.details]
en = "The width of numbers / figures. When set to `{auto}`, the default\nnumbers for the font are used.\n\n"
zh = "数字/数字的宽度。当设置为 `{auto}` 时，使用字体的默认数字。\n\n"

[reference.text.text.text.oneliner]
en = "Customizes the look and layout of text in a variety of ways."
zh = "以多种方式自定义文本的外观和布局。"

[reference.text.text.text.overhang.details]
en = "Whether certain glyphs can hang over into the margin in justified text.\nThis can make justification visually more pleasing.\n\n"
zh = "是否允许某些字形在换行文本中超出边距。这可以使换行看起来更令人愉悦。\n\n"

[reference.text.text.text.region.details]
en = "An [ISO 3166-1 alpha-2 region code.](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n\nThis lets the text processing pipeline make more informed choices."
zh = "一个 [ISO 3166-1 alpha-2 区域代码。](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n\n这允许文本处理管道做出更明智的选择。"

[reference.text.text.text.script.details]
en = "The OpenType writing script.\n\nThe combination of `{lang}` and `{script}` determine how font features,\nsuch as glyph substitution, are implemented. Frequently the value is a\nmodified (all-lowercase) ISO 15924 script identifier, and the `math`\nwriting script is used for features appropriate for mathematical\nsymbols.\n\nWhen set to `{auto}`, the default and recommended setting, an\nappropriate script is chosen for each block of characters sharing a\ncommon Unicode script property.\n\n"
zh = "OpenType 书写脚本。\n\n`{lang}` 和 `{script}` 的组合决定了字体功能（如字形替换）的实现方式。通常值是一个修改过的（全部小写的）ISO 15924 脚本标识符，而 `math` 书写脚本用于适合数学符号的功能。\n\n当设置为 `{auto}` 时，默认和推荐设置，为每个共享共同 Unicode 脚本属性的字符块选择一个合适的脚本。\n\n"

[reference.text.text.text.size.details]
en = "The size of the glyphs. This value forms the basis of the `em` unit:\n`{1em}` is equivalent to the font size.\n\nYou can also give the font size itself in `em` units. Then, it is\nrelative to the previous font size.\n\n"
zh = "字形的尺寸。这个值构成了 `em` 单位的基础：`{1em}` 相当于字体大小。\n\n您也可以以 `em` 单位给出字体大小本身。然后，它相对于前一个字体大小。\n\n"

[reference.text.text.text.slashed-zero.details]
en = "Whether to have a slash through the zero glyph. Setting this to `{true}`\nenables the OpenType `zero` font feature.\n\n"
zh = "是否在零字形上添加斜杠。将此设置为 `{true}` 会启用 OpenType `zero` 字体功能。\n\n"

[reference.text.text.text.spacing.details]
en = "The amount of space between words.\n\nCan be given as an absolute length, but also relative to the width of\nthe space character in the font.\n\nIf you want to adjust the amount of space between characters rather than\nwords, use the [`tracking`]($text.tracking) property instead.\n\n"
zh = "单词之间的间距。\n\n可以是绝对长度，也可以是相对于字体中空格字符的宽度。\n\n如果您想调整字符之间的间距而不是单词之间的间距，请使用 [`tracking`]($text.tracking) 属性。\n\n"

[reference.text.text.text.stretch.details]
en = "The desired width of the glyphs. Accepts a ratio between `{50%}` and\n`{200%}`. When the desired width is not available, Typst selects the\nfont from the family that is closest in stretch. This will only stretch\nthe text if a condensed or expanded version of the font is available.\n\nIf you want to adjust the amount of space between characters instead of\nstretching the glyphs itself, use the [`tracking`]($text.tracking)\nproperty instead.\n\n"
zh = "字形的所需宽度。接受 `{50%}` 和 `{200%}` 之间的比率。当所需宽度不可用时，Typst 从拉伸最接近的字体家族中选择字体。这将仅拉伸文本，如果字体有缩写或扩展版本。\n\n如果您想调整字符之间的间距而不是拉伸字形本身，请使用 [`tracking`]($text.tracking) 属性。\n\n"

[reference.text.text.text.stroke.details]
en = "How to stroke the text.\n\n"
zh = "如何描边文本。\n\n"

[reference.text.text.text.style.details]
en = "The desired font style.\n\nWhen an italic style is requested and only an oblique one is available,\nit is used. Similarly, the other way around, an italic style can stand\nin for an oblique one.  When neither an italic nor an oblique style is\navailable, Typst selects the normal style. Since most fonts are only\navailable either in an italic or oblique style, the difference between\nitalic and oblique style is rarely observable.\n\nIf you want to emphasize your text, you should do so using the [emph]\nfunction instead. This makes it easy to adapt the style later if you\nchange your mind about how to signify the emphasis.\n\n"
zh = "所需的字体样式。\n\n当请求斜体样式但只有倾斜样式可用时，使用倾斜样式。同样，反过来，斜体样式可以代替倾斜样式。当没有斜体或倾斜样式可用时，Typst 选择正常样式。由于大多数字体只有斜体或倾斜样式可用，斜体和倾斜样式之间的差异很少可见。\n\n如果您想强调您的文本，您应该使用 [emph] 函数来实现。这使得以后更容易适应样式，如果您改变对如何表示强调的想法。\n\n"

[reference.text.text.text.stylistic-set.details]
en = "Which stylistic sets to apply. Font designers can categorize alternative\nglyphs forms into stylistic sets. As this value is highly font-specific,\nyou need to consult your font to know which sets are available.\n\nThis can be set to an integer or an array of integers, all\nof which must be between `{1}` and `{20}`, enabling the\ncorresponding OpenType feature(s) from `ss01` to `ss20`.\nSetting this to `{none}` will disable all stylistic sets.\n\n"
zh = "应用哪种样式集。字体设计师可以将替代字形形式分类为样式集。由于此值高度字体特定，您需要咨询您的字体以了解哪些集可用。\n\n这可以设置为整数或整数数组，所有整数都必须介于 `{1}` 和 `{20}` 之间，启用从 `ss01` 到 `ss20` 的相应 OpenType 功能。将此设置为 `{none}` 将禁用所有样式集。\n\n"

[reference.text.text.text.text.details]
en = "The text."
zh = "文本。"

[reference.text.text.text.title]
en = "Text"
zh = "文本"

[reference.text.text.text.top-edge.details]
en = "The top end of the conceptual frame around the text used for layout and\npositioning. This affects the size of containers that hold text.\n\n"
zh = "文本布局和定位所使用的概念框架的顶部边缘。这会影响容纳文本的容器的尺寸。\n\n"

[reference.text.text.text.tracking.details]
en = "The amount of space that should be added between characters.\n\n"
zh = "字符之间应添加的间距。\n\n"

[reference.text.text.text.weight.details]
en = "The desired thickness of the font's glyphs. Accepts an integer between\n`{100}` and `{900}` or one of the predefined weight names. When the\ndesired weight is not available, Typst selects the font from the family\nthat is closest in weight.\n\nIf you want to strongly emphasize your text, you should do so using the\n[strong] function instead. This makes it easy to adapt the style later\nif you change your mind about how to signify the strong emphasis.\n\n"
zh = "字形的所需厚度。接受介于 `{100}` 和 `{900}` 之间的整数或一个预定义的重量名称。当所需重量不可用时，Typst 从重量最接近的字体家族中选择字体。\n\n如果您想强烈强调您的文本，您应该使用 [strong] 函数来实现。这使得以后更容易适应样式，如果您改变对如何表示强烈强调的想法。\n\n"

[reference.text.text.title]
en = "Text"
zh = "文本"

[reference.text.title]
en = "Text"
zh = "文本"

[reference.text.underline.description]
en = "Documentation for the `underline` function."
zh = "`underline` 函数的文档。"

[reference.text.underline.oneliner]
en = "Underlines text."
zh = "下划线文本。"

[reference.text.underline.title]
en = "Underline"
zh = "下划线"

[reference.text.underline.underline.background.details]
en = "Whether the line is placed behind the content it underlines.\n\n"
zh = "是否将线条放置在它下划线的内容后面。\n\n"

[reference.text.underline.underline.body.details]
en = "The content to underline."
zh = "要下划线的内容。"

[reference.text.underline.underline.details]
en = "Underlines text.\n\n# Example\n```example\nThis is #underline[important].\n```"
zh = "下划线文本。\n\n# 示例\n```example\nThis is #underline[important].\n```"

[reference.text.underline.underline.evade.details]
en = "Whether the line skips sections in which it would collide with the\nglyphs.\n\n"
zh = "是否在线条与字形碰撞时跳过这些部分。\n\n"

[reference.text.underline.underline.extent.details]
en = "The amount by which to extend the line beyond (or within if negative)\nthe content.\n\n"
zh = "线条超出（或如果为负数则在内）内容的量。\n\n"

[reference.text.underline.underline.offset.details]
en = "The position of the line relative to the baseline, read from the font\ntables if `{auto}`.\n\n"
zh = "线条相对于基线的位置，如果 `{auto}` 则从字体表中读取。\n\n"

[reference.text.underline.underline.oneliner]
en = "Underlines text."
zh = "下划线文本。"

[reference.text.underline.underline.stroke.details]
en = "How to [stroke] the line.\n\nIf set to `{auto}`, takes on the text's color and a thickness defined in\nthe current font.\n\n"
zh = "如何描边线条。\n\n如果设置为 `{auto}`，则采用文本的颜色和当前字体中定义的厚度。\n\n"

[reference.text.underline.underline.title]
en = "Underline"
zh = "下划线"

[reference.text.upper.description]
en = "Documentation for the `upper` function."
zh = "`upper` 函数的文档。"

[reference.text.upper.oneliner]
en = "Converts a string or content to uppercase."
zh = "将字符串或内容转换为大写。"

[reference.text.upper.title]
en = "Uppercase"
zh = "大写"

[reference.text.upper.upper.details]
en = "Converts a string or content to uppercase.\n\n# Example\n```example\n#upper(\"abc\") \\\n#upper[*my text*] \\\n#upper[ALREADY HIGH]\n```"
zh = "将字符串或内容转换为大写。\n\n# 示例\n```example\n#upper(\"abc\") \\\n#upper[*my text*] \\\n#upper[ALREADY HIGH]\n```"

[reference.text.upper.upper.oneliner]
en = "Converts a string or content to uppercase."
zh = "将字符串或内容转换为大写。"

[reference.text.upper.upper.text.details]
en = "The text to convert to uppercase."
zh = "要转换为大写的文本。"

[reference.text.upper.upper.title]
en = "Uppercase"
zh = "大写"

[reference.title]
en = "Reference"
zh = "参考"

[reference.visualize.circle.circle.body.details]
en = "The content to place into the circle. The circle expands to fit this\ncontent, keeping the 1-1 aspect ratio."
zh = "要放置到圆中的内容。圆扩展以适应此内容，保持 1-1 的宽高比。"

[reference.visualize.circle.circle.details]
en = "A circle with optional content.\n\n# Example\n```example\n// Without content.\n#circle(radius: 25pt)\n\n// With content.\n#circle[\n  #set align(center + horizon)\n  Automatically \\\n  sized to fit.\n]\n```"
zh = "一个带有可选内容的圆。\n\n# 示例\n```example\n// 没有内容。\n#circle(radius: 25pt)\n\n// 有内容。\n#circle[\n  #set align(center + horizon)\n  自动 \\\n  适应。\n]\n```"

[reference.visualize.circle.circle.fill.details]
en = "How to fill the circle. See the [rectangle's documentation]($rect.fill)\nfor more details."
zh = "如何填充圆。请参阅 [矩形的文档]($rect.fill) 了解更多详细信息。"

[reference.visualize.circle.circle.height.details]
en = "The circle's height. This is mutually exclusive with `radius` and\n`width`.\n\nIn contrast to `radius`, this can be relative to the parent container's\nheight."
zh = "圆的高度。这与 `radius` 和 `width` 互斥。\n\n与 `radius` 相反，这可以是相对于父容器的高度。"

[reference.visualize.circle.circle.inset.details]
en = "How much to pad the circle's content. See the\n[box's documentation]($box.inset) for more details."
zh = "圆的内容的填充量。请参阅 [盒子的文档]($box.inset) 了解更多详细信息。"

[reference.visualize.circle.circle.oneliner]
en = "A circle with optional content."
zh = "一个带有可选内容的圆。"

[reference.visualize.circle.circle.outset.details]
en = "How much to expand the circle's size without affecting the layout. See\nthe [box's documentation]($box.outset) for more details."
zh = "圆的扩展量，不影响布局。请参阅 [盒子的文档]($box.outset) 了解更多详细信息。"

[reference.visualize.circle.circle.radius.details]
en = "The circle's radius. This is mutually exclusive with `width` and\n`height`."
zh = "圆的半径。这与 `width` 和 `height` 互斥。"

[reference.visualize.circle.circle.stroke.details]
en = "How to stroke the circle. See the\n[rectangle's documentation]($rect.stroke) for more details."
zh = "如何描边圆。请参阅 [矩形的文档]($rect.stroke) 了解更多详细信息。"

[reference.visualize.circle.circle.title]
en = "Circle"
zh = "圆"

[reference.visualize.circle.circle.width.details]
en = "The circle's width. This is mutually exclusive with `radius` and\n`height`.\n\nIn contrast to `radius`, this can be relative to the parent container's\nwidth."
zh = "圆的宽度。这与 `radius` 和 `height` 互斥。\n\n与 `radius` 相反，这可以是相对于父容器的高度。"

[reference.visualize.circle.description]
en = "Documentation for the `circle` function."
zh = "`circle` 函数的文档。"

[reference.visualize.circle.oneliner]
en = "A circle with optional content."
zh = "一个带有可选内容的圆。"

[reference.visualize.circle.title]
en = "Circle"
zh = "圆"

[reference.visualize.color.color.cmyk.color.details]
en = "Alternatively: The color to convert to CMYK.\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为 CMYK 的颜色。\n\n如果给出此值，则不应给出各个组件。"

[reference.visualize.color.color.cmyk.cyan.details]
en = "The cyan component."
zh = "青色组件。"

[reference.visualize.color.color.cmyk.details]
en = "{{typst-docs/reference.visualize.color.color.cmyk.details.toml}}"

[reference.visualize.color.color.cmyk.key.details]
en = "The key component."
zh = "键组件。"

[reference.visualize.color.color.cmyk.magenta.details]
en = "The magenta component."
zh = "品红色组件。"

[reference.visualize.color.color.cmyk.oneliner]
en = "Create a CMYK color."
zh = "创建一个 CMYK 颜色。"

[reference.visualize.color.color.cmyk.title]
en = "CMYK"
zh = "CMYK"

[reference.visualize.color.color.cmyk.yellow.details]
en = "The yellow component."
zh = "黄色组件。"

[reference.visualize.color.color.components.alpha.details]
en = "Whether to include the alpha component."
zh = "是否包含 alpha 组件。"

[reference.visualize.color.color.components.details]
en = "Extracts the components of this color.\n\nThe size and values of this array depends on the color space. You can\nobtain the color space using [`space`]($color.space). Below is a table\nof the color spaces and their components:\n\n|       Color space       |     C1    |     C2     |     C3    |   C4   |\n|-------------------------|-----------|------------|-----------|--------|\n| [`luma`]($color.luma)   | Lightness |            |           |        |\n| [`oklab`]($color.oklab) | Lightness |    `a`     |    `b`    |  Alpha |\n| [`oklch`]($color.oklch) | Lightness |   Chroma   |    Hue    |  Alpha |\n| [`linear-rgb`]($color.linear-rgb) | Red  |   Green |    Blue |  Alpha |\n| [`rgb`]($color.rgb)     |    Red    |   Green    |    Blue   |  Alpha |\n| [`cmyk`]($color.cmyk)   |    Cyan   |   Magenta  |   Yellow  |  Key   |\n| [`hsl`]($color.hsl)     |     Hue   | Saturation | Lightness |  Alpha |\n| [`hsv`]($color.hsv)     |     Hue   | Saturation |   Value   |  Alpha |\n\nFor the meaning and type of each individual value, see the documentation\nof the corresponding color space. The alpha component is optional and\nonly included if the `alpha` argument is `true`. The length of the\nreturned array depends on the number of components and whether the alpha\ncomponent is included.\n\n"
zh = "提取此颜色的组件。\n\n此数组的大小和值取决于颜色空间。您可以使用 [`space`]($color.space) 获取颜色空间。以下是颜色空间及其组件的表格：\n\n|       Color space       |     C1    |     C2     |     C3    |   C4   |\n|-------------------------|-----------|------------|-----------|--------|\n| [`luma`]($color.luma)   | Lightness |            |           |        |\n| [`oklab`]($color.oklab) | Lightness |    `a`     |    `b`    |  Alpha |\n| [`oklch`]($color.oklch) | Lightness |   Chroma   |    Hue    |  Alpha |\n| [`linear-rgb`]($color.linear-rgb) | Red  |   Green |    Blue |  Alpha |\n| [`rgb`]($color.rgb)     |    Red    |   Green    |    Blue   |  Alpha |\n| [`cmyk`]($color.cmyk)   |    Cyan   |   Magenta  |   Yellow  |  Key   |\n| [`hsl`]($color.hsl)     |     Hue   | Saturation | Lightness |  Alpha |\n| [`hsv`]($color.hsv)     |     Hue   | Saturation |   Value   |  Alpha |\n\n对于每个单独值的含义和类型，请参阅相应颜色空间的文档。alpha 组件是可选的，仅当 `alpha` 参数为 `true` 时包含。返回的数组长度取决于组件数量和是否包含 alpha 组件。\n\n"

[reference.visualize.color.color.components.oneliner]
en = "Extracts the components of this color."
zh = "提取此颜色的组件。"

[reference.visualize.color.color.components.title]
en = "Components"
zh = "组件"

[reference.visualize.color.color.darken.details]
en = "Darkens a color by a given factor."
zh = "通过给定的因子使颜色变暗。"

[reference.visualize.color.color.darken.factor.details]
en = "The factor to darken the color by."
zh = "使颜色变暗的因子。"

[reference.visualize.color.color.darken.oneliner]
en = "Darkens a color by a given factor."
zh = "通过给定的因子使颜色变暗。"

[reference.visualize.color.color.darken.title]
en = "Darken"
zh = "变暗"

[reference.visualize.color.color.desaturate.details]
en = "Decreases the saturation of a color by a given factor."
zh = "通过给定的因子降低颜色的饱和度。"

[reference.visualize.color.color.desaturate.factor.details]
en = "The factor to desaturate the color by."
zh = "降低颜色的饱和度的因子。"

[reference.visualize.color.color.desaturate.oneliner]
en = "Decreases the saturation of a color by a given factor."
zh = "通过给定的因子降低颜色的饱和度。"

[reference.visualize.color.color.desaturate.title]
en = "Desaturate"
zh = "去饱和"

[reference.visualize.color.color.details]
en = "{{typst-docs/reference.visualize.color.color.details.toml}}"

[reference.visualize.color.color.hsl.alpha.details]
en = "The alpha component."
zh = "alpha 组件。"

[reference.visualize.color.color.hsl.color.details]
en = "Alternatively: The color to convert to HSL.\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为 HSL 的颜色。\n\n如果给出此值，则不应给出各个组件。"

[reference.visualize.color.color.hsl.details]
en = "Create an HSL color.\n\nThis color space is useful for specifying colors by hue, saturation and\nlightness. It is also useful for color manipulation, such as saturating\nwhile keeping perceived hue.\n\nAn HSL color is represented internally by an array of four components:\n- hue ([`angle`])\n- saturation ([`ratio`])\n- lightness ([`ratio`])\n- alpha ([`ratio`])\n\nThese components are also available using the\n[`components`]($color.components) method.\n\n"
zh = "创建一个 HSL 颜色。\n\n这种颜色空间对于指定色调、饱和度和亮度很有用。它也适用于颜色操作，例如在保持感知色调的同时饱和。\n\n一个 HSL 颜色由四个组件表示：\n- 色调 ([`angle`])\n- 饱和度 ([`ratio`])\n- 亮度 ([`ratio`])\n- alpha ([`ratio`])\n\n这些组件也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.hsl.hue.details]
en = "The hue angle."
zh = "色调角度。"

[reference.visualize.color.color.hsl.lightness.details]
en = "The lightness component."
zh = "亮度组件。"

[reference.visualize.color.color.hsl.oneliner]
en = "Create an HSL color."
zh = "创建一个 HSL 颜色。"

[reference.visualize.color.color.hsl.saturation.details]
en = "The saturation component."
zh = "饱和度组件。"

[reference.visualize.color.color.hsl.title]
en = "HSL"
zh = "HSL"

[reference.visualize.color.color.hsv.alpha.details]
en = "The alpha component."
zh = "alpha 组件。"

[reference.visualize.color.color.hsv.color.details]
en = "Alternatively: The color to convert to HSL.\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为 HSL 的颜色。\n\n如果给出此值，则不应给出各个组件。"

[reference.visualize.color.color.hsv.details]
en = "Create an HSV color.\n\nThis color space is useful for specifying colors by hue, saturation and\nvalue. It is also useful for color manipulation, such as saturating\nwhile keeping perceived hue.\n\nAn HSV color is represented internally by an array of four components:\n- hue ([`angle`])\n- saturation ([`ratio`])\n- value ([`ratio`])\n- alpha ([`ratio`])\n\nThese components are also available using the\n[`components`]($color.components) method.\n\n"
zh = "创建一个 HSV 颜色。\n\n这种颜色空间对于指定色调、饱和度和值很有用。它也适用于颜色操作，例如在保持感知色调的同时饱和。\n\n一个 HSV 颜色由四个组件表示：\n- 色调 ([`angle`])\n- 饱和度 ([`ratio`])\n- 值 ([`ratio`])\n- alpha ([`ratio`])\n\n这些组件也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.hsv.hue.details]
en = "The hue angle."
zh = "色调角度。"

[reference.visualize.color.color.hsv.oneliner]
en = "Create an HSV color."
zh = "创建一个 HSV 颜色。"

[reference.visualize.color.color.hsv.saturation.details]
en = "The saturation component."
zh = "饱和度组件。"

[reference.visualize.color.color.hsv.title]
en = "HSV"
zh = "HSV"

[reference.visualize.color.color.hsv.value.details]
en = "The value component."
zh = "值组件。"

[reference.visualize.color.color.lighten.details]
en = "Lightens a color by a given factor."
zh = "通过给定的因子使颜色变亮。"

[reference.visualize.color.color.lighten.factor.details]
en = "The factor to lighten the color by."
zh = "使颜色变亮的因子。"

[reference.visualize.color.color.lighten.oneliner]
en = "Lightens a color by a given factor."
zh = "通过给定的因子使颜色变亮。"

[reference.visualize.color.color.lighten.title]
en = "Lighten"
zh = "变亮"

[reference.visualize.color.color.linear-rgb.alpha.details]
en = "The alpha component."
zh = "alpha 组件。"

[reference.visualize.color.color.linear-rgb.blue.details]
en = "The blue component."
zh = "蓝色组件。"

[reference.visualize.color.color.linear-rgb.color.details]
en = "Alternatively: The color to convert to linear RGB(A).\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为线性 RGB(A) 的颜色。\n\n如果给出此值，则不应给出各个组件。"

[reference.visualize.color.color.linear-rgb.details]
en = "Create an RGB(A) color with linear luma.\n\nThis color space is similar to sRGB, but with the distinction that the\ncolor component are not gamma corrected. This makes it easier to perform\ncolor operations such as blending and interpolation. Although, you\nshould prefer to use the [`oklab` function]($color.oklab) for these.\n\nA linear RGB(A) color is represented internally by an array of four\ncomponents:\n- red ([`ratio`])\n- green ([`ratio`])\n- blue ([`ratio`])\n- alpha ([`ratio`])\n\nThese components are also available using the\n[`components`]($color.components) method.\n\n"
zh = "创建一个线性 RGB(A) 颜色。\n\n这种颜色空间类似于 sRGB，但有一点不同：颜色组件没有伽马校正。这使得更容易执行颜色操作，如混合和插值。尽管如此，您应该优先使用 [`oklab` 函数]($color.oklab) 来执行这些操作。\n\n一个线性 RGB(A) 颜色由四个组件表示：\n- 红色 ([`ratio`])\n- 绿色 ([`ratio`])\n- 蓝色 ([`ratio`])\n- alpha ([`ratio`])\n\n这些组件也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.linear-rgb.green.details]
en = "The green component."
zh = "绿色组件。"

[reference.visualize.color.color.linear-rgb.oneliner]
en = "Create an RGB(A) color with linear luma."
zh = "创建一个线性 RGB(A) 颜色。"

[reference.visualize.color.color.linear-rgb.red.details]
en = "The red component."
zh = "红色组件。"

[reference.visualize.color.color.linear-rgb.title]
en = "Linear RGB"
zh = "线性 RGB"

[reference.visualize.color.color.luma.alpha.details]
en = "The alpha component."
zh = "alpha 组件。"

[reference.visualize.color.color.luma.color.details]
en = "Alternatively: The color to convert to grayscale.\n\nIf this is given, the `lightness` should not be given."
zh = "另一种方式：要转换为灰度色的颜色。\n\n如果给出此值，则不应给出 `lightness`。"

[reference.visualize.color.color.luma.details]
en = "Create a grayscale color.\n\nA grayscale color is represented internally by a single `lightness`\ncomponent.\n\nThese components are also available using the\n[`components`]($color.components) method.\n\n"
zh = "创建一个灰度色。\n\n一个灰度色由一个 `lightness` 组件表示。\n\n这些组件也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.luma.lightness.details]
en = "The lightness component."
zh = "亮度组件。"

[reference.visualize.color.color.luma.oneliner]
en = "Create a grayscale color."
zh = "创建一个灰度色。"

[reference.visualize.color.color.luma.title]
en = "Luma"
zh = "亮度"

[reference.visualize.color.color.mix.colors.details]
en = "The colors, optionally with weights, specified as a pair (array of\nlength two) of color and weight (float or ratio).\n\nThe weights do not need to add to `{100%}`, they are relative to the\nsum of all weights."
zh = "颜色，可选择带权重，指定为颜色和权重（浮点数或比率）的「对」（[pair](#x-term-pair)）（长度为 2 的「数组」（[array](#x-term-array)））。\n\n权重不需要加到 `{100%}`，它们相对于所有权重的总和。"

[reference.visualize.color.color.mix.details]
en = "Create a color by mixing two or more colors.\n\nIn color spaces with a hue component (hsl, hsv, oklch), only two colors\ncan be mixed at once. Mixing more than two colors in such a space will\nresult in an error!\n\n"
zh = "通过混合两个或多个颜色创建一个颜色。\n\n在具有色调组件的颜色空间（hsl、hsv、oklch）中，一次只能混合两个颜色。在这样一个空间中混合超过两个颜色将导致错误！\n\n"

[reference.visualize.color.color.mix.oneliner]
en = "Create a color by mixing two or more colors."
zh = "通过混合两个或多个颜色创建一个颜色。"

[reference.visualize.color.color.mix.space.details]
en = "The color space to mix in. By default, this happens in a perceptual\ncolor space ([`oklab`]($color.oklab))."
zh = "混合的颜色空间。默认情况下，这发生在感知颜色空间（[`oklab`]($color.oklab)）中。"

[reference.visualize.color.color.mix.title]
en = "Mix"
zh = "混合"

[reference.visualize.color.color.negate.details]
en = "Produces the complementary color using a provided color space.\nYou can think of it as the opposite side on a color wheel.\n\n"
zh = "使用提供的颜色空间生成互补颜色。您可以将其视为颜色轮上的相反侧。\n\n"

[reference.visualize.color.color.negate.oneliner]
en = "Produces the complementary color using a provided color space."
zh = "使用提供的颜色空间生成互补颜色。"

[reference.visualize.color.color.negate.space.details]
en = "The color space used for the transformation. By default, a perceptual color space is used."
zh = "用于转换的颜色空间。默认情况下，使用感知颜色空间。"

[reference.visualize.color.color.negate.title]
en = "Negate"
zh = "取反"

[reference.visualize.color.color.oklab.a.details]
en = "The a (\"green/red\") component."
zh = "a (\"green/red\") 组件。"

[reference.visualize.color.color.oklab.alpha.details]
en = "The alpha component."
zh = "alpha 组件。"

[reference.visualize.color.color.oklab.b.details]
en = "The b (\"blue/yellow\") component."
zh = "b (\"blue/yellow\") 组件。"

[reference.visualize.color.color.oklab.color.details]
en = "Alternatively: The color to convert to Oklab.\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为 Oklab 的颜色。\n\n如果给出此值，则不应给出各个组件。"

[reference.visualize.color.color.oklab.details]
en = "Create an [Oklab](https://bottosson.github.io/posts/oklab/) color.\n\nThis color space is well suited for the following use cases:\n- Color manipulation such as saturating while keeping perceived hue\n- Creating grayscale images with uniform perceived lightness\n- Creating smooth and uniform color transition and gradients\n\nA linear Oklab color is represented internally by an array of four\ncomponents:\n- lightness ([`ratio`])\n- a ([`float`] or [`ratio`].\n  Ratios are relative to `{0.4}`; meaning `{50%}` is equal to `{0.2}`)\n- b ([`float`] or [`ratio`].\n  Ratios are relative to `{0.4}`; meaning `{50%}` is equal to `{0.2}`)\n- alpha ([`ratio`])\n\nThese components are also available using the\n[`components`]($color.components) method.\n\n"
zh = "创建一个 [Oklab](https://bottosson.github.io/posts/oklab/) 颜色。\n\n这种颜色空间非常适合以下用例：\n- 颜色操作，例如在保持感知色调的同时饱和\n- 创建具有均匀感知亮度的灰度图像\n- 创建平滑和均匀的颜色过渡和渐变\n\n一个线性 Oklab 颜色由四个组件表示：\n- 亮度 ([`ratio`])\n- a ([`float`] 或 [`ratio`]。\n  比例相对于 `{0.4}`；意思是 `{50%}` 等于 `{0.2}`)\n- b ([`float`] 或 [`ratio`]。\n  比例相对于 `{0.4}`；意思是 `{50%}` 等于 `{0.2}`)\n- alpha ([`ratio`])\n\n这些组件也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.oklab.lightness.details]
en = "The lightness component."
zh = "亮度组件。"

[reference.visualize.color.color.oklab.oneliner]
en = "Create an [Oklab](https://bottosson.github.io/posts/oklab/) color."
zh = "创建一个 [Oklab](https://bottosson.github.io/posts/oklab/) 颜色。"

[reference.visualize.color.color.oklab.title]
en = "Oklab"
zh = "Oklab"

[reference.visualize.color.color.oklch.alpha.details]
en = "The alpha component."
zh = "alpha 组件。"

[reference.visualize.color.color.oklch.chroma.details]
en = "The chroma component."
zh = "色度组件。"

[reference.visualize.color.color.oklch.color.details]
en = "Alternatively: The color to convert to Oklch.\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为 Oklch 的颜色。\n\n如果给出此值，则不应给出各个组件。"

[reference.visualize.color.color.oklch.details]
en = "Create an [Oklch](https://bottosson.github.io/posts/oklab/) color.\n\nThis color space is well suited for the following use cases:\n- Color manipulation involving lightness, chroma, and hue\n- Creating grayscale images with uniform perceived lightness\n- Creating smooth and uniform color transition and gradients\n\nA linear Oklch color is represented internally by an array of four\ncomponents:\n- lightness ([`ratio`])\n- chroma ([`float`] or [`ratio`].\n  Ratios are relative to `{0.4}`; meaning `{50%}` is equal to `{0.2}`)\n- hue ([`angle`])\n- alpha ([`ratio`])\n\nThese components are also available using the\n[`components`]($color.components) method.\n\n"
zh = "创建一个 [Oklch](https://bottosson.github.io/posts/oklab/) 颜色。\n\n这种颜色空间非常适合以下用例：\n- 涉及亮度、色度和色调的颜色操作\n- 创建具有均匀感知亮度的灰度图像\n- 创建平滑和均匀的颜色过渡和渐变\n\n一个线性 Oklch 颜色由四个组件表示：\n- 亮度 ([`ratio`])\n- 色度 ([`float`] 或 [`ratio`]。\n  比例相对于 `{0.4}`；意思是 `{50%}` 等于 `{0.2}`)\n- 色调 ([`angle`])\n- alpha ([`ratio`])\n\n这些组件也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.oklch.hue.details]
en = "The hue component."
zh = "色调组件。"

[reference.visualize.color.color.oklch.lightness.details]
en = "The lightness component."
zh = "亮度组件。"

[reference.visualize.color.color.oklch.oneliner]
en = "Create an [Oklch](https://bottosson.github.io/posts/oklab/) color."
zh = "创建一个 [Oklch](https://bottosson.github.io/posts/oklab/) 颜色。"

[reference.visualize.color.color.oklch.title]
en = "Oklch"
zh = "Oklch"

[reference.visualize.color.color.oneliner]
en = "A color in a specific color space."
zh = "一个在特定颜色空间中的颜色。"

[reference.visualize.color.color.opacify.details]
en = "Makes a color more opaque by a given scale.\n\nThis method is relative to the existing alpha value.\nIf the scale is positive, calculates `alpha + scale - alpha * scale`.\nNegative scales behave like `color.transparentize(-scale)`.\n\n"
zh = "通过给定的比例使颜色更不透明。\n\n这种方法相对于现有的 alpha 值。如果比例为正，则计算 `alpha + scale - alpha * scale`。负比例的行为类似于 `color.transparentize(-scale)`。\n\n"

[reference.visualize.color.color.opacify.oneliner]
en = "Makes a color more opaque by a given scale."
zh = "通过给定的比例使颜色更不透明。"

[reference.visualize.color.color.opacify.scale.details]
en = "The scale to change the alpha value by."
zh = "改变 alpha 值的比例。"

[reference.visualize.color.color.opacify.title]
en = "Opacify"
zh = "不透明"

[reference.visualize.color.color.rgb.alpha.details]
en = "The alpha component."
zh = "alpha 分量。"

[reference.visualize.color.color.rgb.blue.details]
en = "The blue component."
zh = "蓝色分量。"

[reference.visualize.color.color.rgb.color.details]
en = "Alternatively: The color to convert to RGB(a).\n\nIf this is given, the individual components should not be given."
zh = "另一种方式：要转换为 RGB(A) 的颜色。\n\n如果给出此值，则不应给出各个分量。"

[reference.visualize.color.color.rgb.details]
en = "Create an RGB(A) color.\n\nThe color is specified in the sRGB color space.\n\nAn RGB(A) color is represented internally by an array of four components:\n- red ([`ratio`])\n- green ([`ratio`])\n- blue ([`ratio`])\n- alpha ([`ratio`])\n\nThese components are also available using the [`components`]($color.components)\nmethod.\n\n"
zh = "创建一个 RGB(A) 颜色。\n\n颜色在 sRGB 颜色空间中指定。\n\n一个 RGB(A) 颜色由四个分量表示：\n- 红色 ([`ratio`])\n- 绿色 ([`ratio`])\n- 蓝色 ([`ratio`])\n- alpha ([`ratio`])\n\n这些分量也可以使用 [`components`]($color.components) 方法获取。\n\n"

[reference.visualize.color.color.rgb.green.details]
en = "The green component."
zh = "绿色分量。"

[reference.visualize.color.color.rgb.hex.details]
en = "Alternatively: The color in hexadecimal notation.\n\nAccepts three, four, six or eight hexadecimal digits and optionally\na leading hash.\n\nIf this is given, the individual components should not be given.\n\n"
zh = "另一种方式：十六进制表示的颜色。\n\n接受三个、四个、六个或八个十六进制数字，并可选地添加前导哈希。\n\n如果给出此值，则不应给出各个分量。\n\n"

[reference.visualize.color.color.rgb.oneliner]
en = "Create an RGB(A) color."
zh = "创建一个 RGB(A) 颜色。"

[reference.visualize.color.color.rgb.red.details]
en = "The red component."
zh = "红色分量。"

[reference.visualize.color.color.rgb.title]
en = "RGB"
zh = "RGB"

[reference.visualize.color.color.rotate.angle.details]
en = "The angle to rotate the hue by."
zh = "旋转色调的角度。"

[reference.visualize.color.color.rotate.details]
en = "Rotates the hue of the color by a given angle."
zh = "旋转色调的颜色。"

[reference.visualize.color.color.rotate.oneliner]
en = "Rotates the hue of the color by a given angle."
zh = "旋转色调的颜色。"

[reference.visualize.color.color.rotate.space.details]
en = "The color space used to rotate. By default, this happens in a perceptual\ncolor space ([`oklch`]($color.oklch))."
zh = "旋转的颜色空间。默认情况下，这发生在感知颜色空间（[`oklch`]($color.oklch)）中。"

[reference.visualize.color.color.rotate.title]
en = "Rotate"
zh = "旋转"

[reference.visualize.color.color.saturate.details]
en = "Increases the saturation of a color by a given factor."
zh = "通过给定的因子增加颜色的饱和度。"

[reference.visualize.color.color.saturate.factor.details]
en = "The factor to saturate the color by."
zh = "增加颜色的饱和度的因子。"

[reference.visualize.color.color.saturate.oneliner]
en = "Increases the saturation of a color by a given factor."
zh = "通过给定的因子增加颜色的饱和度。"

[reference.visualize.color.color.saturate.title]
en = "Saturate"
zh = "饱和"

[reference.visualize.color.color.space.details]
en = "Returns the constructor function for this color's space:\n- [`luma`]($color.luma)\n- [`oklab`]($color.oklab)\n- [`oklch`]($color.oklch)\n- [`linear-rgb`]($color.linear-rgb)\n- [`rgb`]($color.rgb)\n- [`cmyk`]($color.cmyk)\n- [`hsl`]($color.hsl)\n- [`hsv`]($color.hsv)\n\n"
zh = "返回这个颜色的构造函数：\n- [`luma`]($color.luma)\n- [`oklab`]($color.oklab)\n- [`oklch`]($color.oklch)\n- [`linear-rgb`]($color.linear-rgb)\n- [`rgb`]($color.rgb)\n- [`cmyk`]($color.cmyk)\n- [`hsl`]($color.hsl)\n- [`hsv`]($color.hsv)\n\n"

[reference.visualize.color.color.space.oneliner]
en = "Returns the constructor function for this color's space:"
zh = "返回这个颜色的构造函数："

[reference.visualize.color.color.space.title]
en = "Space"
zh = "空间"

[reference.visualize.color.color.title]
en = "Color"
zh = "颜色"

[reference.visualize.color.color.to-hex.details]
en = "Returns the color's RGB(A) hex representation (such as `#ffaa32` or\n`#020304fe`). The alpha component (last two digits in `#020304fe`) is\nomitted if it is equal to `ff` (255 / 100%)."
zh = "返回颜色的 RGB(A) 十六进制表示（例如 `#ffaa32` 或 `#020304fe`）。如果 alpha 分量等于 `ff`（255 / 100%），则省略 alpha 分量（`#020304fe` 中的最后两个数字）。"

[reference.visualize.color.color.to-hex.oneliner]
en = "Returns the color's RGB(A) hex representation (such as `#ffaa32` or"
zh = "返回颜色的 RGB(A) 十六进制表示（例如 `#ffaa32` 或 `#020304fe`）。"

[reference.visualize.color.color.to-hex.title]
en = "To Hex"
zh = "转换为十六进制"

[reference.visualize.color.color.transparentize.details]
en = "Makes a color more transparent by a given factor.\n\nThis method is relative to the existing alpha value.\nIf the scale is positive, calculates `alpha - alpha * scale`.\nNegative scales behave like `color.opacify(-scale)`.\n\n"
zh = "通过给定的因子使颜色更透明。\n\n这种方法相对于现有的 alpha 值。如果比例为正，则计算 `alpha - alpha * scale`。负比例的行为类似于 `color.opacify(-scale)`。\n\n"

[reference.visualize.color.color.transparentize.oneliner]
en = "Makes a color more transparent by a given factor."
zh = "通过给定的因子使颜色更透明。"

[reference.visualize.color.color.transparentize.scale.details]
en = "The factor to change the alpha value by."
zh = "改变 alpha 值的因子。"

[reference.visualize.color.color.transparentize.title]
en = "Transparentize"
zh = "透明"

[reference.visualize.color.description]
en = "Documentation for the Color type."
zh = "Color 类型的文档。"

[reference.visualize.color.oneliner]
en = "A color in a specific color space."
zh = "一个在特定颜色空间中的颜色。"

[reference.visualize.color.title]
en = "Color"
zh = "颜色"

[reference.visualize.curve.curve.close.details]
en = "Closes the curve by adding a segment from the last point to the start of the\ncurve (or the last preceding `curve.move` point).\n\n"
zh = "通过添加从最后一个点到曲线起始点的线段来闭合曲线（或最后一个 preceding `curve.move` 点）。\n\n"

[reference.visualize.curve.curve.close.mode.details]
en = "How to close the curve."
zh = "如何闭合曲线。"

[reference.visualize.curve.curve.close.oneliner]
en = "Closes the curve by adding a segment from the last point to the start of the"
zh = "通过添加从最后一个点到曲线起始点的线段来闭合曲线。"

[reference.visualize.curve.curve.close.title]
en = "Curve Close"
zh = "曲线闭合"

[reference.visualize.curve.curve.components.details]
en = "The components of the curve, in the form of moves, line and Bézier\nsegment, and closes."
zh = "曲线组件，包括移动、线段和 Bézier 线段。"

[reference.visualize.curve.curve.cubic.control-end.details]
en = "The control point going into the end point of the curve segment.\n\nIf set to `{none}`, the curve has no end control point, or equivalently,\nthe control point defaults to the curve's end point."
zh = "进入曲线线段终点的控制点。\n\n如果设置为 `{none}`，则曲线没有终点控制点，或等效地，控制点默认为曲线终点。"

[reference.visualize.curve.curve.cubic.control-start.details]
en = "The control point going out from the start of the curve segment.\n\n- If `{auto}` and this element follows another `curve.cubic` element,\n  the last control point will be mirrored. In SVG terms, this makes\n  `curve.cubic` behave like the `S` operator instead of the `C` operator.\n\n- If `{none}`, the curve has no first control point, or equivalently,\n  the control point defaults to the curve's starting point.\n\n"
zh = "从曲线线段起点出来的控制点。\n\n- 如果 `{auto}` 并且这个元素跟随另一个 `curve.cubic` 元素，则最后一个控制点将被镜像。在 SVG 术语中，这使得 `curve.cubic` 行为类似于 `S` 操作符而不是 `C` 操作符。\n\n- 如果 `{none}`，则曲线没有第一个控制点，或等效地，控制点默认为曲线起点。\n\n"

[reference.visualize.curve.curve.cubic.details]
en = "Adds a cubic Bézier curve segment from the last point to `end`, using\n`control-start` and `control-end` as the control points.\n\n"
zh = "从最后一个点到 `end` 添加一个三次 Bézier 曲线线段，使用 `control-start` 和 `control-end` 作为控制点。\n\n"

[reference.visualize.curve.curve.cubic.end.details]
en = "The point at which the curve segment shall end."
zh = "曲线线段的终点。"

[reference.visualize.curve.curve.cubic.oneliner]
en = "Adds a cubic Bézier curve segment from the last point to `end`, using"
zh = "从最后一个点到 `end` 添加一个三次 Bézier 曲线线段，使用"

[reference.visualize.curve.curve.cubic.relative.details]
en = "Whether the `control-start`, `control-end`, and `end` coordinates are\nrelative to the previous point."
zh = "`control-start`、`control-end` 和 `end` 坐标是否相对于前一个点。"

[reference.visualize.curve.curve.cubic.title]
en = "Curve Cubic Segment"
zh = "曲线三次线段"

[reference.visualize.curve.curve.details]
en = "{{typst-docs/reference.visualize.curve.curve.details.toml}}"

[reference.visualize.curve.curve.fill-rule.details]
en = "The drawing rule used to fill the curve.\n\n"
zh = "用于填充曲线的绘制规则。\n\n"

[reference.visualize.curve.curve.fill.details]
en = "How to fill the curve.\n\nWhen setting a fill, the default stroke disappears. To create a\nrectangle with both fill and stroke, you have to configure both."
zh = "如何填充曲线。\n\n设置填充时，默认的描边消失。要创建一个同时具有填充和描边的矩形，必须同时配置两者。"

[reference.visualize.curve.curve.line.details]
en = "Adds a straight line from the current point to a following one.\n\n"
zh = "从当前点到下一个点添加一条直线。\n\n"

[reference.visualize.curve.curve.line.end.details]
en = "The point at which the line shall end."
zh = "直线线段的终点。"

[reference.visualize.curve.curve.line.oneliner]
en = "Adds a straight line from the current point to a following one."
zh = "从当前点到下一个点添加一条直线。"

[reference.visualize.curve.curve.line.relative.details]
en = "Whether the coordinates are relative to the previous point.\n\n"
zh = "坐标是否相对于前一个点。\n\n"

[reference.visualize.curve.curve.line.title]
en = "Curve Line"
zh = "曲线直线"

[reference.visualize.curve.curve.move.details]
en = "Starts a new curve component.\n\nIf no `curve.move` element is passed, the curve will start at\n`{(0pt, 0pt)}`.\n\n"
zh = "开始一个新的曲线组件。\n\n如果没有传递 `curve.move` 元素，曲线将从 `{(0pt, 0pt)}` 开始。\n\n"

[reference.visualize.curve.curve.move.oneliner]
en = "Starts a new curve component."
zh = "开始一个新的曲线组件。"

[reference.visualize.curve.curve.move.relative.details]
en = "Whether the coordinates are relative to the previous point."
zh = "坐标是否相对于前一个点。"

[reference.visualize.curve.curve.move.start.details]
en = "The starting point for the new component."
zh = "新组件的起点。"

[reference.visualize.curve.curve.move.title]
en = "Curve Move"
zh = "曲线移动"

[reference.visualize.curve.curve.oneliner]
en = "A curve consisting of movements, lines, and Bézier segments."
zh = "由移动、直线和 Bézier 线段组成的曲线。"

[reference.visualize.curve.curve.quad.control.details]
en = "The control point of the quadratic Bézier curve.\n\n- If `{auto}` and this segment follows another quadratic Bézier curve,\n  the previous control point will be mirrored.\n- If `{none}`, the control point defaults to `end`, and the curve will\n  be a straight line.\n\n"
zh = "二次 Bézier 曲线的控制点。\n\n- 如果 `{auto}` 并且这个线段跟随另一个二次 Bézier 曲线，则前一个控制点将被镜像。\n- 如果 `{none}`，则控制点默认为 `end`，曲线将是一条直线。\n\n"

[reference.visualize.curve.curve.quad.details]
en = "Adds a quadratic Bézier curve segment from the last point to `end`, using\n`control` as the control point.\n\n"
zh = "从最后一个点到 `end` 添加一个二次 Bézier 曲线线段，使用 `control` 作为控制点。\n\n"

[reference.visualize.curve.curve.quad.end.details]
en = "The point at which the segment shall end."
zh = "线段的终点。"

[reference.visualize.curve.curve.quad.oneliner]
en = "Adds a quadratic Bézier curve segment from the last point to `end`, using"
zh = "从最后一个点到 `end` 添加一个二次 Bézier 曲线线段，使用"

[reference.visualize.curve.curve.quad.relative.details]
en = "Whether the `control` and `end` coordinates are relative to the previous\npoint."
zh = "`control` 和 `end` 坐标是否相对于前一个点。"

[reference.visualize.curve.curve.quad.title]
en = "Curve Quadratic Segment"
zh = "曲线二次线段"

[reference.visualize.curve.curve.stroke.details]
en = "How to [stroke] the curve. This can be:\n\nCan be set to `{none}` to disable the stroke or to `{auto}` for a\nstroke of `{1pt}` black if and if only if no fill is given.\n\n"
zh = "如何描边曲线。这可以是：\n\n可以设置为 `{none}` 来禁用描边，或者设置为 `{auto}` 来描边 `{1pt}` 的黑色，如果且仅当没有填充时。\n\n"

[reference.visualize.curve.curve.title]
en = "Curve"
zh = "曲线"

[reference.visualize.curve.description]
en = "Documentation for the `curve` function."
zh = "`curve` 函数的文档。"

[reference.visualize.curve.oneliner]
en = "A curve consisting of movements, lines, and Bézier segments."
zh = "由移动、直线和 Bézier 线段组成的曲线。"

[reference.visualize.curve.title]
en = "Curve"
zh = "曲线"

[reference.visualize.description]
en = "Documentation for functions related to Visualize in Typst."
zh = "Typst 中与可视化相关的函数的文档。"

[reference.visualize.ellipse.description]
en = "Documentation for the `ellipse` function."
zh = "`ellipse` 函数的文档。"

[reference.visualize.ellipse.ellipse.body.details]
en = "The content to place into the ellipse.\n\nWhen this is omitted, the ellipse takes on a default size of at most\n`{45pt}` by `{30pt}`."
zh = "放置到椭圆中的内容。\n\n当省略时，椭圆采用最多 `{45pt}` 宽和 `{30pt}` 高的默认大小。"

[reference.visualize.ellipse.ellipse.details]
en = "An ellipse with optional content.\n\n# Example\n```example\n// Without content.\n#ellipse(width: 35%, height: 30pt)\n\n// With content.\n#ellipse[\n  #set align(center)\n  Automatically sized \\\n  to fit the content.\n]\n```"
zh = "一个带有可选内容的椭圆。\n\n# 示例\n```example\n// 没有内容。\n#ellipse(width: 35%, height: 30pt)\n\n// 有内容。\n#ellipse[\n  #set align(center)\n  自动调整大小 \\\n  以适应内容。\n]\n```"

[reference.visualize.ellipse.ellipse.fill.details]
en = "How to fill the ellipse. See the [rectangle's documentation]($rect.fill)\nfor more details."
zh = "如何填充椭圆。请参阅 [矩形的文档]($rect.fill) 获取更多详细信息。"

[reference.visualize.ellipse.ellipse.height.details]
en = "The ellipse's height, relative to its parent container."
zh = "椭圆的高度，相对于其父容器。"

[reference.visualize.ellipse.ellipse.inset.details]
en = "How much to pad the ellipse's content. See the\n[box's documentation]($box.inset) for more details."
zh = "椭圆内容的内边距。请参阅 [box 的文档]($box.inset) 获取更多详细信息。"

[reference.visualize.ellipse.ellipse.oneliner]
en = "An ellipse with optional content."
zh = "一个带有可选内容的椭圆。"

[reference.visualize.ellipse.ellipse.outset.details]
en = "How much to expand the ellipse's size without affecting the layout. See\nthe [box's documentation]($box.outset) for more details."
zh = "椭圆的扩展量，不影响布局。请参阅 [box 的文档]($box.outset) 获取更多详细信息。"

[reference.visualize.ellipse.ellipse.stroke.details]
en = "How to stroke the ellipse. See the\n[rectangle's documentation]($rect.stroke) for more details."
zh = "如何描边椭圆。请参阅 [矩形的文档]($rect.stroke) 获取更多详细信息。"

[reference.visualize.ellipse.ellipse.title]
en = "Ellipse"
zh = "椭圆"

[reference.visualize.ellipse.ellipse.width.details]
en = "The ellipse's width, relative to its parent container."
zh = "椭圆的宽度，相对于其父容器。"

[reference.visualize.ellipse.oneliner]
en = "An ellipse with optional content."
zh = "一个带有可选内容的椭圆。"

[reference.visualize.ellipse.title]
en = "Ellipse"
zh = "椭圆"

[reference.visualize.gradient.description]
en = "Documentation for the Gradient type."
zh = "Gradient 类型的文档。"

[reference.visualize.gradient.gradient.angle.details]
en = "Returns the angle of this gradient.\n\nReturns `{none}` if the gradient is neither linear nor conic."
zh = "返回这个渐变的角度。\n\n如果渐变既不是线性也不是圆锥，则返回 `{none}`。"

[reference.visualize.gradient.gradient.angle.oneliner]
en = "Returns the angle of this gradient."
zh = "返回这个渐变的角度。"

[reference.visualize.gradient.gradient.angle.title]
en = "Angle"
zh = "角度"

[reference.visualize.gradient.gradient.center.details]
en = "Returns the center of this gradient.\n\nReturns `{none}` if the gradient is neither radial nor conic."
zh = "返回这个渐变的中心。\n\n如果渐变既不是径向也不是圆锥，则返回 `{none}`。"

[reference.visualize.gradient.gradient.center.oneliner]
en = "Returns the center of this gradient."
zh = "返回这个渐变的中心。"

[reference.visualize.gradient.gradient.center.title]
en = "Center"
zh = "中心"

[reference.visualize.gradient.gradient.conic.angle.details]
en = "The angle of the gradient."
zh = "渐变的角度。"

[reference.visualize.gradient.gradient.conic.center.details]
en = "The center of the last circle of the gradient.\n\nA value of `{(50%, 50%)}` means that the end circle is\ncentered inside of its container."
zh = "渐变的最后一个圆的中心。\n\n值为 `{(50%, 50%)}` 表示结束圆位于其容器内部。"

[reference.visualize.gradient.gradient.conic.details]
en = "Creates a new conic gradient, in which colors change radially around a\ncenter point.\n\nYou can control the center point of the gradient by using the `center`\nargument. By default, the center point is the center of the shape.\n\n"
zh = "创建一个新的圆锥渐变，其中颜色围绕一个中心点径向变化。\n\n你可以通过使用 `center` 参数来控制渐变的中心点。默认情况下，中心点是形状的中心。\n\n"

[reference.visualize.gradient.gradient.conic.oneliner]
en = "Creates a new conic gradient, in which colors change radially around a"
zh = "创建一个新的圆锥渐变，其中颜色围绕一个中心点径向变化。"

[reference.visualize.gradient.gradient.conic.relative.details]
en = "The [relative placement](#relativeness) of the gradient.\n\nFor an element placed at the root/top level of the document, the parent\nis the page itself. For other elements, the parent is the innermost block,\nbox, column, grid, or stack that contains the element."
zh = "渐变的位置相对于其父元素。\n\n对于放置在文档根/顶层位置的元素，父元素是页面本身。对于其他元素，父元素是包含该元素的最内层的块、框、列、网格或堆栈。"

[reference.visualize.gradient.gradient.conic.space.details]
en = "The color space in which to interpolate the gradient.\n\nDefaults to a perceptually uniform color space called\n[Oklab]($color.oklab)."
zh = "渐变插值的颜色空间。\n\n默认使用称为 [Oklab]($color.oklab) 的感知均匀颜色空间。"

[reference.visualize.gradient.gradient.conic.stops.details]
en = "The color [stops](#stops) of the gradient."
zh = "渐变的颜色 [停止点](#stops)。"

[reference.visualize.gradient.gradient.conic.title]
en = "Conic"
zh = "圆锥"

[reference.visualize.gradient.gradient.details]
en = "{{typst-docs/reference.visualize.gradient.gradient.details.toml}}"

[reference.visualize.gradient.gradient.focal-center.details]
en = "Returns the focal-center of this gradient.\n\nReturns `{none}` if the gradient is not radial."
zh = "返回这个渐变的焦点中心。\n\n如果渐变不是径向，则返回 `{none}`。"

[reference.visualize.gradient.gradient.focal-center.oneliner]
en = "Returns the focal-center of this gradient."
zh = "返回这个渐变的焦点中心。"

[reference.visualize.gradient.gradient.focal-center.title]
en = "Focal Center"
zh = "焦点中心"

[reference.visualize.gradient.gradient.focal-radius.details]
en = "Returns the focal-radius of this gradient.\n\nReturns `{none}` if the gradient is not radial."
zh = "返回这个渐变的焦点半径。\n\n如果渐变不是径向，则返回 `{none}`。"

[reference.visualize.gradient.gradient.focal-radius.oneliner]
en = "Returns the focal-radius of this gradient."
zh = "返回这个渐变的焦点半径。"

[reference.visualize.gradient.gradient.focal-radius.title]
en = "Focal Radius"
zh = "焦点半径"

[reference.visualize.gradient.gradient.kind.details]
en = "Returns the kind of this gradient."
zh = "返回这个渐变的类型。"

[reference.visualize.gradient.gradient.kind.oneliner]
en = "Returns the kind of this gradient."
zh = "返回这个渐变的类型。"

[reference.visualize.gradient.gradient.kind.title]
en = "Kind"
zh = "类型"

[reference.visualize.gradient.gradient.linear.angle.details]
en = "The angle of the gradient."
zh = "渐变的角度。"

[reference.visualize.gradient.gradient.linear.details]
en = "Creates a new linear gradient, in which colors transition along a\nstraight line.\n\n"
zh = "创建一个新的线性渐变，其中颜色沿一条直线过渡。\n\n"

[reference.visualize.gradient.gradient.linear.dir.details]
en = "The direction of the gradient."
zh = "渐变的方向。"

[reference.visualize.gradient.gradient.linear.oneliner]
en = "Creates a new linear gradient, in which colors transition along a"
zh = "创建一个新的线性渐变，其中颜色沿一条直线过渡。"

[reference.visualize.gradient.gradient.linear.relative.details]
en = "The [relative placement](#relativeness) of the gradient.\n\nFor an element placed at the root/top level of the document, the\nparent is the page itself. For other elements, the parent is the\ninnermost block, box, column, grid, or stack that contains the\nelement."
zh = "渐变的位置相对于其父元素。\n\n对于放置在文档根/顶层位置的元素，父元素是页面本身。对于其他元素，父元素是包含该元素的最内层的块、框、列、网格或堆栈。"

[reference.visualize.gradient.gradient.linear.space.details]
en = "The color space in which to interpolate the gradient.\n\nDefaults to a perceptually uniform color space called\n[Oklab]($color.oklab)."
zh = "渐变插值的颜色空间。\n\n默认使用称为 [Oklab]($color.oklab) 的感知均匀颜色空间。"

[reference.visualize.gradient.gradient.linear.stops.details]
en = "The color [stops](#stops) of the gradient."
zh = "渐变的颜色 [停止点](#stops)。"

[reference.visualize.gradient.gradient.linear.title]
en = "Linear Gradient"
zh = "线性渐变"

[reference.visualize.gradient.gradient.oneliner]
en = "A color gradient."
zh = "一个颜色渐变。"

[reference.visualize.gradient.gradient.radial.center.details]
en = "The center of the end circle of the gradient.\n\nA value of `{(50%, 50%)}` means that the end circle is\ncentered inside of its container."
zh = "渐变的最后一个圆的中心。\n\n值为 `{(50%, 50%)}` 表示结束圆位于其容器内部。"

[reference.visualize.gradient.gradient.radial.details]
en = "Creates a new radial gradient, in which colors radiate away from an\norigin.\n\nThe gradient is defined by two circles: the focal circle and the end\ncircle. The focal circle is a circle with center `focal-center` and\nradius `focal-radius`, that defines the points at which the gradient\nstarts and has the color of the first stop. The end circle is a circle\nwith center `center` and radius `radius`, that defines the points at\nwhich the gradient ends and has the color of the last stop. The gradient\nis then interpolated between these two circles.\n\nUsing these four values, also called the focal point for the starting\ncircle and the center and radius for the end circle, we can define a\ngradient with more interesting properties than a basic radial gradient.\n\n"
zh = "创建一个新的径向渐变，其中颜色从原点辐射出去。\n\n渐变由两个圆定义：焦点圆和结束圆。焦点圆是一个以 `focal-center` 为圆心、`focal-radius` 为半径的圆，定义了渐变开始的位置并具有第一个停止点的颜色。结束圆是一个以 `center` 为圆心、`radius` 为半径的圆，定义了渐变结束的位置并具有最后一个停止点的颜色。然后在这两个圆之间进行插值。\n\n使用这四个值，也称为开始圆的焦点点和结束圆的中心和半径，我们可以定义一个比基本径向渐变更有趣的渐变。\n\n"

[reference.visualize.gradient.gradient.radial.focal-center.details]
en = "The center of the focal circle of the gradient.\n\nThe focal center must be inside of the end circle.\n\nA value of `{(50%, 50%)}` means that the focal circle is\ncentered inside of its container.\n\nBy default it is set to the same as the center of the last circle."
zh = "渐变的焦点圆的中心。\n\n焦点中心必须位于结束圆内部。\n\n值为 `{(50%, 50%)}` 表示焦点圆位于其容器内部。\n\n默认情况下，它设置为与最后一个圆的中心相同。"

[reference.visualize.gradient.gradient.radial.focal-radius.details]
en = "The radius of the focal circle of the gradient.\n\nThe focal center must be inside of the end circle.\n\nBy default, it is set to `{0%}`. The focal radius must be smaller\nthan the ending radius`."
zh = "渐变的焦点圆的半径。\n\n焦点中心必须位于结束圆内部。\n\n默认情况下，它设置为 `{0%}`。焦点半径必须小于结束圆的半径。"

[reference.visualize.gradient.gradient.radial.oneliner]
en = "Creates a new radial gradient, in which colors radiate away from an"
zh = "创建一个新的径向渐变，其中颜色从原点辐射出去。"

[reference.visualize.gradient.gradient.radial.radius.details]
en = "The radius of the end circle of the gradient.\n\nBy default, it is set to `{50%}`. The ending radius must be bigger\nthan the focal radius."
zh = "渐变的结束圆的半径。\n\n默认情况下，它设置为 `{50%}`。结束圆的半径必须大于焦点圆的半径。"

[reference.visualize.gradient.gradient.radial.relative.details]
en = "The [relative placement](#relativeness) of the gradient.\n\nFor an element placed at the root/top level of the document, the parent\nis the page itself. For other elements, the parent is the innermost block,\nbox, column, grid, or stack that contains the element."
zh = "渐变的位置相对于其父元素。\n\n对于放置在文档根/顶层位置的元素，父元素是页面本身。对于其他元素，父元素是包含该元素的最内层的块、框、列、网格或堆栈。"

[reference.visualize.gradient.gradient.radial.space.details]
en = "The color space in which to interpolate the gradient.\n\nDefaults to a perceptually uniform color space called\n[Oklab]($color.oklab)."
zh = "渐变插值的颜色空间。\n\n默认使用称为 [Oklab]($color.oklab) 的感知均匀颜色空间。"

[reference.visualize.gradient.gradient.radial.stops.details]
en = "The color [stops](#stops) of the gradient."
zh = "渐变的颜色 [停止点](#stops)。"

[reference.visualize.gradient.gradient.radial.title]
en = "Radial"
zh = "径向"

[reference.visualize.gradient.gradient.radius.details]
en = "Returns the radius of this gradient.\n\nReturns `{none}` if the gradient is not radial."
zh = "返回这个渐变的半径。\n\n如果渐变不是径向，则返回 `{none}`。"

[reference.visualize.gradient.gradient.radius.oneliner]
en = "Returns the radius of this gradient."
zh = "返回这个渐变的半径。"

[reference.visualize.gradient.gradient.radius.title]
en = "Radius"
zh = "半径"

[reference.visualize.gradient.gradient.relative.details]
en = "Returns the relative placement of this gradient."
zh = "返回这个渐变的位置相对于其父元素。"

[reference.visualize.gradient.gradient.relative.oneliner]
en = "Returns the relative placement of this gradient."
zh = "返回这个渐变的位置相对于其父元素。"

[reference.visualize.gradient.gradient.relative.title]
en = "Relative"
zh = "相对"

[reference.visualize.gradient.gradient.repeat.details]
en = "Repeats this gradient a given number of times, optionally mirroring it\nat each repetition.\n\n"
zh = "重复这个渐变给定次数，可选地镜像它每次重复。\n\n"

[reference.visualize.gradient.gradient.repeat.mirror.details]
en = "Whether to mirror the gradient at each repetition."
zh = "是否在每次重复时镜像渐变。"

[reference.visualize.gradient.gradient.repeat.oneliner]
en = "Repeats this gradient a given number of times, optionally mirroring it"
zh = "重复这个渐变给定次数，可选地镜像它每次重复。"

[reference.visualize.gradient.gradient.repeat.repetitions.details]
en = "The number of times to repeat the gradient."
zh = "重复渐变的次数。"

[reference.visualize.gradient.gradient.repeat.title]
en = "Repeat"
zh = "重复"

[reference.visualize.gradient.gradient.sample.details]
en = "Sample the gradient at a given position.\n\nThe position is either a position along the gradient (a [ratio] between\n`{0%}` and `{100%}`) or an [angle]. Any value outside of this range will\nbe clamped."
zh = "在给定位置采样渐变。\n\n位置可以是渐变沿线上的一点（一个 `{0%}` 和 `{100%}` 之间的 [比例]）或一个 [角度]。任何超出这个范围的值都会被钳制。"

[reference.visualize.gradient.gradient.sample.oneliner]
en = "Sample the gradient at a given position."
zh = "在给定位置采样渐变。"

[reference.visualize.gradient.gradient.sample.t.details]
en = "The position at which to sample the gradient."
zh = "在哪个位置采样渐变。"

[reference.visualize.gradient.gradient.sample.title]
en = "Sample"
zh = "采样"

[reference.visualize.gradient.gradient.samples.details]
en = "Samples the gradient at multiple positions at once and returns the\nresults as an array."
zh = "在多个位置同时采样渐变，并返回结果作为数组。"

[reference.visualize.gradient.gradient.samples.oneliner]
en = "Samples the gradient at multiple positions at once and returns the"
zh = "在多个位置同时采样渐变，并返回结果作为数组。"

[reference.visualize.gradient.gradient.samples.title]
en = "Samples"
zh = "采样"

[reference.visualize.gradient.gradient.samples.ts.details]
en = "The positions at which to sample the gradient."
zh = "在哪些位置采样渐变。"

[reference.visualize.gradient.gradient.sharp.details]
en = "Creates a sharp version of this gradient.\n\nSharp gradients have discrete jumps between colors, instead of a\nsmooth transition. They are particularly useful for creating color\nlists for a preset gradient.\n\n"
zh = "创建一个尖锐版本的渐变。\n\n尖锐渐变在颜色之间有离散的跳跃，而不是平滑的过渡。它们特别适用于为预设渐变创建颜色列表。\n\n"

[reference.visualize.gradient.gradient.sharp.oneliner]
en = "Creates a sharp version of this gradient."
zh = "创建一个尖锐版本的渐变。"

[reference.visualize.gradient.gradient.sharp.smoothness.details]
en = "How much to smooth the gradient."
zh = "如何平滑渐变。"

[reference.visualize.gradient.gradient.sharp.steps.details]
en = "The number of stops in the gradient."
zh = "渐变中的停止点数量。"

[reference.visualize.gradient.gradient.sharp.title]
en = "Sharp"
zh = "尖锐"

[reference.visualize.gradient.gradient.space.details]
en = "Returns the mixing space of this gradient."
zh = "返回这个渐变的混合空间。"

[reference.visualize.gradient.gradient.space.oneliner]
en = "Returns the mixing space of this gradient."
zh = "返回这个渐变的混合空间。"

[reference.visualize.gradient.gradient.space.title]
en = "Space"
zh = "空间"

[reference.visualize.gradient.gradient.stops.details]
en = "Returns the stops of this gradient."
zh = "返回这个渐变的停止点。"

[reference.visualize.gradient.gradient.stops.oneliner]
en = "Returns the stops of this gradient."
zh = "返回这个渐变的停止点。"

[reference.visualize.gradient.gradient.stops.title]
en = "Stops"
zh = "停止点"

[reference.visualize.gradient.gradient.title]
en = "Gradient"
zh = "渐变"

[reference.visualize.gradient.oneliner]
en = "A color gradient."
zh = "一个颜色渐变。"

[reference.visualize.gradient.title]
en = "Gradient"
zh = "渐变"

[reference.visualize.image.description]
en = "Documentation for the `image` function."
zh = "`image` 函数的文档。"

[reference.visualize.image.image.alt.details]
en = "A text describing the image."
zh = "一个描述图像的文本。"

[reference.visualize.image.image.decode.alt.details]
en = "A text describing the image."
zh = "一个描述图像的文本。"

[reference.visualize.image.image.decode.data.details]
en = "The data to decode as an image. Can be a string for SVGs."
zh = "要解码为图像的数据。可以是 SVG 的字符串。"

[reference.visualize.image.image.decode.deprecation]
en = "`image.decode` is deprecated, directly pass bytes to `image` instead"
zh = "`image.decode` 已弃用，直接传递字节到 `image` 函数。"

[reference.visualize.image.image.decode.details]
en = "Decode a raster or vector graphic from bytes or a string."
zh = "从字节或字符串解码一个光栅或矢量图形。"

[reference.visualize.image.image.decode.fit.details]
en = "How the image should adjust itself to a given area."
zh = "图像如何适应给定区域。"

[reference.visualize.image.image.decode.format.details]
en = "The image's format. Detected automatically by default."
zh = "图像的格式。默认情况下自动检测。"

[reference.visualize.image.image.decode.height.details]
en = "The height of the image."
zh = "图像的高度。"

[reference.visualize.image.image.decode.oneliner]
en = "Decode a raster or vector graphic from bytes or a string."
zh = "从字节或字符串解码一个光栅或矢量图形。"

[reference.visualize.image.image.decode.scaling.details]
en = "A hint to viewers how they should scale the image."
zh = "提示观众如何缩放图像。"

[reference.visualize.image.image.decode.title]
en = "Decode Image"
zh = "解码图像"

[reference.visualize.image.image.decode.width.details]
en = "The width of the image."
zh = "图像的宽度。"

[reference.visualize.image.image.details]
en = "A raster or vector graphic.\n\nYou can wrap the image in a [`figure`] to give it a number and caption.\n\nLike most elements, images are _block-level_ by default and thus do not\nintegrate themselves into adjacent paragraphs. To force an image to become\ninline, put it into a [`box`].\n\n# Example\n```example\n#figure(\n  image(\"molecular.jpg\", width: 80%),\n  caption: [\n    A step in the molecular testing\n    pipeline of our lab.\n  ],\n)\n```"
zh = "一个光栅或矢量图形。\n\n你可以将图像包裹在 [`figure`] 中，给它一个编号和标题。\n\n与大多数元素一样，图像默认是 _块级_ 的，因此不会与相邻段落集成。要强制图像成为内联，将其放入 [`box`] 中。\n\n# 示例\n```example\n#figure(\n  image(\"molecular.jpg\", width: 80%),\n  caption: [\n    我们实验室分子测试\n    流程中的一个步骤。\n  ],\n)\n```"

[reference.visualize.image.image.fit.details]
en = "How the image should adjust itself to a given area (the area is defined\nby the `width` and `height` fields). Note that `fit` doesn't visually\nchange anything if the area's aspect ratio is the same as the image's\none.\n\n"
zh = "图像如何适应给定区域（区域由 `width` 和 `height` 字段定义）。注意，如果区域的宽高比与图像的宽高比相同，`fit` 不会视觉上改变任何东西。\n\n"

[reference.visualize.image.image.format.details]
en = "{{typst-docs/reference.visualize.image.image.format.details.toml}}"

[reference.visualize.image.image.height.details]
en = "The height of the image."
zh = "图像的高度。"

[reference.visualize.image.image.icc.details]
en = "An ICC profile for the image.\n\nICC profiles define how to interpret the colors in an image. When set\nto `{auto}`, Typst will try to extract an ICC profile from the image."
zh = "一个 ICC 配置文件用于图像。\n\nICC 配置文件定义了如何解释图像中的颜色。当设置为 `{auto}` 时，Typst 会尝试从图像中提取 ICC 配置文件。"

[reference.visualize.image.image.oneliner]
en = "A raster or vector graphic."
zh = "一个光栅或矢量图形。"

[reference.visualize.image.image.scaling.details]
en = "A hint to viewers how they should scale the image.\n\nWhen set to `{auto}`, the default is left up to the viewer. For PNG\nexport, Typst will default to smooth scaling, like most PDF and SVG\nviewers.\n\n_Note:_ The exact look may differ across PDF viewers."
zh = "提示观众如何缩放图像。\n\n当设置为 `{auto}` 时，默认由观众决定。对于 PNG 导出，Typst 默认使用平滑缩放，就像大多数 PDF 和 SVG 查看器一样。\n\n_注意:_ 在不同的 PDF 查看器中，精确的外观可能会有所不同。"

[reference.visualize.image.image.source.details]
en = "A [path]($syntax/#paths) to an image file or raw bytes making up an\nimage in one of the supported [formats]($image.format).\n\nBytes can be used to specify raw pixel data in a row-major,\nleft-to-right, top-to-bottom format.\n\n"
zh = "一个 [路径]($syntax/#paths) 到图像文件或构成图像的原始字节，支持的 [格式]($image.format) 之一。\n\n字节可以用于指定行主格式、从左到右、从上到下的原始像素数据。\n\n"

[reference.visualize.image.image.title]
en = "Image"
zh = "图像"

[reference.visualize.image.image.width.details]
en = "The width of the image."
zh = "图像的宽度。"

[reference.visualize.image.oneliner]
en = "A raster or vector graphic."
zh = "一个光栅或矢量图形。"

[reference.visualize.image.title]
en = "Image"
zh = "图像"

[reference.visualize.line.description]
en = "Documentation for the `line` function."
zh = "`line` 函数的文档。"

[reference.visualize.line.line.angle.details]
en = "The angle at which the line points away from the origin. This is only\nrespected if `end` is `{none}`."
zh = "线从原点指向的方向的角度。只有在 `end` 为 `{none}` 时才被尊重。"

[reference.visualize.line.line.details]
en = "A line from one point to another.\n\n# Example\n```example\n#set page(height: 100pt)\n\n#line(length: 100%)\n#line(end: (50%, 50%))\n#line(\n  length: 4cm,\n  stroke: 2pt + maroon,\n)\n```"
zh = "从一点到另一点的线。\n\n# 示例\n```example\n#set page(height: 100pt)\n\n#line(length: 100%)\n#line(end: (50%, 50%))\n#line(\n  length: 4cm,\n  stroke: 2pt + maroon,\n)\n```"

[reference.visualize.line.line.end.details]
en = "The point where the line ends."
zh = "线结束的位置。"

[reference.visualize.line.line.length.details]
en = "The line's length. This is only respected if `end` is `{none}`."
zh = "线的长度。只有在 `end` 为 `{none}` 时才被尊重。"

[reference.visualize.line.line.oneliner]
en = "A line from one point to another."
zh = "从一点到另一点的线。"

[reference.visualize.line.line.start.details]
en = "The start point of the line.\n\nMust be an array of exactly two relative lengths."
zh = "线的起点。\n\n必须是一个包含两个相对长度的数组。"

[reference.visualize.line.line.stroke.details]
en = "How to [stroke] the line.\n\n"
zh = "如何 [stroke] 线。\n\n"

[reference.visualize.line.line.title]
en = "Line"
zh = "线"

[reference.visualize.line.oneliner]
en = "A line from one point to another."
zh = "从一点到另一点的线。"

[reference.visualize.line.title]
en = "Line"
zh = "线"

[reference.visualize.path.description]
en = "Documentation for the `path` function."
zh = "`path` 函数的文档。"

[reference.visualize.path.oneliner]
en = "A path through a list of points, connected by Bézier curves."
zh = "通过一系列点，由 Bézier 曲线连接的路径。"

[reference.visualize.path.path.closed.details]
en = "Whether to close this path with one last Bézier curve. This curve will\ntake into account the adjacent control points. If you want to close\nwith a straight line, simply add one last point that's the same as the\nstart point."
zh = "是否用最后一个 Bézier 曲线闭合这个路径。这个曲线会考虑相邻的控制点。如果你想用一条直线闭合，只需添加一个与起点相同的最后一个点。"

[reference.visualize.path.path.deprecation]
en = "the `path` function is deprecated, use `curve` instead"
zh = "`path` 函数已弃用，请使用 `curve` 代替"

[reference.visualize.path.path.details]
en = "A path through a list of points, connected by Bézier curves.\n\n# Example\n```example\n#path(\n  fill: blue.lighten(80%),\n  stroke: blue,\n  closed: true,\n  (0pt, 50pt),\n  (100%, 50pt),\n  ((50%, 0pt), (40pt, 0pt)),\n)\n```"
zh = "通过一系列点，由 Bézier 曲线连接的路径。\n\n# 示例\n```example\n#path(\n  fill: blue.lighten(80%),\n  stroke: blue,\n  closed: true,\n  (0pt, 50pt),\n  (100%, 50pt),\n  ((50%, 0pt), (40pt, 0pt)),\n)\n```"

[reference.visualize.path.path.fill-rule.details]
en = "The drawing rule used to fill the path.\n\n"
zh = "用于填充路径的绘制规则。\n\n"

[reference.visualize.path.path.fill.details]
en = "How to fill the path.\n\nWhen setting a fill, the default stroke disappears. To create a\nrectangle with both fill and stroke, you have to configure both."
zh = "如何填充路径。\n\n当设置填充时，默认的描边会消失。要创建一个同时具有填充和描边的矩形，你必须配置两者。"

[reference.visualize.path.path.oneliner]
en = "A path through a list of points, connected by Bézier curves."
zh = "通过一系列点，由 Bézier 曲线连接的路径。"

[reference.visualize.path.path.stroke.details]
en = "How to [stroke] the path. This can be:\n\nCan be set to  `{none}` to disable the stroke or to `{auto}` for a\nstroke of `{1pt}` black if and if only if no fill is given."
zh = "如何 [stroke] 路径。这可以是：\n\n可以设置为 `{none}` 来禁用描边，或者设置为 `{auto}` 来为没有填充的描边设置 `{1pt}` 黑色的描边。"

[reference.visualize.path.path.title]
en = "Path"
zh = "路径"

[reference.visualize.path.path.vertices.details]
en = "The vertices of the path.\n\nEach vertex can be defined in 3 ways:\n\n- A regular point, as given to the [`line`] or [`polygon`] function.\n- An array of two points, the first being the vertex and the second\n  being the control point. The control point is expressed relative to\n  the vertex and is mirrored to get the second control point. The given\n  control point is the one that affects the curve coming _into_ this\n  vertex (even for the first point). The mirrored control point affects\n  the curve going out of this vertex.\n- An array of three points, the first being the vertex and the next\n  being the control points (control point for curves coming in and out,\n  respectively)."
zh = "路径的顶点。\n\n每个顶点可以以三种方式定义：\n\n- 一个常规点，如 [`line`] 或 [`polygon`] 函数所给定的。\n- 一个包含两个点的数组，第一个点是顶点，第二个点是控制点。控制点相对于顶点表达，并通过镜像得到第二个控制点。给定的控制点是影响进入这个顶点的曲线（即使是第一个点）的控制点。镜像的控制点影响从这个顶点出来的曲线。\n- 一个包含三个点的数组，第一个点是顶点，接下来是控制点（分别对应进入和出来的曲线）。"

[reference.visualize.path.title]
en = "Path"
zh = "路径"

[reference.visualize.polygon.description]
en = "Documentation for the `polygon` function."
zh = "`polygon` 函数的文档。"

[reference.visualize.polygon.oneliner]
en = "A closed polygon."
zh = "一个闭合的多边形。"

[reference.visualize.polygon.polygon.details]
en = "A closed polygon.\n\nThe polygon is defined by its corner points and is closed automatically.\n\n# Example\n```example\n#polygon(\n  fill: blue.lighten(80%),\n  stroke: blue,\n  (20%, 0pt),\n  (60%, 0pt),\n  (80%, 2cm),\n  (0%,  2cm),\n)\n```"
zh = "一个闭合的多边形。\n\n多边形由其角点定义，并自动闭合。\n\n# 示例\n```example\n#polygon(\n  fill: blue.lighten(80%),\n  stroke: blue,\n  (20%, 0pt),\n  (60%, 0pt),\n  (80%, 2cm),\n  (0%,  2cm),\n)\n```"

[reference.visualize.polygon.polygon.fill-rule.details]
en = "The drawing rule used to fill the polygon.\n\nSee the [curve documentation]($curve.fill-rule) for an example."
zh = "用于填充多边形的绘制规则。\n\n请参阅 [curve 文档]($curve.fill-rule) 以获取示例。"

[reference.visualize.polygon.polygon.fill.details]
en = "How to fill the polygon.\n\nWhen setting a fill, the default stroke disappears. To create a\nrectangle with both fill and stroke, you have to configure both."
zh = "如何填充多边形。\n\n当设置填充时，默认的描边会消失。要创建一个同时具有填充和描边的矩形，你必须配置两者。"

[reference.visualize.polygon.polygon.oneliner]
en = "A closed polygon."
zh = "一个闭合的多边形。"

[reference.visualize.polygon.polygon.regular.details]
en = "A regular polygon, defined by its size and number of vertices.\n\n"
zh = "一个正多边形，由其大小和顶点数定义。\n\n"

[reference.visualize.polygon.polygon.regular.fill.details]
en = "How to fill the polygon. See the general\n[polygon's documentation]($polygon.fill) for more details."
zh = "如何填充多边形。请参阅 [polygon 文档]($polygon.fill) 以获取更多详细信息。"

[reference.visualize.polygon.polygon.regular.oneliner]
en = "A regular polygon, defined by its size and number of vertices."
zh = "一个正多边形，由其大小和顶点数定义。"

[reference.visualize.polygon.polygon.regular.size.details]
en = "The diameter of the [circumcircle](https://en.wikipedia.org/wiki/Circumcircle)\nof the regular polygon."
zh = "正多边形的 [外接圆](https://en.wikipedia.org/wiki/Circumcircle) 的直径。"

[reference.visualize.polygon.polygon.regular.stroke.details]
en = "How to stroke the polygon. See the general\n[polygon's documentation]($polygon.stroke) for more details."
zh = "如何描边多边形。请参阅 [polygon 文档]($polygon.stroke) 以获取更多详细信息。"

[reference.visualize.polygon.polygon.regular.title]
en = "Regular Polygon"
zh = "正多边形"

[reference.visualize.polygon.polygon.regular.vertices.details]
en = "The number of vertices in the polygon."
zh = "多边形的顶点数。"

[reference.visualize.polygon.polygon.stroke.details]
en = "How to [stroke] the polygon. This can be:\n\nCan be set to  `{none}` to disable the stroke or to `{auto}` for a\nstroke of `{1pt}` black if and if only if no fill is given."
zh = "如何 [stroke] 多边形。这可以是：\n\n可以设置为 `{none}` 来禁用描边，或者设置为 `{auto}` 来为没有填充的描边设置 `{1pt}` 黑色的描边。"

[reference.visualize.polygon.polygon.title]
en = "Polygon"
zh = "多边形"

[reference.visualize.polygon.polygon.vertices.details]
en = "The vertices of the polygon. Each point is specified as an array of two\n[relative lengths]($relative)."
zh = "多边形的顶点。每个点指定为两个 [相对长度]($relative) 的数组。"

[reference.visualize.polygon.title]
en = "Polygon"
zh = "多边形"

[reference.visualize.rect.description]
en = "Documentation for the `rect` function."
zh = "`rect` 函数的文档。"

[reference.visualize.rect.oneliner]
en = "A rectangle with optional content."
zh = "一个带有可选内容的矩形。"

[reference.visualize.rect.rect.body.details]
en = "The content to place into the rectangle.\n\nWhen this is omitted, the rectangle takes on a default size of at most\n`{45pt}` by `{30pt}`."
zh = "要放置到矩形中的内容。\n\n当省略时，矩形采用最多 `{45pt}` 宽和 `{30pt}` 高的默认大小。"

[reference.visualize.rect.rect.details]
en = "A rectangle with optional content.\n\n# Example\n```example\n// Without content.\n#rect(width: 35%, height: 30pt)\n\n// With content.\n#rect[\n  Automatically sized \\\n  to fit the content.\n]\n```"
zh = "一个带有可选内容的矩形。\n\n# 示例\n```example\n// 没有内容。\n#rect(width: 35%, height: 30pt)\n\n// 有内容。\n#rect[\n  自动调整大小 \\\n  以适应内容。\n]\n```"

[reference.visualize.rect.rect.fill.details]
en = "How to fill the rectangle.\n\nWhen setting a fill, the default stroke disappears. To create a\nrectangle with both fill and stroke, you have to configure both.\n\n"
zh = "如何填充矩形。\n\n当设置填充时，默认的描边会消失。要创建一个同时具有填充和描边的矩形，你必须配置两者。\n\n"

[reference.visualize.rect.rect.height.details]
en = "The rectangle's height, relative to its parent container."
zh = "矩形的高度，相对于其父容器。"

[reference.visualize.rect.rect.inset.details]
en = "How much to pad the rectangle's content.\nSee the [box's documentation]($box.outset) for more details."
zh = "矩形内容的内边距。\n请参阅 [box 文档]($box.outset) 以获取更多详细信息。"

[reference.visualize.rect.rect.oneliner]
en = "A rectangle with optional content."
zh = "一个带有可选内容的矩形。"

[reference.visualize.rect.rect.outset.details]
en = "How much to expand the rectangle's size without affecting the layout.\nSee the [box's documentation]($box.outset) for more details."
zh = "如何扩展矩形的大小而不影响布局。\n请参阅 [box 文档]($box.outset) 以获取更多详细信息。"

[reference.visualize.rect.rect.radius.details]
en = "How much to round the rectangle's corners, relative to the minimum of\nthe width and height divided by two. This can be:\n\n- A relative length for a uniform corner radius.\n- A dictionary: With a dictionary, the stroke for each side can be set\n  individually. The dictionary can contain the following keys in order\n  of precedence:\n  - `top-left`: The top-left corner radius.\n  - `top-right`: The top-right corner radius.\n  - `bottom-right`: The bottom-right corner radius.\n  - `bottom-left`: The bottom-left corner radius.\n  - `left`: The top-left and bottom-left corner radii.\n  - `top`: The top-left and top-right corner radii.\n  - `right`: The top-right and bottom-right corner radii.\n  - `bottom`: The bottom-left and bottom-right corner radii.\n  - `rest`: The radii for all corners except those for which the\n    dictionary explicitly sets a size.\n\n"
zh = "如何圆化矩形的角，相对于宽度和高度除以二的最小值。这可以是：\n\n- 一个相对长度的统一圆角。\n- 一个「字典」（[dictionary](#x-term-dictionary)）：使用字典，可以单独设置每条边的描边。字典可以包含以下键，按优先级顺序排列：\n  - `top-left`: 左上角的圆角。\n  - `top-right`: 右上角的圆角。\n  - `bottom-right`: 右下角的圆角。\n  - `bottom-left`: 左下角的圆角。\n  - `left`: 左上角和左下角的圆角。\n  - `top`: 左上角和右上角的圆角。\n  - `right`: 右上角和右下角的圆角。\n  - `bottom`: 左下角和右下角的圆角。\n  - `rest`: 所有圆角，除了那些字典明确设置大小的圆角。\n\n"

[reference.visualize.rect.rect.stroke.details]
en = "How to stroke the rectangle. This can be:\n\n- `{none}` to disable stroking\n- `{auto}` for a stroke of `{1pt + black}` if and if only if no fill is\n  given.\n- Any kind of [stroke]\n- A dictionary describing the stroke for each side individually. The\n  dictionary can contain the following keys in order of precedence:\n  - `top`: The top stroke.\n  - `right`: The right stroke.\n  - `bottom`: The bottom stroke.\n  - `left`: The left stroke.\n  - `x`: The horizontal stroke.\n  - `y`: The vertical stroke.\n  - `rest`: The stroke on all sides except those for which the\n    dictionary explicitly sets a size.\n\n"
zh = "如何描边矩形。这可以是：\n\n- `{none}` 来禁用描边\n- `{auto}` 为没有填充的描边设置 `{1pt + black}`\n- 任何类型的 [stroke]\n- 一个「字典」（[dictionary](#x-term-dictionary)），描述每条边的描边。字典可以包含以下键，按优先级顺序排列：\n  - `top`: 顶部描边。\n  - `right`: 右侧描边。\n  - `bottom`: 底部描边。\n  - `left`: 左侧描边。\n  - `x`: 水平描边。\n  - `y`: 垂直描边。\n  - `rest`: 所有边，除了那些字典明确设置大小的边。\n\n"

[reference.visualize.rect.rect.title]
en = "Rectangle"
zh = "矩形"

[reference.visualize.rect.rect.width.details]
en = "The rectangle's width, relative to its parent container."
zh = "矩形的宽度，相对于其父容器。"

[reference.visualize.rect.title]
en = "Rectangle"
zh = "矩形"

[reference.visualize.square.description]
en = "Documentation for the `square` function."
zh = "`square` 函数的文档。"

[reference.visualize.square.oneliner]
en = "A square with optional content."
zh = "一个带有可选内容的正方形。"

[reference.visualize.square.square.body.details]
en = "The content to place into the square. The square expands to fit this\ncontent, keeping the 1-1 aspect ratio.\n\nWhen this is omitted, the square takes on a default size of at most\n`{30pt}`."
zh = "要放置到正方形中的内容。正方形扩展以适应这个内容，保持 1:1 的宽高比。\n\n当省略时，正方形采用最多 `{30pt}` 宽和 `{30pt}` 高的默认大小。"

[reference.visualize.square.square.details]
en = "A square with optional content.\n\n# Example\n```example\n// Without content.\n#square(size: 40pt)\n\n// With content.\n#square[\n  Automatically \\\n  sized to fit.\n]\n```"
zh = "一个带有可选内容的正方形。\n\n# 示例\n```example\n// 没有内容。\n#square(size: 40pt)\n\n// 有内容。\n#square[\n  自动调整大小 \\\n  以适应。\n]\n```"

[reference.visualize.square.square.fill.details]
en = "How to fill the square. See the [rectangle's documentation]($rect.fill)\nfor more details."
zh = "如何填充正方形。请参阅 [rectangle 文档]($rect.fill) 以获取更多详细信息。"

[reference.visualize.square.square.height.details]
en = "The square's height. This is mutually exclusive with `size` and `width`.\n\nIn contrast to `size`, this can be relative to the parent container's\nheight."
zh = "正方形的高度。这与 `size` 和 `width` 互斥。\n\n与 `size` 相反，这可以是相对于父容器的高度。"

[reference.visualize.square.square.inset.details]
en = "How much to pad the square's content. See the\n[box's documentation]($box.inset) for more details."
zh = "正方形内容的内边距。请参阅 [box 文档]($box.inset) 以获取更多详细信息。"

[reference.visualize.square.square.oneliner]
en = "A square with optional content."
zh = "一个带有可选内容的正方形。"

[reference.visualize.square.square.outset.details]
en = "How much to expand the square's size without affecting the layout. See\nthe [box's documentation]($box.outset) for more details."
zh = "如何扩展正方形的大小而不影响布局。请参阅 [box 文档]($box.outset) 以获取更多详细信息。"

[reference.visualize.square.square.radius.details]
en = "How much to round the square's corners. See the\n[rectangle's documentation]($rect.radius) for more details."
zh = "如何圆化正方形的角。请参阅 [rectangle 文档]($rect.radius) 以获取更多详细信息。"

[reference.visualize.square.square.size.details]
en = "The square's side length. This is mutually exclusive with `width` and\n`height`."
zh = "正方形的边长。这与 `width` 和 `height` 互斥。"

[reference.visualize.square.square.stroke.details]
en = "How to stroke the square. See the\n[rectangle's documentation]($rect.stroke) for more details."
zh = "如何描边正方形。请参阅 [rectangle 文档]($rect.stroke) 以获取更多详细信息。"

[reference.visualize.square.square.title]
en = "Square"
zh = "正方形"

[reference.visualize.square.square.width.details]
en = "The square's width. This is mutually exclusive with `size` and `height`.\n\nIn contrast to `size`, this can be relative to the parent container's\nwidth."
zh = "正方形的宽度。这与 `size` 和 `height` 互斥。\n\n与 `size` 相反，这可以是相对于父容器的宽度。"

[reference.visualize.square.title]
en = "Square"
zh = "正方形"

[reference.visualize.stroke.description]
en = "Documentation for the Stroke type."
zh = "Stroke 类型的文档。"

[reference.visualize.stroke.oneliner]
en = "Defines how to draw a line."
zh = "定义如何绘制线条。"

[reference.visualize.stroke.stroke.details]
en = "{{typst-docs/reference.visualize.stroke.stroke.details.toml}}"

[reference.visualize.stroke.stroke.oneliner]
en = "Defines how to draw a line."
zh = "定义如何绘制线条。"

[reference.visualize.stroke.stroke.stroke.cap.details]
en = "How the ends of the stroke are rendered.\n\nIf set to `{auto}`, the value is inherited, defaulting to `{\"butt\"}`."
zh = "线条的端点如何渲染。\n\n如果设置为 `{auto}`, 值是继承的，默认为 `{\"butt\"}`。"

[reference.visualize.stroke.stroke.stroke.dash.details]
en = "The dash pattern to use. This can be:\n\n- One of the predefined patterns:\n  - `{\"solid\"}` or `{none}`\n  - `{\"dotted\"}`\n  - `{\"densely-dotted\"}`\n  - `{\"loosely-dotted\"}`\n  - `{\"dashed\"}`\n  - `{\"densely-dashed\"}`\n  - `{\"loosely-dashed\"}`\n  - `{\"dash-dotted\"}`\n  - `{\"densely-dash-dotted\"}`\n  - `{\"loosely-dash-dotted\"}`\n- An [array] with alternating lengths for dashes and gaps. You can\n  also use the string `{\"dot\"}` for a length equal to the line\n  thickness.\n- A [dictionary] with the keys `array` (same as the array above),\n  and `phase` (of type [length]), which defines where in the pattern\n  to start drawing.\n\nIf set to `{auto}`, the value is inherited, defaulting to `{none}`.\n\n"
zh = "要使用的虚线模式。这可以是：\n\n- 一个预定义的模式：\n  - `{\"solid\"}` 或 `{none}`\n  - `{\"dotted\"}`\n  - `{\"densely-dotted\"}`\n  - `{\"loosely-dotted\"}`\n  - `{\"dashed\"}`\n  - `{\"densely-dashed\"}`\n  - `{\"loosely-dashed\"}`\n  - `{\"dash-dotted\"}`\n  - `{\"densely-dash-dotted\"}`\n  - `{\"loosely-dash-dotted\"}`\n- 一个 [array]，包含交替的虚线和间隙的长度。你也可以使用字符串 `{\"dot\"}` 来表示与线条厚度相等的长度。\n- 一个 [dictionary]，包含键 `array`（与上面的数组相同）和 `phase`（类型为 [length]），定义在模式中开始绘制的起始位置。\n\n如果设置为 `{auto}`, 值是继承的，默认为 `{none}`。\n\n"

[reference.visualize.stroke.stroke.stroke.details]
en = "Converts a value to a stroke or constructs a stroke with the given\nparameters.\n\nNote that in most cases you do not need to convert values to strokes in\norder to use them, as they will be converted automatically. However,\nthis constructor can be useful to ensure a value has all the fields of a\nstroke.\n\n"
zh = "将一个值转换为描边或使用给定的「参数」（[parameter](#x-term-parameter)）构造一个描边。\n\n请注意，在大多数情况下，你不需要将值转换为描边来使用它们，因为它们会自动转换。然而，这个构造函数可以用于确保一个值具有描边的所有字段。\n\n"

[reference.visualize.stroke.stroke.stroke.join.details]
en = "How sharp turns are rendered.\n\nIf set to `{auto}`, the value is inherited, defaulting to `{\"miter\"}`."
zh = "如何渲染尖锐的转弯。\n\n如果设置为 `{auto}`, 值是继承的，默认为 `{\"miter\"}`。"

[reference.visualize.stroke.stroke.stroke.miter-limit.details]
en = "Number at which protruding sharp bends are rendered with a bevel\ninstead or a miter join. The higher the number, the sharper an angle\ncan be before it is bevelled. Only applicable if `join` is\n`{\"miter\"}`.\n\nSpecifically, the miter limit is the maximum ratio between the\ncorner's protrusion length and the stroke's thickness.\n\nIf set to `{auto}`, the value is inherited, defaulting to `{4.0}`.\n\n"
zh = "在凸出的尖锐弯曲处渲染为斜接而不是斜接的数字。数字越高，在斜接之前可以有多尖锐的角度。仅适用于 `join` 为 `{\"miter\"}` 的情况。\n\n具体来说，斜接限制是角部的凸出长度与描边厚度之间的最大比率。\n\n如果设置为 `{auto}`, 值是继承的，默认为 `{4.0}`。\n\n"

[reference.visualize.stroke.stroke.stroke.oneliner]
en = "Converts a value to a stroke or constructs a stroke with the given"
zh = "将一个值转换为描边或使用给定的参数构造一个描边。"

[reference.visualize.stroke.stroke.stroke.paint.details]
en = "The color or gradient to use for the stroke.\n\nIf set to `{auto}`, the value is inherited, defaulting to `{black}`."
zh = "用于描边的颜色或渐变。\n\n如果设置为 `{auto}`, 值是继承的，默认为 `{black}`。"

[reference.visualize.stroke.stroke.stroke.thickness.details]
en = "The stroke's thickness.\n\nIf set to `{auto}`, the value is inherited, defaulting to `{1pt}`."
zh = "描边的厚度。\n\n如果设置为 `{auto}`, 值是继承的，默认为 `{1pt}`。"

[reference.visualize.stroke.stroke.stroke.title]
en = "Construct"
zh = "构造"

[reference.visualize.stroke.stroke.title]
en = "Stroke"
zh = "描边"

[reference.visualize.stroke.title]
en = "Stroke"
zh = "描边"

[reference.visualize.tiling.description]
en = "Documentation for the Tiling type."
zh = "Tiling 类型的文档。"

[reference.visualize.tiling.oneliner]
en = "A repeating tiling fill."
zh = "一个重复的平铺填充。"

[reference.visualize.tiling.tiling.details]
en = "{{typst-docs/reference.visualize.tiling.tiling.details.toml}}"

[reference.visualize.tiling.tiling.oneliner]
en = "A repeating tiling fill."
zh = "一个重复的平铺填充。"

[reference.visualize.tiling.tiling.tiling.body.details]
en = "The content of each cell of the tiling."
zh = "平铺中每个单元格的内容。"

[reference.visualize.tiling.tiling.tiling.details]
en = "Construct a new tiling.\n\n"
zh = "构造一个新的平铺。\n\n"

[reference.visualize.tiling.tiling.tiling.oneliner]
en = "Construct a new tiling."
zh = "构造一个新的平铺。"

[reference.visualize.tiling.tiling.tiling.relative.details]
en = "The [relative placement](#relativeness) of the tiling.\n\nFor an element placed at the root/top level of the document, the\nparent is the page itself. For other elements, the parent is the\ninnermost block, box, column, grid, or stack that contains the\nelement."
zh = "平铺的 [相对放置]($relativeness)。\n\n对于放置在文档根/顶层级别的元素，父级是页面本身。对于其他元素，父级是包含该元素的最内层的块、框、列、网格或堆栈。"

[reference.visualize.tiling.tiling.tiling.size.details]
en = "The bounding box of each cell of the tiling."
zh = "平铺中每个单元格的边界框。"

[reference.visualize.tiling.tiling.tiling.spacing.details]
en = "The spacing between cells of the tiling."
zh = "平铺中单元格之间的间距。"

[reference.visualize.tiling.tiling.tiling.title]
en = "Construct"
zh = "构造"

[reference.visualize.tiling.tiling.title]
en = "Tiling"
zh = "平铺"

[reference.visualize.tiling.title]
en = "Tiling"
zh = "平铺"

[reference.visualize.title]
en = "Visualize"
zh = "可视化"

[reference.visualize.visualize.details]
en = "Drawing and data visualization.\n\nIf you want to create more advanced drawings or plots, also have a look at the\n[CetZ](https://github.com/johannes-wolf/cetz) package as well as more\nspecialized [packages]($universe) for your use case.\n"
zh = "绘图和数据可视化。\n\n如果你想创建更高级的绘图或图表，也可以看看 [CetZ](https://github.com/johannes-wolf/cetz) 包以及更多针对你使用场景的 [包]($universe)。\n"

[reference.visualize.visualize.title]
en = "Visualize"
zh = "可视化"

[tutorial.advanced-styling.body]
en = "{{typst-docs/tutorial.advanced-styling.body.toml}}"

[tutorial.advanced-styling.description]
en = "Typst's tutorial."
zh = "Typst 的教程。"

[tutorial.advanced-styling.title]
en = "Advanced Styling"
zh = "高级样式"

[tutorial.body]
en = "{{typst-docs/tutorial.body.toml}}"

[tutorial.description]
en = "Typst's tutorial."
zh = "Typst 的教程。"

[tutorial.formatting.body]
en = "{{typst-docs/tutorial.formatting.body.toml}}"

[tutorial.formatting.description]
en = "Typst's tutorial."
zh = "Typst 的教程。"

[tutorial.formatting.title]
en = "Formatting"
zh = "格式化"

[tutorial.making-a-template.body]
en = "{{typst-docs/tutorial.making-a-template.body.toml}}"

[tutorial.making-a-template.description]
en = "Typst's tutorial."
zh = "Typst 的教程"

[tutorial.making-a-template.title]
en = "Making a Template"
zh = "制作模板"

[tutorial.title]
en = "Tutorial"
zh = "教程"

[tutorial.writing-in-typst.body]
en = "{{typst-docs/tutorial.writing-in-typst.body.toml}}"

[tutorial.writing-in-typst.description]
en = "Typst's tutorial."
zh = "Typst 的教程"

[tutorial.writing-in-typst.title]
en = "Writing in Typst"
zh = "在 Typst 中写作"
