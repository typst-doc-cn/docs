
[[main]]
en = """Describes a kind of value."""

[[main]]
en = """To style your document, you need to work with values of different kinds:
Lengths specifying the size of your elements, colors for your text and
shapes, and more. Typst categorizes these into clearly defined _types_ and
tells you where it expects which type of value."""

[[main]]
en = """Apart from basic types for numeric values and [typical]($int)
[types]($float) [known]($str) [from]($array) [programming]($dictionary)
languages, Typst provides a special type for [_content._]($content) A value
of this type can hold anything that you can enter into your document: Text,
elements like headings and shapes, and style information."""

[[main]]
en = """# Example
```example
#let x = 10
#if type(x) == int [
  #x is an integer!
] else [
  #x is another value...
]"""

[[main]]
en = """An image is of type
#type(image(\\"glacier.jpg\\")).
```"""

[[main]]
en = """The type of `10` is `int`. Now, what is the type of `int` or even `type`?
```example
#type(int) \\\\
#type(type)
```"""

[[main]]
en = """# Compatibility
In Typst 0.7 and lower, the `type` function returned a string instead of a
type. Compatibility with the old way will remain until Typst 0.14 to give
package authors time to upgrade."""

[[main]]
en = """- Checks like `{int == \\"integer\\"}` evaluate to `{true}`
- Adding/joining a type and string will yield a string
- The `{in}` operator on a type and a dictionary will evaluate to `{true}`
  if the dictionary has a string key matching the type's name"""
